{
  "version": 3,
  "sources": ["../../gsplat/src/math/Vector3.ts", "../../gsplat/src/math/Quaternion.ts", "../../gsplat/src/events/EventDispatcher.ts", "../../gsplat/src/math/Matrix4.ts", "../../gsplat/src/events/Events.ts", "../../gsplat/src/core/Object3D.ts", "../../gsplat/src/math/Matrix3.ts", "../../gsplat/src/splats/SplatData.ts", "../../gsplat/src/utils/Converter.ts", "../../gsplat/src/splats/Splat.ts", "../../gsplat/src/cameras/CameraData.ts", "../../gsplat/src/math/Vector4.ts", "../../gsplat/src/cameras/Camera.ts", "../../gsplat/src/core/Scene.ts", "../../gsplat/src/utils/LoaderUtils.ts", "../../gsplat/src/loaders/Loader.ts", "../../gsplat/src/loaders/PLYLoader.ts", "../../gsplat/src/renderers/webgl/programs/ShaderProgram.ts", "../../gsplat/src/wasm/data.js", "../../gsplat/src/renderers/webgl/utils/RenderData.ts", "../../gsplat/src/math/Color32.ts", "../../gsplat/src/renderers/webgl/programs/RenderProgram.ts", "../../gsplat/src/renderers/webgl/passes/FadeInPass.ts", "../../gsplat/src/renderers/WebGLRenderer.ts", "../../gsplat/src/controls/OrbitControls.ts", "../../gsplat/src/math/Plane.ts", "../../gsplat/src/renderers/webgl/passes/ShaderPass.ts", "../../gsplat/src/wasm/intersect.js", "../../gsplat/src/renderers/webgl/utils/IntersectionTester.ts"],
  "sourcesContent": ["import { Matrix4 } from \"./Matrix4\";\n\nclass Vector3 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector3;\n    add(v: Vector3): Vector3;\n    add(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    subtract(v: number): Vector3;\n    subtract(v: Vector3): Vector3;\n    subtract(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    multiply(v: number): Vector3;\n    multiply(v: Vector3): Vector3;\n    multiply(v: Matrix4): Vector3;\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else if (v instanceof Vector3) {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        } else {\n            return new Vector3(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\n            );\n        }\n    }\n\n    cross(v: Vector3): Vector3 {\n        const x = this.y * v.z - this.z * v.y;\n        const y = this.z * v.x - this.x * v.z;\n        const z = this.x * v.y - this.y * v.x;\n\n        return new Vector3(x, y, z);\n    }\n\n    dot(v: Vector3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.magnitude();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n\n    static One(value: number = 1): Vector3 {\n        return new Vector3(value, value, value);\n    }\n}\n\nexport { Vector3 };\n", "import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    inverse(): Quaternion {\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\n    }\n\n    apply(v: Vector3): Vector3 {\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        const halfAngle = angle / 2;\n        const sin = Math.sin(halfAngle);\n        const cos = Math.cos(halfAngle);\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Quaternion };\n", "class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n", "import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n\n    determinant(): number {\n        const e = this.buffer;\n        // prettier-ignore\n        return (\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\n        );\n    }\n\n    invert(): Matrix4 {\n        const e = this.buffer;\n        const det = this.determinant();\n        if (det === 0) {\n            throw new Error(\"Matrix is not invertible.\");\n        }\n        const invDet = 1 / det;\n        // prettier-ignore\n        return new Matrix4(\n            invDet * (\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\n            ),\n            invDet * (\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\n            ),\n            invDet * (\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\n            ),\n            invDet * (\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\n            ),\n            invDet * (\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\n            ),\n            invDet * (\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\n            ),\n            invDet * (\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\n            ),\n            invDet * (\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\n            ),\n            invDet * (\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\n            ),\n            invDet * (\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\n            ),\n        );\n    }\n\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\n        const x = rotation.x,\n            y = rotation.y,\n            z = rotation.z,\n            w = rotation.w;\n        const x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        const xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        const yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        const wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        const sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        // prettier-ignore\n        return new Matrix4(\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\n            position.x, position.y, position.z, 1\n        );\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix4 };\n", "import { Object3D } from \"../core/Object3D\";\n\nclass ObjectAddedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectAdded\");\n    }\n}\n\nclass ObjectRemovedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectRemoved\");\n    }\n}\n\nclass ObjectChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectChanged\");\n    }\n}\n\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent };\n", "import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { ObjectChangedEvent } from \"../events/Events\";\n\nabstract class Object3D extends EventDispatcher {\n    public positionChanged: boolean = false;\n    public rotationChanged: boolean = false;\n    public scaleChanged: boolean = false;\n\n    protected _position: Vector3 = new Vector3();\n    protected _rotation: Quaternion = new Quaternion();\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\n    protected _transform: Matrix4 = new Matrix4();\n\n    protected _changeEvent = new ObjectChangedEvent(this);\n\n    update: () => void;\n    applyPosition: () => void;\n    applyRotation: () => void;\n    applyScale: () => void;\n\n    constructor() {\n        super();\n\n        this.update = () => {};\n\n        this.applyPosition = () => {\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.scale = new Vector3(1, 1, 1);\n        };\n    }\n\n    protected _updateMatrix() {\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.positionChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.rotationChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(scale: Vector3) {\n        if (!this._scale.equals(scale)) {\n            this._scale = scale;\n            this.scaleChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get forward() {\n        let forward = new Vector3(0, 0, 1);\n        forward = this.rotation.apply(forward);\n        return forward;\n    }\n\n    get transform() {\n        return this._transform;\n    }\n}\n\nexport { Object3D };\n", "import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(v: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = v.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix3 };\n", "import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\n\nclass SplatData {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    public changed = false;\n    public detached = false;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _colors: Uint8Array;\n    private _selection: Uint8Array;\n\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    serialize: () => Uint8Array;\n    reattach: (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => void;\n\n    constructor(\n        vertexCount: number = 0,\n        positions: Float32Array | null = null,\n        rotations: Float32Array | null = null,\n        scales: Float32Array | null = null,\n        colors: Uint8Array | null = null,\n    ) {\n        this._vertexCount = vertexCount;\n        this._positions = positions || new Float32Array(0);\n        this._rotations = rotations || new Float32Array(0);\n        this._scales = scales || new Float32Array(0);\n        this._colors = colors || new Uint8Array(0);\n        this._selection = new Uint8Array(this.vertexCount);\n\n        this.translate = (translation: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] += translation.x;\n                this.positions[3 * i + 1] += translation.y;\n                this.positions[3 * i + 2] += translation.z;\n            }\n\n            this.changed = true;\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            for (let i = 0; i < this.vertexCount; i++) {\n                const x = this.positions[3 * i + 0];\n                const y = this.positions[3 * i + 1];\n                const z = this.positions[3 * i + 2];\n\n                this.positions[3 * i + 0] = R[0] * x + R[1] * y + R[2] * z;\n                this.positions[3 * i + 1] = R[3] * x + R[4] * y + R[5] * z;\n                this.positions[3 * i + 2] = R[6] * x + R[7] * y + R[8] * z;\n\n                const currentRotation = new Quaternion(\n                    this.rotations[4 * i + 1],\n                    this.rotations[4 * i + 2],\n                    this.rotations[4 * i + 3],\n                    this.rotations[4 * i + 0],\n                );\n\n                const newRot = rotation.multiply(currentRotation);\n                this.rotations[4 * i + 1] = newRot.x;\n                this.rotations[4 * i + 2] = newRot.y;\n                this.rotations[4 * i + 3] = newRot.z;\n                this.rotations[4 * i + 0] = newRot.w;\n            }\n\n            this.changed = true;\n        };\n\n        this.scale = (scale: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] *= scale.x;\n                this.positions[3 * i + 1] *= scale.y;\n                this.positions[3 * i + 2] *= scale.z;\n\n                this.scales[3 * i + 0] *= scale.x;\n                this.scales[3 * i + 1] *= scale.y;\n                this.scales[3 * i + 2] *= scale.z;\n            }\n\n            this.changed = true;\n        };\n\n        this.serialize = () => {\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\n\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            return data;\n        };\n\n        this.reattach = (\n            positions: ArrayBufferLike,\n            rotations: ArrayBufferLike,\n            scales: ArrayBufferLike,\n            colors: ArrayBufferLike,\n            selection: ArrayBufferLike,\n        ) => {\n            console.assert(\n                positions.byteLength === this.vertexCount * 3 * 4,\n                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n            );\n            this._positions = new Float32Array(positions);\n            this._rotations = new Float32Array(rotations);\n            this._scales = new Float32Array(scales);\n            this._colors = new Uint8Array(colors);\n            this._selection = new Uint8Array(selection);\n            this.detached = false;\n        };\n    }\n\n    static Deserialize(data: Uint8Array): SplatData {\n        const vertexCount = data.length / SplatData.RowLength;\n        const positions = new Float32Array(3 * vertexCount);\n        const rotations = new Float32Array(4 * vertexCount);\n        const scales = new Float32Array(3 * vertexCount);\n        const colors = new Uint8Array(4 * vertexCount);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\n        }\n\n        return new SplatData(vertexCount, positions, rotations, scales, colors);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get colors() {\n        return this._colors;\n    }\n\n    get selection() {\n        return this._selection;\n    }\n}\n\nexport { SplatData };\n", "import { Quaternion } from \"../math/Quaternion\";\n\nclass Converter {\n    public static SH_C0 = 0.28209479177387814;\n\n    public static SplatToPLY(buffer: ArrayBuffer, vertexCount: number): ArrayBuffer {\n        let header = \"ply\\nformat binary_little_endian 1.0\\n\";\n        header += `element vertex ${vertexCount}\\n`;\n\n        const properties = [\"x\", \"y\", \"z\", \"nx\", \"ny\", \"nz\", \"f_dc_0\", \"f_dc_1\", \"f_dc_2\"];\n        for (let i = 0; i < 45; i++) {\n            properties.push(`f_rest_${i}`);\n        }\n        properties.push(\"opacity\");\n        properties.push(\"scale_0\");\n        properties.push(\"scale_1\");\n        properties.push(\"scale_2\");\n        properties.push(\"rot_0\");\n        properties.push(\"rot_1\");\n        properties.push(\"rot_2\");\n        properties.push(\"rot_3\");\n\n        for (const property of properties) {\n            header += `property float ${property}\\n`;\n        }\n        header += \"end_header\\n\";\n\n        const headerBuffer = new TextEncoder().encode(header);\n\n        const plyRowLength = 4 * 3 + 4 * 3 + 4 * 3 + 4 * 45 + 4 + 4 * 3 + 4 * 4;\n        const plyLength = vertexCount * plyRowLength;\n        const output = new DataView(new ArrayBuffer(headerBuffer.length + plyLength));\n        new Uint8Array(output.buffer).set(headerBuffer, 0);\n\n        const f_buffer = new Float32Array(buffer);\n        const u_buffer = new Uint8Array(buffer);\n\n        const offset = headerBuffer.length;\n        const f_dc_offset = 4 * 3 + 4 * 3;\n        const opacity_offset = f_dc_offset + 4 * 3 + 4 * 45;\n        const scale_offset = opacity_offset + 4;\n        const rot_offset = scale_offset + 4 * 3;\n        for (let i = 0; i < vertexCount; i++) {\n            const pos0 = f_buffer[8 * i + 0];\n            const pos1 = f_buffer[8 * i + 1];\n            const pos2 = f_buffer[8 * i + 2];\n\n            const f_dc_0 = (u_buffer[32 * i + 24 + 0] / 255 - 0.5) / this.SH_C0;\n            const f_dc_1 = (u_buffer[32 * i + 24 + 1] / 255 - 0.5) / this.SH_C0;\n            const f_dc_2 = (u_buffer[32 * i + 24 + 2] / 255 - 0.5) / this.SH_C0;\n\n            const alpha = u_buffer[32 * i + 24 + 3] / 255;\n            const opacity = Math.log(alpha / (1 - alpha));\n\n            const scale0 = Math.log(f_buffer[8 * i + 3 + 0]);\n            const scale1 = Math.log(f_buffer[8 * i + 3 + 1]);\n            const scale2 = Math.log(f_buffer[8 * i + 3 + 2]);\n\n            let q = new Quaternion(\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n            );\n            q = q.normalize();\n\n            const rot0 = q.w;\n            const rot1 = q.x;\n            const rot2 = q.y;\n            const rot3 = q.z;\n\n            output.setFloat32(offset + plyRowLength * i + 0, pos0, true);\n            output.setFloat32(offset + plyRowLength * i + 4, pos1, true);\n            output.setFloat32(offset + plyRowLength * i + 8, pos2, true);\n\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 0, f_dc_0, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 4, f_dc_1, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 8, f_dc_2, true);\n\n            output.setFloat32(offset + plyRowLength * i + opacity_offset, opacity, true);\n\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 0, scale0, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 4, scale1, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 8, scale2, true);\n\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 0, rot0, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 4, rot1, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 8, rot2, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 12, rot3, true);\n        }\n\n        return output.buffer;\n    }\n}\n\nexport { Converter };\n", "import { SplatData } from \"./SplatData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Converter } from \"../utils/Converter\";\n\nclass Splat extends Object3D {\n    public selectedChanged: boolean = false;\n\n    private _data: SplatData;\n    private _selected: boolean = false;\n\n    constructor(splat: SplatData | undefined = undefined) {\n        super();\n\n        this._data = splat || new SplatData();\n\n        this.applyPosition = () => {\n            this.data.translate(this.position);\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.data.rotate(this.rotation);\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.data.scale(this.scale);\n            this.scale = new Vector3(1, 1, 1);\n        };\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        this.applyRotation();\n        this.applyScale();\n        this.applyPosition();\n\n        const data = this.data.serialize();\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, this.data.vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n}\n\nexport { Splat };\n", "import { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass CameraData {\n    private _fx: number = 1132;\n    private _fy: number = 1132;\n    private _near: number = 0.1;\n    private _far: number = 100;\n\n    private _width: number = 512;\n    private _height: number = 512;\n\n    private _projectionMatrix: Matrix4 = new Matrix4();\n    private _viewMatrix: Matrix4 = new Matrix4();\n    private _viewProj: Matrix4 = new Matrix4();\n\n    update: (position: Vector3, rotation: Quaternion) => void;\n    setSize: (width: number, height: number) => void;\n\n    private _updateProjectionMatrix: () => void;\n\n    constructor() {\n        this._updateProjectionMatrix = () => {\n            // prettier-ignore\n            this._projectionMatrix = new Matrix4(\n                2 * this.fx / this.width, 0, 0, 0,\n                0, -2 * this.fy / this.height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.update = (position: Vector3, rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const t = position.flat();\n\n            // prettier-ignore\n            this._viewMatrix = new Matrix4(\n                R[0], R[1], R[2], 0,\n                R[3], R[4], R[5], 0,\n                R[6], R[7], R[8], 0,\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                1,\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.setSize = (width: number, height: number) => {\n            this._width = width;\n            this._height = height;\n            this._updateProjectionMatrix();\n        };\n    }\n\n    get fx() {\n        return this._fx;\n    }\n\n    set fx(fx: number) {\n        if (this._fx !== fx) {\n            this._fx = fx;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get fy() {\n        return this._fy;\n    }\n\n    set fy(fy: number) {\n        if (this._fy !== fy) {\n            this._fy = fy;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get near() {\n        return this._near;\n    }\n\n    set near(near: number) {\n        if (this._near !== near) {\n            this._near = near;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get far() {\n        return this._far;\n    }\n\n    set far(far: number) {\n        if (this._far !== far) {\n            this._far = far;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n\n    get viewProj() {\n        return this._viewProj;\n    }\n}\n\nexport { CameraData };\n", "import { Matrix4 } from \"./Matrix4\";\n\nclass Vector4 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(v: Vector4): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n        if (this.w !== v.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector4;\n    add(v: Vector4): Vector4;\n    add(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\n        } else {\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n        }\n    }\n\n    subtract(v: number): Vector4;\n    subtract(v: Vector4): Vector4;\n    subtract(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\n        } else {\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n        }\n    }\n\n    multiply(v: number): Vector4;\n    multiply(v: Vector4): Vector4;\n    multiply(v: Matrix4): Vector4;\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\n        } else if (v instanceof Vector4) {\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n        } else {\n            return new Vector4(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\n            );\n        }\n    }\n\n    dot(v: Vector4): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n\n    lerp(v: Vector4, t: number): Vector4 {\n        return new Vector4(\n            this.x + (v.x - this.x) * t,\n            this.y + (v.y - this.y) * t,\n            this.z + (v.z - this.z) * t,\n            this.w + (v.w - this.w) * t,\n        );\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    distanceTo(v: Vector4): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\n    }\n\n    normalize(): Vector4 {\n        const length = this.magnitude();\n\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Vector4 {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Vector4 };\n", "import { CameraData } from \"./CameraData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\n\nclass Camera extends Object3D {\n    private _data: CameraData;\n\n    screenPointToRay: (x: number, y: number) => Vector3;\n\n    constructor(camera: CameraData | undefined = undefined) {\n        super();\n\n        this._data = camera ? camera : new CameraData();\n        this._position = new Vector3(0, 0, -5);\n\n        this.update = () => {\n            this.data.update(this.position, this.rotation);\n        };\n\n        this.screenPointToRay = (x: number, y: number) => {\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\n            const inverseViewMatrix = this._data.viewMatrix.invert();\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n            const worldSpacePosition = new Vector3(\n                worldSpaceCoords.x / worldSpaceCoords.w,\n                worldSpaceCoords.y / worldSpaceCoords.w,\n                worldSpaceCoords.z / worldSpaceCoords.w,\n            );\n            const direction = worldSpacePosition.subtract(this.position).normalize();\n            return direction;\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Camera };\n", "import { Object3D } from \"./Object3D\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\nimport { Converter } from \"../utils/Converter\";\n\nclass Scene extends EventDispatcher {\n    private _objects: Object3D[] = [];\n\n    addObject: (object: Object3D) => void;\n    removeObject: (object: Object3D) => void;\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\n    reset: () => void;\n\n    constructor() {\n        super();\n\n        this.addObject = (object: Object3D) => {\n            this.objects.push(object);\n            this.dispatchEvent(new ObjectAddedEvent(object));\n        };\n\n        this.removeObject = (object: Object3D) => {\n            const index = this.objects.indexOf(object);\n            if (index < 0) {\n                throw new Error(\"Object not found in scene\");\n            }\n            this.objects.splice(index, 1);\n            this.dispatchEvent(new ObjectRemovedEvent(object));\n        };\n\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\n            for (const object of this.objects) {\n                if (predicate(object)) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\n            for (const object of this.objects) {\n                if (object instanceof type) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.reset = () => {\n            const objectsToRemove = this.objects.slice();\n            for (const object of objectsToRemove) {\n                this.removeObject(object);\n            }\n        };\n\n        this.reset();\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        const buffers: Uint8Array[] = [];\n        let vertexCount = 0;\n\n        for (const object of this.objects) {\n            object.applyRotation();\n            object.applyScale();\n            object.applyPosition();\n            if (object instanceof Splat) {\n                const buffer = object.data.serialize();\n                buffers.push(buffer);\n                vertexCount += object.data.vertexCount;\n            }\n        }\n\n        const data = new Uint8Array(vertexCount * SplatData.RowLength);\n        let offset = 0;\n        for (const buffer of buffers) {\n            data.set(buffer, offset);\n            offset += buffer.length;\n        }\n\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get objects() {\n        return this._objects;\n    }\n}\n\nexport { Scene };\n", "export async function initiateFetchRequest(url: string, useCache: boolean): Promise<Response> {\n    const req = await fetch(url, {\n        mode: \"cors\",\n        credentials: \"omit\",\n        cache: useCache ? \"force-cache\" : \"default\",\n    });\n\n    if (req.status != 200) {\n        throw new Error(req.status + \" Unable to load \" + req.url);\n    }\n\n    return req;\n}\n\nexport async function loadDataIntoBuffer(res: Response, onProgress?: (progress: number) => void): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const contentLength = parseInt(res.headers.get(\"content-length\") as string);\n    const buffer = new Uint8Array(contentLength);\n\n    let bytesRead = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        buffer.set(value, bytesRead);\n        bytesRead += value.length;\n        onProgress?.(bytesRead / contentLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadChunkedDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const chunks = [];\n    let receivedLength = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        chunks.push(value);\n        receivedLength += value.length;\n    }\n\n    const buffer = new Uint8Array(receivedLength);\n    let position = 0;\n    for (const chunk of chunks) {\n        buffer.set(chunk, position);\n        position += chunk.length;\n\n        onProgress?.(position / receivedLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadRequestDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    if (res.headers.has(\"content-length\")) {\n        return loadDataIntoBuffer(res, onProgress);\n    } else {\n        return loadChunkedDataIntoBuffer(res, onProgress);\n    }\n}\n", "import type { Scene } from \"../core/Scene\";\nimport { Splat } from \"../splats/Splat\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass Loader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            const buffer = new Uint8Array(e.target!.result as ArrayBuffer);\n            const data = SplatData.Deserialize(buffer);\n            splat = new Splat(data);\n            scene.addObject(splat);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n}\n\nexport { Loader };\n", "import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { Converter } from \"../utils/Converter\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass PLYLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const plyData = await loadRequestDataIntoBuffer(res, onProgress);\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        const buffer = new Uint8Array(this._ParsePLYBuffer(plyData.buffer, format));\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            const buffer = new Uint8Array(this._ParsePLYBuffer(e.target!.result as ArrayBuffer, format));\n            const data = SplatData.Deserialize(buffer);\n            splat = new Splat(data);\n            scene.addObject(splat);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                        rgba[0] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                        rgba[1] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                        rgba[2] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n", "import { Camera } from \"../../../cameras/Camera\";\nimport { Scene } from \"../../../core/Scene\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\n\nabstract class ShaderProgram {\n    private _renderer: WebGLRenderer;\n    private _program: WebGLProgram;\n    private _passes: ShaderPass[];\n\n    protected _scene: Scene | null = null;\n    protected _camera: Camera | null = null;\n    protected _started: boolean = false;\n    protected _initialized: boolean = false;\n\n    protected abstract _initialize: () => void;\n    protected abstract _resize: () => void;\n    protected abstract _render: () => void;\n    protected abstract _dispose: () => void;\n\n    initialize: () => void;\n    resize: () => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        this._renderer = renderer;\n        const gl = renderer.gl;\n\n        this._program = gl.createProgram() as WebGLProgram;\n        this._passes = passes || [];\n\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this._getVertexSource());\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(vertexShader));\n        }\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(fragmentShader));\n        }\n\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n\n        this.resize = () => {\n            gl.useProgram(this._program);\n\n            this._resize();\n        };\n\n        this.initialize = () => {\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\n\n            gl.useProgram(this._program);\n\n            this._initialize();\n            for (const pass of this.passes) {\n                pass.initialize(this);\n            }\n\n            this._initialized = true;\n            this._started = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            gl.useProgram(this._program);\n\n            if (this._scene !== scene || this._camera !== camera) {\n                this.dispose();\n                this._scene = scene;\n                this._camera = camera;\n                this.initialize();\n            }\n\n            for (const pass of this.passes) {\n                pass.render();\n            }\n\n            this._render();\n        };\n\n        this.dispose = () => {\n            if (!this._initialized) return;\n\n            gl.useProgram(this._program);\n\n            for (const pass of this.passes) {\n                pass.dispose();\n            }\n\n            this._dispose();\n\n            this._scene = null;\n            this._camera = null;\n            this._initialized = false;\n        };\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    get scene() {\n        return this._scene;\n    }\n\n    get camera() {\n        return this._camera;\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    get passes() {\n        return this._passes;\n    }\n\n    get started() {\n        return this._started;\n    }\n\n    protected abstract _getVertexSource(): string;\n    protected abstract _getFragmentSource(): string;\n}\n\nexport { ShaderProgram };\n", "\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var EmValType={name:\"emscripten::val\",\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_emval();var wasmImports={f:__embind_register_bigint,i:__embind_register_bool,h:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,j:__embind_register_void,g:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n);\n})();\nexport default loadWasm;", "import { Scene } from \"../../../core/Scene\";\nimport { Splat } from \"../../../splats/Splat\";\nimport DataWorker from \"web-worker:./DataWorker.ts\";\nimport loadWasm from \"../../../wasm/data\";\n\nclass RenderData {\n    public dataChanged = false;\n    public transformsChanged = false;\n\n    private _splatIndices: Map<Splat, number>;\n    private _offsets: Map<Splat, number>;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _transforms: Float32Array;\n    private _transformsWidth: number;\n    private _transformsHeight: number;\n    private _transformIndices: Uint32Array;\n    private _transformIndicesWidth: number;\n    private _transformIndicesHeight: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _vertexCount: number;\n    private _updating: Set<Splat> = new Set<Splat>();\n    private _dirty: Set<Splat> = new Set<Splat>();\n    private _worker: Worker;\n\n    getSplat: (index: number) => Splat | null;\n    getLocalIndex: (splat: Splat, index: number) => number;\n    markDirty: (splat: Splat) => void;\n    rebuild: () => void;\n    dispose: () => void;\n\n    constructor(scene: Scene) {\n        let vertexCount = 0;\n        let splatIndex = 0;\n        this._splatIndices = new Map<Splat, number>();\n        this._offsets = new Map<Splat, number>();\n        const lookup = new Map<number, Splat>();\n        for (const object of scene.objects) {\n            if (object instanceof Splat) {\n                this._splatIndices.set(object, splatIndex);\n                this._offsets.set(object, vertexCount);\n                lookup.set(vertexCount, object);\n                vertexCount += object.data.vertexCount;\n                splatIndex++;\n            }\n        }\n\n        this._vertexCount = vertexCount;\n        this._width = 2048;\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\n        this._data = new Uint32Array(this.width * this.height * 4);\n\n        this._transformsWidth = 5;\n        this._transformsHeight = lookup.size;\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\n\n        this._transformIndicesWidth = 1024;\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\n\n        this._positions = new Float32Array(this.vertexCount * 3);\n        this._rotations = new Float32Array(this.vertexCount * 4);\n        this._scales = new Float32Array(this.vertexCount * 3);\n\n        this._worker = new DataWorker();\n\n        const updateTransform = (splat: Splat) => {\n            const splatIndex = this._splatIndices.get(splat) as number;\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\n            splat.positionChanged = false;\n            splat.rotationChanged = false;\n            splat.scaleChanged = false;\n            splat.selectedChanged = false;\n            this.transformsChanged = true;\n        };\n\n        this._worker.onmessage = (e) => {\n            if (e.data.response) {\n                const response = e.data.response;\n                const splat = lookup.get(response.offset) as Splat;\n                updateTransform(splat);\n\n                const splatIndex = this._splatIndices.get(splat) as number;\n                for (let i = 0; i < splat.data.vertexCount; i++) {\n                    this._transformIndices[response.offset + i] = splatIndex;\n                }\n\n                this._data.set(response.data, response.offset * 8);\n                splat.data.reattach(\n                    response.positions,\n                    response.rotations,\n                    response.scales,\n                    response.colors,\n                    response.selection,\n                );\n\n                this._positions.set(response.worldPositions, response.offset * 3);\n                this._rotations.set(response.worldRotations, response.offset * 4);\n                this._scales.set(response.worldScales, response.offset * 3);\n\n                this._updating.delete(splat);\n\n                splat.selectedChanged = false;\n\n                this.dataChanged = true;\n            }\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        async function initWasm() {\n            wasmModule = await loadWasm();\n        }\n\n        initWasm();\n\n        async function waitForWasm() {\n            while (!wasmModule) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n        }\n\n        const buildImmediate = (splat: Splat) => {\n            if (!wasmModule) {\n                waitForWasm().then(() => {\n                    buildImmediate(splat);\n                });\n                return;\n            }\n\n            updateTransform(splat);\n\n            const positionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const rotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\n            const scalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const colorsPtr = wasmModule._malloc(4 * splat.data.vertexCount);\n            const selectionPtr = wasmModule._malloc(splat.data.vertexCount);\n            const dataPtr = wasmModule._malloc(8 * splat.data.vertexCount * 4);\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\n            const worldScalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n\n            wasmModule.HEAPF32.set(splat.data.positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(splat.data.rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(splat.data.scales, scalesPtr / 4);\n            wasmModule.HEAPU8.set(splat.data.colors, colorsPtr);\n            wasmModule.HEAPU8.set(splat.data.selection, selectionPtr);\n\n            wasmModule._pack(\n                splat.selected,\n                splat.data.vertexCount,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                colorsPtr,\n                selectionPtr,\n                dataPtr,\n                worldPositionsPtr,\n                worldRotationsPtr,\n                worldScalesPtr,\n            );\n\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.data.vertexCount * 8);\n            const worldPositions = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldPositionsPtr,\n                splat.data.vertexCount * 3,\n            );\n            const worldRotations = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldRotationsPtr,\n                splat.data.vertexCount * 4,\n            );\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.data.vertexCount * 3);\n\n            const splatIndex = this._splatIndices.get(splat) as number;\n            const offset = this._offsets.get(splat) as number;\n            for (let i = 0; i < splat.data.vertexCount; i++) {\n                this._transformIndices[offset + i] = splatIndex;\n            }\n            this._data.set(outData, offset * 8);\n            this._positions.set(worldPositions, offset * 3);\n            this._rotations.set(worldRotations, offset * 4);\n            this._scales.set(worldScales, offset * 3);\n\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n\n            this.dataChanged = true;\n        };\n\n        const build = (splat: Splat) => {\n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\n                updateTransform(splat);\n            }\n\n            if (!splat.data.changed || splat.data.detached) return;\n\n            const serializedSplat = {\n                position: new Float32Array(splat.position.flat()),\n                rotation: new Float32Array(splat.rotation.flat()),\n                scale: new Float32Array(splat.scale.flat()),\n                selected: splat.selected,\n                vertexCount: splat.data.vertexCount,\n                positions: splat.data.positions,\n                rotations: splat.data.rotations,\n                scales: splat.data.scales,\n                colors: splat.data.colors,\n                selection: splat.data.selection,\n                offset: this._offsets.get(splat) as number,\n            };\n\n            this._worker.postMessage(\n                {\n                    splat: serializedSplat,\n                },\n                [\n                    serializedSplat.position.buffer,\n                    serializedSplat.rotation.buffer,\n                    serializedSplat.scale.buffer,\n                    serializedSplat.positions.buffer,\n                    serializedSplat.rotations.buffer,\n                    serializedSplat.scales.buffer,\n                    serializedSplat.colors.buffer,\n                    serializedSplat.selection.buffer,\n                ],\n            );\n\n            this._updating.add(splat);\n\n            splat.data.detached = true;\n        };\n\n        this.getSplat = (index: number) => {\n            let splat = null;\n            for (const [key, value] of this._offsets) {\n                if (index >= value) {\n                    splat = key;\n                } else {\n                    break;\n                }\n            }\n            return splat;\n        };\n\n        this.getLocalIndex = (splat: Splat, index: number) => {\n            const offset = this._offsets.get(splat) as number;\n            return index - offset;\n        };\n\n        this.markDirty = (splat: Splat) => {\n            this._dirty.add(splat);\n        };\n\n        this.rebuild = () => {\n            for (const splat of this._dirty) {\n                build(splat);\n            }\n\n            this._dirty.clear();\n        };\n\n        this.dispose = () => {\n            this._worker.terminate();\n        };\n\n        for (const splat of this._splatIndices.keys()) {\n            buildImmediate(splat);\n        }\n    }\n\n    get offsets() {\n        return this._offsets;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get transforms() {\n        return this._transforms;\n    }\n\n    get transformsWidth() {\n        return this._transformsWidth;\n    }\n\n    get transformsHeight() {\n        return this._transformsHeight;\n    }\n\n    get transformIndices() {\n        return this._transformIndices;\n    }\n\n    get transformIndicesWidth() {\n        return this._transformIndicesWidth;\n    }\n\n    get transformIndicesHeight() {\n        return this._transformIndicesHeight;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get needsRebuild() {\n        return this._dirty.size > 0;\n    }\n\n    get updating() {\n        return this._updating.size > 0;\n    }\n}\n\nexport { RenderData };\n", "class Color32 {\n    public readonly r: number;\n    public readonly g: number;\n    public readonly b: number;\n    public readonly a: number;\n\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    flat(): number[] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    flatNorm(): number[] {\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\n    }\n\n    toHexString(): string {\n        return (\n            \"#\" +\n            this.flat()\n                .map((x) => x.toString(16).padStart(2, \"0\"))\n                .join(\"\")\n        );\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Color32 };\n", "import SortWorker from \"web-worker:../utils/SortWorker.ts\";\n\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { RenderData } from \"../utils/RenderData\";\nimport { Color32 } from \"../../../math/Color32\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    vColor = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;\n\nclass RenderProgram extends ShaderProgram {\n    private _outlineThickness: number = 10.0;\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\n    private _renderData: RenderData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _chunks: Uint8Array | null = null;\n    private _splatTexture: WebGLTexture | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    private _setOutlineThickness: (value: number) => void;\n    private _setOutlineColor: (value: Color32) => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let worker: Worker;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_transforms: WebGLUniformLocation;\n        let u_transformIndices: WebGLUniformLocation;\n\n        let u_outlineThickness: WebGLUniformLocation;\n        let u_outlineColor: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let transformsTexture: WebGLTexture;\n        let transformIndicesTexture: WebGLTexture;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const createWorker = () => {\n            worker = new SortWorker();\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex, chunks } = e.data;\n                    this._depthIndex = depthIndex;\n                    this._chunks = chunks;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this._renderData = new RenderData(this._scene);\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\n\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            transformsTexture = gl.createTexture() as WebGLTexture;\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_transforms, 1);\n\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\n            gl.uniform1i(u_transformIndices, 2);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            createWorker();\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splat && this._renderData) {\n                this._renderData.markDirty(e.object);\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (this.renderData.needsRebuild) {\n                this.renderData.rebuild();\n            }\n\n            if (this.renderData.dataChanged || this.renderData.transformsChanged) {\n                if (this.renderData.dataChanged) {\n                    gl.activeTexture(gl.TEXTURE0);\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32UI,\n                        this.renderData.width,\n                        this.renderData.height,\n                        0,\n                        gl.RGBA_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.data,\n                    );\n                }\n\n                if (this.renderData.transformsChanged) {\n                    gl.activeTexture(gl.TEXTURE1);\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.transformsWidth,\n                        this.renderData.transformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.transforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE2);\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.transformIndicesWidth,\n                        this.renderData.transformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.transformIndices,\n                    );\n                }\n\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\n                worker.postMessage(\n                    {\n                        sortData: {\n                            positions: detachedPositions,\n                            transforms: detachedTransforms,\n                            transformIndices: detachedTransformIndices,\n                            vertexCount: this.renderData.vertexCount,\n                        },\n                    },\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\n                );\n\n                this.renderData.dataChanged = false;\n                this.renderData.transformsChanged = false;\n            }\n\n            this._camera.update();\n            worker.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            worker.terminate();\n            this.renderData.dispose();\n\n            gl.deleteTexture(this.splatTexture);\n            gl.deleteTexture(transformsTexture);\n            gl.deleteTexture(transformIndicesTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n\n        this._setOutlineThickness = (value: number) => {\n            this._outlineThickness = value;\n            if (this._initialized) {\n                gl.uniform1f(u_outlineThickness, value);\n            }\n        };\n\n        this._setOutlineColor = (value: Color32) => {\n            this._outlineColor = value;\n            if (this._initialized) {\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\n            }\n        };\n    }\n\n    get renderData() {\n        return this._renderData;\n    }\n\n    get depthIndex() {\n        return this._depthIndex;\n    }\n\n    get chunks() {\n        return this._chunks;\n    }\n\n    get splatTexture() {\n        return this._splatTexture;\n    }\n\n    get outlineThickness() {\n        return this._outlineThickness;\n    }\n\n    set outlineThickness(value: number) {\n        this._setOutlineThickness(value);\n    }\n\n    get outlineColor() {\n        return this._outlineColor;\n    }\n\n    set outlineColor(value: Color32) {\n        this._setOutlineColor(value);\n    }\n\n    protected _getVertexSource() {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource() {\n        return fragmentShaderSource;\n    }\n}\n\nexport { RenderProgram };\n", "import { RenderProgram } from \"../programs/RenderProgram\";\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    initialize: (program: ShaderProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let renderProgram: RenderProgram;\n        let gl: WebGL2RenderingContext;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.initialize = (program: ShaderProgram) => {\n            if (!(program instanceof RenderProgram)) {\n                throw new Error(\"FadeInPass requires a RenderProgram\");\n            }\n\n            value = program.started ? 1.0 : 0.0;\n            active = true;\n            renderProgram = program;\n            gl = program.renderer.gl;\n\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\n            gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\n            gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active || renderProgram.renderData?.updating) return;\n            gl.useProgram(renderProgram.program);\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                gl.uniform1i(u_useDepthFade, 0);\n            }\n            gl.uniform1f(u_depthFade, value);\n        };\n    }\n\n    dispose() {}\n}\n\nexport { FadeInPass };\n", "import type { Scene } from \"../core/Scene\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Color32 } from \"../math/Color32\";\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\n\nexport class WebGLRenderer {\n    private _canvas: HTMLCanvasElement;\n    private _gl: WebGL2RenderingContext;\n    private _backgroundColor: Color32 = new Color32();\n    private _renderProgram: RenderProgram;\n\n    addProgram: (program: ShaderProgram) => void;\n    removeProgram: (program: ShaderProgram) => void;\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = this._backgroundColor.toHexString();\n        this._canvas = canvas;\n\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n\n        const renderPasses = optionalRenderPasses || [];\n        if (!optionalRenderPasses) {\n            renderPasses.push(new FadeInPass());\n        }\n\n        this._renderProgram = new RenderProgram(this, renderPasses);\n        const programs = [this._renderProgram] as ShaderProgram[];\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\n            for (const program of programs) {\n                program.resize();\n            }\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            for (const program of programs) {\n                program.render(scene, camera);\n            }\n        };\n\n        this.dispose = () => {\n            for (const program of programs) {\n                program.dispose();\n            }\n        };\n\n        this.addProgram = (program: ShaderProgram) => {\n            programs.push(program);\n        };\n\n        this.removeProgram = (program: ShaderProgram) => {\n            const index = programs.indexOf(program);\n            if (index < 0) {\n                throw new Error(\"Program not found\");\n            }\n            programs.splice(index, 1);\n        };\n\n        this.resize();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get gl() {\n        return this._gl;\n    }\n\n    get renderProgram() {\n        return this._renderProgram;\n    }\n\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: Color32) {\n        this._backgroundColor = value;\n        this._canvas.style.background = value.toHexString();\n    }\n}\n", "import { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        canvas: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        camera.addEventListener(\"objectChanged\", onCameraChange);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\n            canvas.removeEventListener(\"wheel\", onWheel);\n\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n        canvas.addEventListener(\"mousemove\", onMouseMove);\n        canvas.addEventListener(\"wheel\", onWheel);\n\n        canvas.addEventListener(\"touchstart\", onTouchStart);\n        canvas.addEventListener(\"touchend\", onTouchEnd);\n        canvas.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n", "import { Vector3 } from \"./Vector3\";\n\nclass Plane {\n    public readonly normal: Vector3;\n    public readonly point: Vector3;\n\n    constructor(normal: Vector3, point: Vector3) {\n        this.normal = normal;\n        this.point = point;\n    }\n\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\n        const denominator = this.normal.dot(direction);\n\n        if (Math.abs(denominator) < 0.0001) {\n            return null;\n        }\n\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\n\n        if (t < 0) {\n            return null;\n        }\n\n        return origin.add(direction.multiply(t));\n    }\n}\n\nexport { Plane };\n", "import { ShaderProgram } from \"../programs/ShaderProgram\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initialize(program: ShaderProgram) {}\n    render() {}\n    dispose() {}\n}\n\nexport { ShaderPass };\n", "\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var EmValType={name:\"emscripten::val\",\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_emval();var wasmImports={f:__embind_register_bigint,i:__embind_register_bool,h:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,j:__embind_register_void,g:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var _evaluate=Module[\"_evaluate\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(_evaluate=Module[\"_evaluate\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n);\n})();\nexport default loadWasm;", "import { Splat } from \"../../../splats/Splat\";\nimport { RenderProgram } from \"../programs/RenderProgram\";\n\nimport loadWasm from \"../../../wasm/intersect\";\n\nclass IntersectionTester {\n    testPoint: (x: number, y: number) => Splat | null;\n\n    constructor(renderProgram: RenderProgram) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        const initWasm = async () => {\n            wasmModule = await loadWasm();\n        };\n\n        initWasm();\n\n        let allocatedVertexCount: number = 0;\n        let allocatedTransformCount: number = 0;\n\n        let viewPtr: number;\n        let transformsPtr: number;\n        let transformIndicesPtr: number;\n        let positionsPtr: number;\n        let rotationsPtr: number;\n        let scalesPtr: number;\n        let depthIndexPtr: number;\n        let chunksPtr: number;\n        let originPtr: number;\n        let directionPtr: number;\n        let resultPtr: number;\n\n        const allocateVertices = (vertexCount: number) => {\n            if (vertexCount > allocatedVertexCount) {\n                if (allocatedVertexCount > 0) {\n                    wasmModule._free(viewPtr);\n                    wasmModule._free(transformIndicesPtr);\n                    wasmModule._free(positionsPtr);\n                    wasmModule._free(rotationsPtr);\n                    wasmModule._free(scalesPtr);\n                    wasmModule._free(depthIndexPtr);\n                    wasmModule._free(chunksPtr);\n                    wasmModule._free(originPtr);\n                    wasmModule._free(directionPtr);\n                    wasmModule._free(resultPtr);\n                }\n\n                allocatedVertexCount = vertexCount;\n\n                viewPtr = wasmModule._malloc(16 * 4);\n                transformIndicesPtr = wasmModule._malloc(allocatedVertexCount * 4);\n                positionsPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n                rotationsPtr = wasmModule._malloc(4 * allocatedVertexCount * 4);\n                scalesPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n                depthIndexPtr = wasmModule._malloc(allocatedVertexCount * 4);\n                chunksPtr = wasmModule._malloc(allocatedVertexCount);\n                originPtr = wasmModule._malloc(3 * 4);\n                directionPtr = wasmModule._malloc(3 * 4);\n                resultPtr = wasmModule._malloc(4);\n            }\n        };\n\n        const allocateTransforms = (transformCount: number) => {\n            if (transformCount > allocatedTransformCount) {\n                if (allocatedTransformCount > 0) {\n                    wasmModule._free(transformsPtr);\n                }\n\n                allocatedTransformCount = transformCount;\n\n                transformsPtr = wasmModule._malloc(20 * allocatedTransformCount * 4);\n            }\n        };\n\n        this.testPoint = (x: number, y: number) => {\n            if (!wasmModule) {\n                throw new Error(\"Wasm module not loaded\");\n            }\n\n            if (!renderProgram.camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            if (!renderProgram.renderData || !renderProgram.depthIndex || !renderProgram.chunks) {\n                return null;\n            }\n\n            const renderData = renderProgram.renderData;\n            const depthIndex = renderProgram.depthIndex;\n            const chunks = renderProgram.chunks;\n\n            const targetAllocatedVertexCount = Math.pow(2, Math.ceil(Math.log2(renderData.vertexCount)));\n            allocateVertices(targetAllocatedVertexCount);\n\n            const targetAllocatedTransformCount = Math.pow(2, Math.ceil(Math.log2(renderData.transforms.length / 20)));\n            allocateTransforms(targetAllocatedTransformCount);\n\n            const normalizedX = (x + 1) / 2;\n            const normalizedY = (y + 1) / 2;\n            const chunk = Math.floor(normalizedX * 15) + Math.floor(normalizedY * 15) * 15;\n\n            const camera = renderProgram.camera;\n            const ray = camera.screenPointToRay(x, y);\n\n            wasmModule.HEAPF32.set(camera.data.viewMatrix.buffer, viewPtr / 4);\n            wasmModule.HEAPU32.set(renderData.transformIndices, transformIndicesPtr / 4);\n            wasmModule.HEAPF32.set(renderData.positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(renderData.rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(renderData.scales, scalesPtr / 4);\n            wasmModule.HEAPU32.set(depthIndex, depthIndexPtr / 4);\n            wasmModule.HEAPU8.set(chunks, chunksPtr);\n            wasmModule.HEAPF32.set(camera.position.flat(), originPtr / 4);\n            wasmModule.HEAPF32.set(ray.flat(), directionPtr / 4);\n            wasmModule.HEAPF32.set(renderData.transforms, transformsPtr / 4);\n\n            wasmModule._evaluate(\n                viewPtr,\n                transformsPtr,\n                transformIndicesPtr,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                depthIndexPtr,\n                chunksPtr,\n                renderData.vertexCount,\n                chunk,\n                originPtr,\n                directionPtr,\n                resultPtr,\n            );\n\n            const result = wasmModule.HEAPU32[resultPtr / 4];\n            if (result !== 0xffffffff) {\n                const splat = renderData.getSplat(result) as Splat;\n                return splat;\n            }\n\n            return null;\n        };\n    }\n}\n\nexport { IntersectionTester };\n"],
  "mappings": ";AAEA,IAAMA,IAAN,MAAMA,GAAAA;EAKF,YAAYC,KAAY,GAAGC,KAAY,GAAGC,KAAY,GAAA;AAClDC,SAAKH,IAAIA,IACTG,KAAKF,IAAIA,IACTE,KAAKD,IAAIA;EACZ;EAED,OAAOE,IAAAA;AACH,WAAID,KAAKH,MAAMI,GAAEJ,MAGbG,KAAKF,MAAMG,GAAEH,KAGbE,KAAKD,MAAME,GAAEF;EAKpB;EAID,IAAIE,IAAAA;AACA,WAAiB,YAAA,OAANA,KACA,IAAIL,GAAQI,KAAKH,IAAII,IAAGD,KAAKF,IAAIG,IAAGD,KAAKD,IAAIE,EAAAA,IAE7C,IAAIL,GAAQI,KAAKH,IAAII,GAAEJ,GAAGG,KAAKF,IAAIG,GAAEH,GAAGE,KAAKD,IAAIE,GAAEF,CAAAA;EAEjE;EAID,SAASE,IAAAA;AACL,WAAiB,YAAA,OAANA,KACA,IAAIL,GAAQI,KAAKH,IAAII,IAAGD,KAAKF,IAAIG,IAAGD,KAAKD,IAAIE,EAAAA,IAE7C,IAAIL,GAAQI,KAAKH,IAAII,GAAEJ,GAAGG,KAAKF,IAAIG,GAAEH,GAAGE,KAAKD,IAAIE,GAAEF,CAAAA;EAEjE;EAKD,SAASE,IAAAA;AACL,WAAiB,YAAA,OAANA,KACA,IAAIL,GAAQI,KAAKH,IAAII,IAAGD,KAAKF,IAAIG,IAAGD,KAAKD,IAAIE,EAAAA,IAC7CA,cAAaL,KACb,IAAIA,GAAQI,KAAKH,IAAII,GAAEJ,GAAGG,KAAKF,IAAIG,GAAEH,GAAGE,KAAKD,IAAIE,GAAEF,CAAAA,IAEnD,IAAIH,GACPI,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,CAAA,IAAKD,GAAEC,OAAO,EAAA,GAC9EF,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,CAAA,IAAKD,GAAEC,OAAO,EAAA,GAC9EF,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,EAAA,IAAMD,GAAEC,OAAO,EAAA,CAAA;EAG1F;EAED,MAAMD,IAAAA;AACF,UAAMJ,KAAIG,KAAKF,IAAIG,GAAEF,IAAIC,KAAKD,IAAIE,GAAEH,GAC9BA,KAAIE,KAAKD,IAAIE,GAAEJ,IAAIG,KAAKH,IAAII,GAAEF,GAC9BA,KAAIC,KAAKH,IAAII,GAAEH,IAAIE,KAAKF,IAAIG,GAAEJ;AAEpC,WAAO,IAAID,GAAQC,IAAGC,IAAGC,EAAAA;EAC5B;EAED,IAAIE,IAAAA;AACA,WAAOD,KAAKH,IAAII,GAAEJ,IAAIG,KAAKF,IAAIG,GAAEH,IAAIE,KAAKD,IAAIE,GAAEF;EACnD;EAED,KAAKE,IAAYE,IAAAA;AACb,WAAO,IAAIP,GAAQI,KAAKH,KAAKI,GAAEJ,IAAIG,KAAKH,KAAKM,IAAGH,KAAKF,KAAKG,GAAEH,IAAIE,KAAKF,KAAKK,IAAGH,KAAKD,KAAKE,GAAEF,IAAIC,KAAKD,KAAKI,EAAAA;EAC1G;EAED,YAAAC;AACI,WAAOC,KAAKC,KAAKN,KAAKH,IAAIG,KAAKH,IAAIG,KAAKF,IAAIE,KAAKF,IAAIE,KAAKD,IAAIC,KAAKD,CAAAA;EACtE;EAED,WAAWE,IAAAA;AACP,WAAOI,KAAKC,MAAMN,KAAKH,IAAII,GAAEJ,MAAM,KAAKG,KAAKF,IAAIG,GAAEH,MAAM,KAAKE,KAAKD,IAAIE,GAAEF,MAAM,CAAA;EAClF;EAED,YAAAQ;AACI,UAAMC,KAASR,KAAKI,UAAAA;AAEpB,WAAO,IAAIR,GAAQI,KAAKH,IAAIW,IAAQR,KAAKF,IAAIU,IAAQR,KAAKD,IAAIS,EAAAA;EACjE;EAED,OAAAC;AACI,WAAO,CAACT,KAAKH,GAAGG,KAAKF,GAAGE,KAAKD,CAAAA;EAChC;EAED,QAAAW;AACI,WAAO,IAAId,GAAQI,KAAKH,GAAGG,KAAKF,GAAGE,KAAKD,CAAAA;EAC3C;EAED,WAAAY;AACI,WAAO,IAAIX,KAAKS,KAAAA,EAAOG,KAAK,IAAA,CAAA;EAC/B;EAED,OAAA,IAAWC,KAAgB,GAAA;AACvB,WAAO,IAAIjB,GAAQiB,IAAOA,IAAOA,EAAAA;EACpC;AAAA;ACzGL,IAAMC,IAAN,MAAMA,GAAAA;EAMF,YAAYjB,KAAY,GAAGC,KAAY,GAAGC,KAAY,GAAGgB,KAAY,GAAA;AACjEf,SAAKH,IAAIA,IACTG,KAAKF,IAAIA,IACTE,KAAKD,IAAIA,IACTC,KAAKe,IAAIA;EACZ;EAED,OAAOC,IAAAA;AACH,WAAIhB,KAAKH,MAAMmB,GAAEnB,MAGbG,KAAKF,MAAMkB,GAAElB,MAGbE,KAAKD,MAAMiB,GAAEjB,KAGbC,KAAKe,MAAMC,GAAED;EAKpB;EAED,YAAAR;AACI,UAAMU,KAAIZ,KAAKC,KAAKN,KAAKH,IAAIG,KAAKH,IAAIG,KAAKF,IAAIE,KAAKF,IAAIE,KAAKD,IAAIC,KAAKD,IAAIC,KAAKe,IAAIf,KAAKe,CAAAA;AACxF,WAAO,IAAID,GAAWd,KAAKH,IAAIoB,IAAGjB,KAAKF,IAAImB,IAAGjB,KAAKD,IAAIkB,IAAGjB,KAAKe,IAAIE,EAAAA;EACtE;EAED,SAASD,IAAAA;AACL,UAAME,KAAKlB,KAAKe,GACZI,KAAKnB,KAAKH,GACVuB,KAAKpB,KAAKF,GACVuB,KAAKrB,KAAKD,GACRuB,KAAKN,GAAED,GACTQ,KAAKP,GAAEnB,GACP2B,KAAKR,GAAElB,GACP2B,KAAKT,GAAEjB;AAEX,WAAO,IAAIe,GACPI,KAAKK,KAAKJ,KAAKG,KAAKF,KAAKK,KAAKJ,KAAKG,IACnCN,KAAKM,KAAKL,KAAKM,KAAKL,KAAKE,KAAKD,KAAKE,IACnCL,KAAKO,KAAKN,KAAKK,KAAKJ,KAAKG,KAAKF,KAAKC,IACnCJ,KAAKI,KAAKH,KAAKI,KAAKH,KAAKI,KAAKH,KAAKI,EAAAA;EAE1C;EAED,UAAAC;AACI,UAAMT,KAAIjB,KAAKH,IAAIG,KAAKH,IAAIG,KAAKF,IAAIE,KAAKF,IAAIE,KAAKD,IAAIC,KAAKD,IAAIC,KAAKe,IAAIf,KAAKe;AAC9E,WAAO,IAAID,GAAAA,CAAYd,KAAKH,IAAIoB,IAAAA,CAAIjB,KAAKF,IAAImB,IAAAA,CAAIjB,KAAKD,IAAIkB,IAAGjB,KAAKe,IAAIE,EAAAA;EACzE;EAED,MAAMhB,IAAAA;AACF,UAAM0B,KAAU,IAAIb,GAAWb,GAAEJ,GAAGI,GAAEH,GAAGG,GAAEF,GAAG,CAAA,GACxC6B,KAAY,IAAId,GAAAA,CAAYd,KAAKH,GAAAA,CAAIG,KAAKF,GAAAA,CAAIE,KAAKD,GAAGC,KAAKe,CAAAA,GAC3Dc,KAAc7B,KAAK8B,SAASH,EAAAA,EAASG,SAASF,EAAAA;AACpD,WAAO,IAAIhC,EAAQiC,GAAYhC,GAAGgC,GAAY/B,GAAG+B,GAAY9B,CAAAA;EAChE;EAED,OAAAU;AACI,WAAO,CAACT,KAAKH,GAAGG,KAAKF,GAAGE,KAAKD,GAAGC,KAAKe,CAAAA;EACxC;EAED,QAAAL;AACI,WAAO,IAAII,GAAWd,KAAKH,GAAGG,KAAKF,GAAGE,KAAKD,GAAGC,KAAKe,CAAAA;EACtD;EAED,OAAA,UAAiBgB,IAAAA;AACb,UAAMC,KAAQD,GAAElC,IAAI,GACdoC,KAAQF,GAAEjC,IAAI,GACdoC,KAAQH,GAAEhC,IAAI,GACdoC,KAAK9B,KAAK+B,IAAIH,EAAAA,GACdI,KAAKhC,KAAKiC,IAAIL,EAAAA,GACdM,KAAKlC,KAAK+B,IAAIJ,EAAAA,GACdQ,KAAKnC,KAAKiC,IAAIN,EAAAA,GACdS,KAAKpC,KAAK+B,IAAIF,EAAAA,GACdQ,KAAKrC,KAAKiC,IAAIJ,EAAAA;AAQpB,WANU,IAAIpB,GACVqB,KAAKK,KAAKC,KAAKJ,KAAKE,KAAKG,IACzBL,KAAKE,KAAKE,KAAKN,KAAKK,KAAKE,IACzBP,KAAKI,KAAKG,KAAKL,KAAKG,KAAKC,IACzBN,KAAKI,KAAKE,KAAKJ,KAAKG,KAAKE,EAAAA;EAGhC;EAED,UAAAC;AACI,UAAMC,KAAY,KAAK5C,KAAKe,IAAIf,KAAKH,IAAIG,KAAKF,IAAIE,KAAKD,IACjD8C,KAAY,IAAI,KAAK7C,KAAKH,IAAIG,KAAKH,IAAIG,KAAKF,IAAIE,KAAKF,IACrDD,KAAIQ,KAAKyC,MAAMF,IAAWC,EAAAA;AAEhC,QAAI/C;AACJ,UAAMiD,KAAO,KAAK/C,KAAKe,IAAIf,KAAKF,IAAIE,KAAKD,IAAIC,KAAKH;AAE9CC,IAAAA,KADAO,KAAK2C,IAAID,EAAAA,KAAS,IACb1C,KAAK4C,KAAKF,EAAAA,IAAQ1C,KAAK6C,KAAM,IAE9B7C,KAAK8C,KAAKJ,EAAAA;AAGlB,UAAMK,KAAY,KAAKpD,KAAKe,IAAIf,KAAKD,IAAIC,KAAKH,IAAIG,KAAKF,IACjDuD,KAAY,IAAI,KAAKrD,KAAKF,IAAIE,KAAKF,IAAIE,KAAKD,IAAIC,KAAKD,IACrDA,KAAIM,KAAKyC,MAAMM,IAAWC,EAAAA;AAEhC,WAAO,IAAIzD,EAAQC,IAAGC,IAAGC,EAAAA;EAC5B;EAED,OAAA,YAAmBuD,IAAAA;AACf,UAAMC,KAAID,GAAOpD,QACXsD,KAAQD,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA;AAC9B,QAAI1D,IAAGC,IAAGC,IAAGgB;AACb,QAAIyC,KAAQ,GAAG;AACX,YAAMC,KAAI,MAAMpD,KAAKC,KAAKkD,KAAQ,CAAA;AAClCzC,MAAAA,KAAI,OAAO0C,IACX5D,MAAK0D,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB3D,MAAKyD,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB1D,MAAKwD,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME;IACvB,WAAUF,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,GAAI;AACnC,YAAME,KAAI,IAAMpD,KAAKC,KAAK,IAAMiD,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,CAAA;AAChDxC,MAAAA,MAAKwC,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB5D,KAAI,OAAO4D,IACX3D,MAAKyD,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB1D,MAAKwD,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME;IACvB,WAAUF,GAAE,CAAA,IAAKA,GAAE,CAAA,GAAI;AACpB,YAAME,KAAI,IAAMpD,KAAKC,KAAK,IAAMiD,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,CAAA;AAChDxC,MAAAA,MAAKwC,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB5D,MAAK0D,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB3D,KAAI,OAAO2D,IACX1D,MAAKwD,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME;IACvB,OAAM;AACH,YAAMA,KAAI,IAAMpD,KAAKC,KAAK,IAAMiD,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,CAAA;AAChDxC,MAAAA,MAAKwC,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB5D,MAAK0D,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB3D,MAAKyD,GAAE,CAAA,IAAKA,GAAE,CAAA,KAAME,IACpB1D,KAAI,OAAO0D;IACd;AACD,WAAO,IAAI3C,GAAWjB,IAAGC,IAAGC,IAAGgB,EAAAA;EAClC;EAED,OAAA,cAAqB2C,IAAeC,IAAAA;AAChC,UAAMC,KAAYD,KAAQ,GACpBrB,KAAMjC,KAAKiC,IAAIsB,EAAAA,GACfxB,KAAM/B,KAAK+B,IAAIwB,EAAAA;AACrB,WAAO,IAAI9C,GAAW4C,GAAK7D,IAAIyC,IAAKoB,GAAK5D,IAAIwC,IAAKoB,GAAK3D,IAAIuC,IAAKF,EAAAA;EACnE;EAED,WAAAzB;AACI,WAAO,IAAIX,KAAKS,KAAAA,EAAOG,KAAK,IAAA,CAAA;EAC/B;AAAA;AC7JL,IAAMiD,IAAN,MAAMA;EAMF,cAAAC;AACI,UAAMC,KAAY,oBAAIC;AAEtBhE,SAAKiE,mBAAmB,CAACC,IAAcC,OAAAA;AAC9BJ,MAAAA,GAAUK,IAAIF,EAAAA,KACfH,GAAUM,IAAIH,IAAM,oBAAII,KAAAA,GAG5BP,GAAUQ,IAAIL,EAAAA,EAAOM,IAAIL,EAAAA;IAAS,GAGtCnE,KAAKyE,sBAAsB,CAACP,IAAcC,OAAAA;AACjCJ,MAAAA,GAAUK,IAAIF,EAAAA,KAInBH,GAAUQ,IAAIL,EAAAA,EAAOQ,OAAOP,EAAAA;IAAS,GAGzCnE,KAAK2E,mBAAmB,CAACT,IAAcC,OAAAA,CAAAA,CAC9BJ,GAAUK,IAAIF,EAAAA,KAIZH,GAAUQ,IAAIL,EAAAA,EAAOE,IAAID,EAAAA,GAGpCnE,KAAK4E,gBAAiBC,CAAAA,OAAAA;AAClB,UAAKd,GAAUK,IAAIS,GAAMX,IAAAA;AAIzB,mBAAWC,MAAYJ,GAAUQ,IAAIM,GAAMX,IAAAA;AACvCC,UAAAA,GAASU,EAAAA;IACZ;EAER;AAAA;ACvCL,IAAMC,IAAN,MAAMA,GAAAA;EAIF,YAAYC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GACjEC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GACjEC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GACjEC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAAA;AACzE9F,SAAKE,SAAS,CACV6E,IAAKC,IAAKC,IAAKC,IACfC,IAAKC,IAAKC,IAAKC,IACfC,IAAKC,IAAKC,IAAKC,IACfC,IAAKC,IAAKC,IAAKC,EAAAA;EAEtB;EAED,OAAOvC,IAAAA;AACH,QAAIvD,KAAKE,OAAOM,WAAW+C,GAAErD,OAAOM;AAChC,aAAA;AAEJ,QAAIR,KAAKE,WAAWqD,GAAErD;AAClB,aAAA;AAEJ,aAAS6F,KAAI,GAAGA,KAAI/F,KAAKE,OAAOM,QAAQuF;AACpC,UAAI/F,KAAKE,OAAO6F,EAAAA,MAAOxC,GAAErD,OAAO6F,EAAAA;AAC5B,eAAA;AAGR,WAAA;EACH;EAED,SAASxC,IAAAA;AACL,UAAMyC,KAAIhG,KAAKE,QACT+F,KAAI1C,GAAErD;AACZ,WAAO,IAAI4E,GACPmB,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACnDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACnDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,IAAMC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACpDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,IAAMC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACpDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACnDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACnDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,IAAMC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACpDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,EAAA,IAAMC,GAAE,CAAA,IAAKD,GAAE,EAAA,GACpDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACrDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACrDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,IAAMC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACtDC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,IAAMC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACtDC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACvDC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACvDC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,IAAMC,GAAE,EAAA,IAAMD,GAAE,EAAA,GACxDC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,CAAA,IAAKC,GAAE,EAAA,IAAMD,GAAE,EAAA,IAAMC,GAAE,EAAA,IAAMD,GAAE,EAAA,CAAA;EAE/D;EAED,QAAAtF;AACI,UAAMqB,KAAI/B,KAAKE;AAEf,WAAO,IAAI4E,GACP/C,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GACpBA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GACpBA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,EAAA,GAAKA,GAAE,EAAA,GACrBA,GAAE,EAAA,GAAKA,GAAE,EAAA,GAAKA,GAAE,EAAA,GAAKA,GAAE,EAAA,CAAA;EAE9B;EAED,cAAAmE;AACI,UAAMnE,KAAI/B,KAAKE;AAEf,WACI6B,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IACjHA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAC/GA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IACjHA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAClHA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAChHA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA;EAEvH;EAED,SAAAoE;AACI,UAAMpE,KAAI/B,KAAKE,QACTkG,KAAMpG,KAAKkG,YAAAA;AACjB,QAAY,MAARE;AACA,YAAM,IAAIC,MAAM,2BAAA;AAEpB,UAAMC,KAAS,IAAIF;AAEnB,WAAO,IAAItB,GACPwB,MACIvE,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAEtIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAEvIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEnIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAElIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAEvIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAEtIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEpIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEjIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAErIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEtIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEnIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEhIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEtIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAErIuE,MAAAA,CACKvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAEpIuE,MACIvE,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,EAAA;EAGtI;EAED,OAAA,QAAewE,IAAmBC,IAAsBC,IAAAA;AACpD,UAAM5G,KAAI2G,GAAS3G,GACfC,KAAI0G,GAAS1G,GACbC,KAAIyG,GAASzG,GACbgB,KAAIyF,GAASzF,GACXQ,KAAK1B,KAAIA,IACX2B,KAAK1B,KAAIA,IACT2B,KAAK1B,KAAIA,IACP2G,KAAK7G,KAAI0B,IACXoF,KAAK9G,KAAI2B,IACToF,KAAK/G,KAAI4B,IACPoF,KAAK/G,KAAI0B,IACXsF,KAAKhH,KAAI2B,IACTsF,KAAKhH,KAAI0B,IACPuF,KAAKjG,KAAIQ,IACX0F,KAAKlG,KAAIS,IACT0F,KAAKnG,KAAIU,IACP0F,KAAKV,GAAM5G,GACbwC,KAAKoE,GAAM3G,GACX4C,KAAK+D,GAAM1G;AAEf,WAAO,IAAI+E,IACN,KAAK+B,KAAKE,OAAOI,KAAKR,KAAKO,MAAMC,KAAKP,KAAKK,MAAME,IAAI,IACrDR,KAAKO,MAAM7E,KAAK,KAAKqE,KAAKK,OAAO1E,KAAKyE,KAAKE,MAAM3E,IAAI,IACrDuE,KAAKK,MAAMvE,KAAKoE,KAAKE,MAAMtE,KAAK,KAAKgE,KAAKG,OAAOnE,IAAI,GACtD6D,GAAS1G,GAAG0G,GAASzG,GAAGyG,GAASxG,GAAG,CAAA;EAE3C;EAED,WAAAY;AACI,WAAO,IAAIX,KAAKE,OAAOU,KAAK,IAAA,CAAA;EAC/B;AAAA;AC1KL,IAAMwG,IAAN,cAA+BC,MAAAA;EAC3B,YAAmBC,IAAAA;AACfC,UAAM,aAAA,GADSvH,KAAMsH,SAANA;EAElB;AAAA;AAGL,IAAME,IAAN,cAAiCH,MAAAA;EAC7B,YAAmBC,IAAAA;AACfC,UAAM,eAAA,GADSvH,KAAMsH,SAANA;EAElB;AAAA;AAGL,IAAMG,IAAN,cAAiCJ,MAAAA;EAC7B,YAAmBC,IAAAA;AACfC,UAAM,eAAA,GADSvH,KAAMsH,SAANA;EAElB;AAAA;ACXL,IAAeI,IAAf,cAAgC7D,EAAAA;EAiB5B,cAAAC;AACIyD,UAAAA,GAjBGvH,KAAe2H,kBAAAA,OACf3H,KAAe4H,kBAAAA,OACf5H,KAAY6H,eAAAA,OAET7H,KAAA8H,YAAqB,IAAIlI,KACzBI,KAAA+H,YAAwB,IAAIjH,KAC5Bd,KAAMgI,SAAY,IAAIpI,EAAQ,GAAG,GAAG,CAAA,GACpCI,KAAAiI,aAAsB,IAAInD,KAE1B9E,KAAAkI,eAAe,IAAIT,EAAmBzH,IAAAA,GAU5CA,KAAKmI,SAAS,MAAA;IAAA,GAEdnI,KAAKoI,gBAAgB,MAAA;AACjBpI,WAAKuG,WAAW,IAAI3G;IAAS,GAGjCI,KAAKqI,gBAAgB,MAAA;AACjBrI,WAAKwG,WAAW,IAAI1F;IAAY,GAGpCd,KAAKsI,aAAa,MAAA;AACdtI,WAAKyG,QAAQ,IAAI7G,EAAQ,GAAG,GAAG,CAAA;IAAE;EAExC;EAES,gBAAA2I;AACNvI,SAAKiI,aAAanD,EAAQ0D,QAAQxI,KAAK8H,WAAW9H,KAAK+H,WAAW/H,KAAKgI,MAAAA;EAC1E;EAED,IAAA,WAAIzB;AACA,WAAOvG,KAAK8H;EACf;EAED,IAAA,SAAavB,IAAAA;AACJvG,SAAK8H,UAAUW,OAAOlC,EAAAA,MACvBvG,KAAK8H,YAAYvB,IACjBvG,KAAK2H,kBAAAA,MACL3H,KAAKuI,cAAAA,GACLvI,KAAK4E,cAAc5E,KAAKkI,YAAAA;EAE/B;EAED,IAAA,WAAI1B;AACA,WAAOxG,KAAK+H;EACf;EAED,IAAA,SAAavB,IAAAA;AACJxG,SAAK+H,UAAUU,OAAOjC,EAAAA,MACvBxG,KAAK+H,YAAYvB,IACjBxG,KAAK4H,kBAAAA,MACL5H,KAAKuI,cAAAA,GACLvI,KAAK4E,cAAc5E,KAAKkI,YAAAA;EAE/B;EAED,IAAA,QAAIzB;AACA,WAAOzG,KAAKgI;EACf;EAED,IAAA,MAAUvB,IAAAA;AACDzG,SAAKgI,OAAOS,OAAOhC,EAAAA,MACpBzG,KAAKgI,SAASvB,IACdzG,KAAK6H,eAAAA,MACL7H,KAAKuI,cAAAA,GACLvI,KAAK4E,cAAc5E,KAAKkI,YAAAA;EAE/B;EAED,IAAA,UAAIQ;AACA,QAAIA,KAAU,IAAI9I,EAAQ,GAAG,GAAG,CAAA;AAEhC,WADA8I,KAAU1I,KAAKwG,SAASmC,MAAMD,EAAAA,GACvBA;EACV;EAED,IAAA,YAAIE;AACA,WAAO5I,KAAKiI;EACf;AAAA;ACzFL,IAAMY,IAAN,MAAMA,GAAAA;EAIF,YAAY9D,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAChDE,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAChDE,KAAc,GAAGC,KAAc,GAAGC,KAAc,GAAA;AACxDzF,SAAKE,SAAS,CACV6E,IAAKC,IAAKC,IACVE,IAAKC,IAAKC,IACVE,IAAKC,IAAKC,EAAAA;EAEjB;EAED,OAAOlC,IAAAA;AACH,QAAIvD,KAAKE,OAAOM,WAAW+C,GAAErD,OAAOM;AAChC,aAAA;AAEJ,QAAIR,KAAKE,WAAWqD,GAAErD;AAClB,aAAA;AAEJ,aAAS6F,KAAI,GAAGA,KAAI/F,KAAKE,OAAOM,QAAQuF;AACpC,UAAI/F,KAAKE,OAAO6F,EAAAA,MAAOxC,GAAErD,OAAO6F,EAAAA;AAC5B,eAAA;AAGR,WAAA;EACH;EAED,SAAS9F,IAAAA;AACL,UAAM+F,KAAIhG,KAAKE,QACT+F,KAAIhG,GAAEC;AACZ,WAAO,IAAI2I,GACP5C,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,GACrCC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,IAAKC,GAAE,CAAA,IAAKD,GAAE,CAAA,CAAA;EAE5C;EAED,QAAAtF;AACI,UAAMqB,KAAI/B,KAAKE;AAEf,WAAO,IAAI2I,GACP9G,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GACdA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GACdA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,CAAA;EAErB;EAED,OAAA,IAAW9B,KAAY,GAAA;AACnB,WAAO,IAAI4I,GAAQ5I,IAAG,GAAG,GAAG,GAAGA,IAAG,GAAG,GAAG,GAAGA,EAAAA;EAC9C;EAED,OAAA,SAAgBA,IAAAA;AACZ,WAAO,IAAI4I,GAAQ5I,GAAEJ,GAAG,GAAG,GAAG,GAAGI,GAAEH,GAAG,GAAG,GAAG,GAAGG,GAAEF,CAAAA;EACpD;EAED,OAAA,uBAA8BiB,IAAAA;AAY1B,WAXe,IAAI6H,GACf,IAAI,IAAI7H,GAAElB,IAAIkB,GAAElB,IAAI,IAAIkB,GAAEjB,IAAIiB,GAAEjB,GAChC,IAAIiB,GAAEnB,IAAImB,GAAElB,IAAI,IAAIkB,GAAEjB,IAAIiB,GAAED,GAC5B,IAAIC,GAAEnB,IAAImB,GAAEjB,IAAI,IAAIiB,GAAElB,IAAIkB,GAAED,GAC5B,IAAIC,GAAEnB,IAAImB,GAAElB,IAAI,IAAIkB,GAAEjB,IAAIiB,GAAED,GAC5B,IAAI,IAAIC,GAAEnB,IAAImB,GAAEnB,IAAI,IAAImB,GAAEjB,IAAIiB,GAAEjB,GAChC,IAAIiB,GAAElB,IAAIkB,GAAEjB,IAAI,IAAIiB,GAAEnB,IAAImB,GAAED,GAC5B,IAAIC,GAAEnB,IAAImB,GAAEjB,IAAI,IAAIiB,GAAElB,IAAIkB,GAAED,GAC5B,IAAIC,GAAElB,IAAIkB,GAAEjB,IAAI,IAAIiB,GAAEnB,IAAImB,GAAED,GAC5B,IAAI,IAAIC,GAAEnB,IAAImB,GAAEnB,IAAI,IAAImB,GAAElB,IAAIkB,GAAElB,CAAAA;EAGvC;EAED,OAAA,kBAAyByD,IAAAA;AACrB,UAAMuF,KAAKzI,KAAK+B,IAAImB,GAAE1D,CAAAA,GAChBsH,KAAK9G,KAAKiC,IAAIiB,GAAE1D,CAAAA,GAChBsC,KAAK9B,KAAK+B,IAAImB,GAAEzD,CAAAA,GAChBuC,KAAKhC,KAAKiC,IAAIiB,GAAEzD,CAAAA,GAChB2C,KAAKpC,KAAK+B,IAAImB,GAAExD,CAAAA,GAChB2C,KAAKrC,KAAKiC,IAAIiB,GAAExD,CAAAA;AActB,WAAO,IAAI8I,GAAAA,GAZY,CACnB1G,KAAKM,KAAKJ,KAAK8E,KAAKzE,IAAAA,CACnBP,KAAKO,KAAKL,KAAK8E,KAAK1E,IACrBJ,KAAKyG,IACLA,KAAKpG,IACLoG,KAAKrG,IAAAA,CACJ0E,IAAAA,CACA9E,KAAKI,KAAKN,KAAKgF,KAAKzE,IACrBL,KAAKK,KAAKP,KAAKgF,KAAK1E,IACpBN,KAAK2G,EAAAA,CAAAA;EAIZ;EAED,WAAAnI;AACI,WAAO,IAAIX,KAAKE,OAAOU,KAAK,IAAA,CAAA;EAC/B;AAAA;ACtGL,IAAMmI,IAAN,MAAMA,GAAAA;EAyBF,YACIC,KAAsB,GACtBC,KAAiC,MACjCC,KAAiC,MACjCC,KAA8B,MAC9BC,KAA4B,MAAA;AA3BzBpJ,SAAOqJ,UAAAA,OACPrJ,KAAQsJ,WAAAA,OA4BXtJ,KAAKuJ,eAAeP,IACpBhJ,KAAKwJ,aAAaP,MAAa,IAAIQ,aAAa,CAAA,GAChDzJ,KAAK0J,aAAaR,MAAa,IAAIO,aAAa,CAAA,GAChDzJ,KAAK2J,UAAUR,MAAU,IAAIM,aAAa,CAAA,GAC1CzJ,KAAK4J,UAAUR,MAAU,IAAIS,WAAW,CAAA,GACxC7J,KAAK8J,aAAa,IAAID,WAAW7J,KAAKgJ,WAAAA,GAEtChJ,KAAK+J,YAAaC,CAAAA,OAAAA;AACd,eAASjE,KAAI,GAAGA,KAAI/F,KAAKgJ,aAAajD;AAClC/F,aAAKiJ,UAAU,IAAIlD,KAAI,CAAA,KAAMiE,GAAYnK,GACzCG,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,KAAMiE,GAAYlK,GACzCE,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,KAAMiE,GAAYjK;AAG7CC,WAAKqJ,UAAAA;IAAc,GAGvBrJ,KAAKiK,SAAUzD,CAAAA,OAAAA;AACX,YAAM0D,KAAIrB,EAAQsB,uBAAuB3D,EAAAA,EAAUtG;AACnD,eAAS6F,KAAI,GAAGA,KAAI/F,KAAKgJ,aAAajD,MAAK;AACvC,cAAMlG,KAAIG,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,GAC3BjG,KAAIE,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,GAC3BhG,KAAIC,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA;AAEjC/F,aAAKiJ,UAAU,IAAIlD,KAAI,CAAA,IAAKmE,GAAE,CAAA,IAAKrK,KAAIqK,GAAE,CAAA,IAAKpK,KAAIoK,GAAE,CAAA,IAAKnK,IACzDC,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,IAAKmE,GAAE,CAAA,IAAKrK,KAAIqK,GAAE,CAAA,IAAKpK,KAAIoK,GAAE,CAAA,IAAKnK,IACzDC,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,IAAKmE,GAAE,CAAA,IAAKrK,KAAIqK,GAAE,CAAA,IAAKpK,KAAIoK,GAAE,CAAA,IAAKnK;AAEzD,cAAMqK,KAAkB,IAAItJ,EACxBd,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,GACvB/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,GACvB/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,GACvB/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,CAAA,GAGrBsE,KAAS7D,GAAS1E,SAASsI,EAAAA;AACjCpK,aAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAKsE,GAAOxK,GACnCG,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAKsE,GAAOvK,GACnCE,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAKsE,GAAOtK,GACnCC,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAKsE,GAAOtJ;MACtC;AAEDf,WAAKqJ,UAAAA;IAAc,GAGvBrJ,KAAKyG,QAASA,CAAAA,OAAAA;AACV,eAASV,KAAI,GAAGA,KAAI/F,KAAKgJ,aAAajD;AAClC/F,aAAKiJ,UAAU,IAAIlD,KAAI,CAAA,KAAMU,GAAM5G,GACnCG,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,KAAMU,GAAM3G,GACnCE,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,KAAMU,GAAM1G,GAEnCC,KAAKmJ,OAAO,IAAIpD,KAAI,CAAA,KAAMU,GAAM5G,GAChCG,KAAKmJ,OAAO,IAAIpD,KAAI,CAAA,KAAMU,GAAM3G,GAChCE,KAAKmJ,OAAO,IAAIpD,KAAI,CAAA,KAAMU,GAAM1G;AAGpCC,WAAKqJ,UAAAA;IAAc,GAGvBrJ,KAAKsK,YAAY,MAAA;AACb,YAAMC,KAAO,IAAIV,WAAW7J,KAAKgJ,cAAcD,GAAUyB,SAAAA,GAEnDC,KAAW,IAAIhB,aAAac,GAAKrK,MAAAA,GACjCwK,KAAW,IAAIb,WAAWU,GAAKrK,MAAAA;AAErC,eAAS6F,KAAI,GAAGA,KAAI/F,KAAKgJ,aAAajD;AAClC0E,QAAAA,GAAS,IAAI1E,KAAI,CAAA,IAAK/F,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,GAC7C0E,GAAS,IAAI1E,KAAI,CAAA,IAAK/F,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,GAC7C0E,GAAS,IAAI1E,KAAI,CAAA,IAAK/F,KAAKiJ,UAAU,IAAIlD,KAAI,CAAA,GAE7C2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK/F,KAAKoJ,OAAO,IAAIrD,KAAI,CAAA,GAChD2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK/F,KAAKoJ,OAAO,IAAIrD,KAAI,CAAA,GAChD2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK/F,KAAKoJ,OAAO,IAAIrD,KAAI,CAAA,GAChD2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK/F,KAAKoJ,OAAO,IAAIrD,KAAI,CAAA,GAEhD0E,GAAS,IAAI1E,KAAI,IAAI,CAAA,IAAK/F,KAAKmJ,OAAO,IAAIpD,KAAI,CAAA,GAC9C0E,GAAS,IAAI1E,KAAI,IAAI,CAAA,IAAK/F,KAAKmJ,OAAO,IAAIpD,KAAI,CAAA,GAC9C0E,GAAS,IAAI1E,KAAI,IAAI,CAAA,IAAK/F,KAAKmJ,OAAO,IAAIpD,KAAI,CAAA,GAE9C2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAkC,MAA5B/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAW,MAAO,KACtE2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAkC,MAA5B/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAW,MAAO,KACtE2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAkC,MAA5B/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAW,MAAO,KACtE2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAkC,MAA5B/F,KAAKkJ,UAAU,IAAInD,KAAI,CAAA,IAAW,MAAO;AAG1E,aAAOwE;IAAI,GAGfvK,KAAK2K,WAAW,CACZ1B,IACAC,IACAC,IACAC,IACAwB,OAAAA;AAEAC,cAAQC,OACJ7B,GAAU8B,eAAkC,IAAnB/K,KAAKgJ,cAAkB,GAChD,YAA+B,IAAnBhJ,KAAKgJ,cAAkB,CAAA,eAAgBC,GAAU8B,UAAAA,QAAAA,GAEjE/K,KAAKwJ,aAAa,IAAIC,aAAaR,EAAAA,GACnCjJ,KAAK0J,aAAa,IAAID,aAAaP,EAAAA,GACnClJ,KAAK2J,UAAU,IAAIF,aAAaN,EAAAA,GAChCnJ,KAAK4J,UAAU,IAAIC,WAAWT,EAAAA,GAC9BpJ,KAAK8J,aAAa,IAAID,WAAWe,EAAAA,GACjC5K,KAAKsJ,WAAAA;IAAgB;EAE5B;EAED,OAAA,YAAmBiB,IAAAA;AACf,UAAMvB,KAAcuB,GAAK/J,SAASuI,GAAUyB,WACtCvB,KAAY,IAAIQ,aAAa,IAAIT,EAAAA,GACjCE,KAAY,IAAIO,aAAa,IAAIT,EAAAA,GACjCG,KAAS,IAAIM,aAAa,IAAIT,EAAAA,GAC9BI,KAAS,IAAIS,WAAW,IAAIb,EAAAA,GAE5ByB,KAAW,IAAIhB,aAAac,GAAKrK,MAAAA,GACjCwK,KAAW,IAAIb,WAAWU,GAAKrK,MAAAA;AAErC,aAAS6F,KAAI,GAAGA,KAAIiD,IAAajD;AAC7BkD,MAAAA,GAAU,IAAIlD,KAAI,CAAA,IAAK0E,GAAS,IAAI1E,KAAI,CAAA,GACxCkD,GAAU,IAAIlD,KAAI,CAAA,IAAK0E,GAAS,IAAI1E,KAAI,CAAA,GACxCkD,GAAU,IAAIlD,KAAI,CAAA,IAAK0E,GAAS,IAAI1E,KAAI,CAAA,GAExCmD,GAAU,IAAInD,KAAI,CAAA,KAAM2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,KAC3DmD,GAAU,IAAInD,KAAI,CAAA,KAAM2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,KAC3DmD,GAAU,IAAInD,KAAI,CAAA,KAAM2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,KAC3DmD,GAAU,IAAInD,KAAI,CAAA,KAAM2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,KAE3DoD,GAAO,IAAIpD,KAAI,CAAA,IAAK0E,GAAS,IAAI1E,KAAI,IAAI,CAAA,GACzCoD,GAAO,IAAIpD,KAAI,CAAA,IAAK0E,GAAS,IAAI1E,KAAI,IAAI,CAAA,GACzCoD,GAAO,IAAIpD,KAAI,CAAA,IAAK0E,GAAS,IAAI1E,KAAI,IAAI,CAAA,GAEzCqD,GAAO,IAAIrD,KAAI,CAAA,IAAK2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,GAC3CqD,GAAO,IAAIrD,KAAI,CAAA,IAAK2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,GAC3CqD,GAAO,IAAIrD,KAAI,CAAA,IAAK2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,GAC3CqD,GAAO,IAAIrD,KAAI,CAAA,IAAK2E,GAAS,KAAK3E,KAAI,KAAK,CAAA;AAG/C,WAAO,IAAIgD,GAAUC,IAAaC,IAAWC,IAAWC,IAAQC,EAAAA;EACnE;EAED,IAAA,cAAIJ;AACA,WAAOhJ,KAAKuJ;EACf;EAED,IAAA,YAAIN;AACA,WAAOjJ,KAAKwJ;EACf;EAED,IAAA,YAAIN;AACA,WAAOlJ,KAAK0J;EACf;EAED,IAAA,SAAIP;AACA,WAAOnJ,KAAK2J;EACf;EAED,IAAA,SAAIP;AACA,WAAOpJ,KAAK4J;EACf;EAED,IAAA,YAAIgB;AACA,WAAO5K,KAAK8J;EACf;AAAA;AAlMMf,EAAAyB,YAAY;ACHvB,IAAMQ,IAAN,MAAMA;EAGK,OAAA,WAAkB9K,IAAqB8I,IAAAA;AAC1C,QAAIiC,KAAS;AACbA,IAAAA,MAAU,kBAAkBjC,EAAAA;;AAE5B,UAAMkC,KAAa,CAAC,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,UAAU,UAAU,QAAA;AACzE,aAASnF,KAAI,GAAGA,KAAI,IAAIA;AACpBmF,MAAAA,GAAWC,KAAK,UAAUpF,EAAAA,EAAAA;AAE9BmF,IAAAA,GAAWC,KAAK,SAAA,GAChBD,GAAWC,KAAK,SAAA,GAChBD,GAAWC,KAAK,SAAA,GAChBD,GAAWC,KAAK,SAAA,GAChBD,GAAWC,KAAK,OAAA,GAChBD,GAAWC,KAAK,OAAA,GAChBD,GAAWC,KAAK,OAAA,GAChBD,GAAWC,KAAK,OAAA;AAEhB,eAAWC,MAAYF;AACnBD,MAAAA,MAAU,kBAAkBG,EAAAA;;AAEhCH,IAAAA,MAAU;AAEV,UAAMI,KAAe,IAAIC,cAAcC,OAAON,EAAAA,GAExCO,KAAe,KACfC,KAAYzC,KAAcwC,IAC1BE,KAAS,IAAIC,SAAS,IAAIC,YAAYP,GAAa7K,SAASiL,EAAAA,CAAAA;AAClE,QAAI5B,WAAW6B,GAAOxL,MAAAA,EAAQmE,IAAIgH,IAAc,CAAA;AAEhD,UAAMZ,KAAW,IAAIhB,aAAavJ,EAAAA,GAC5BwK,KAAW,IAAIb,WAAW3J,EAAAA,GAE1B2L,KAASR,GAAa7K,QAGtBsL,KAAeC,KACfC,KAAaF;AACnB,aAAS/F,KAAI,GAAGA,KAAIiD,IAAajD,MAAK;AAClC,YAAMkG,KAAOxB,GAAS,IAAI1E,KAAI,CAAA,GACxBmG,KAAOzB,GAAS,IAAI1E,KAAI,CAAA,GACxBoG,KAAO1B,GAAS,IAAI1E,KAAI,CAAA,GAExBqG,MAAU1B,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,MAAM,OAAO/F,KAAKqM,OACxDC,MAAU5B,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,MAAM,OAAO/F,KAAKqM,OACxDE,MAAU7B,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,MAAM,OAAO/F,KAAKqM,OAExDG,KAAQ9B,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,KACpC0G,KAAUpM,KAAKqM,IAAIF,MAAS,IAAIA,GAAAA,GAEhCG,KAAStM,KAAKqM,IAAIjC,GAAS,IAAI1E,KAAI,IAAI,CAAA,CAAA,GACvC6G,KAASvM,KAAKqM,IAAIjC,GAAS,IAAI1E,KAAI,IAAI,CAAA,CAAA,GACvC8G,KAASxM,KAAKqM,IAAIjC,GAAS,IAAI1E,KAAI,IAAI,CAAA,CAAA;AAE7C,UAAI/E,KAAI,IAAIF,GACP4J,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,MACnC2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,MACnC2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,MACnC2E,GAAS,KAAK3E,KAAI,KAAK,CAAA,IAAK,OAAO,GAAA;AAExC/E,MAAAA,KAAIA,GAAET,UAAAA;AAEN,YAAMuM,KAAO9L,GAAED,GACTgM,KAAO/L,GAAEnB,GACTmN,KAAOhM,GAAElB,GACTmN,KAAOjM,GAAEjB;AAEf2L,MAAAA,GAAOwB,WAAWrB,KAASL,KAAezF,KAAI,GAAGkG,IAAAA,IAAM,GACvDP,GAAOwB,WAAWrB,KAASL,KAAezF,KAAI,GAAGmG,IAAAA,IAAM,GACvDR,GAAOwB,WAAWrB,KAASL,KAAezF,KAAI,GAAGoG,IAAAA,IAAM,GAEvDT,GAAOwB,WAAWrB,KAASL,KAAezF,KArC1B,KAqC4C,GAAGqG,IAAAA,IAAQ,GACvEV,GAAOwB,WAAWrB,KAASL,KAAezF,KAtC1B,KAsC4C,GAAGuG,IAAAA,IAAQ,GACvEZ,GAAOwB,WAAWrB,KAASL,KAAezF,KAvC1B,KAuC4C,GAAGwG,IAAAA,IAAQ,GAEvEb,GAAOwB,WAAWrB,KAASL,KAAezF,KAxCvBoH,KAwC2CV,IAAAA,IAAS,GAEvEf,GAAOwB,WAAWrB,KAASL,KAAezF,KAAI+F,KAAe,GAAGa,IAAAA,IAAQ,GACxEjB,GAAOwB,WAAWrB,KAASL,KAAezF,KAAI+F,KAAe,GAAGc,IAAAA,IAAQ,GACxElB,GAAOwB,WAAWrB,KAASL,KAAezF,KAAI+F,KAAe,GAAGe,IAAAA,IAAQ,GAExEnB,GAAOwB,WAAWrB,KAASL,KAAezF,KAAIiG,KAAa,GAAGc,IAAAA,IAAM,GACpEpB,GAAOwB,WAAWrB,KAASL,KAAezF,KAAIiG,KAAa,GAAGe,IAAAA,IAAM,GACpErB,GAAOwB,WAAWrB,KAASL,KAAezF,KAAIiG,KAAa,GAAGgB,IAAAA,IAAM,GACpEtB,GAAOwB,WAAWrB,KAASL,KAAezF,KAAIiG,KAAa,IAAIiB,IAAAA,IAAM;IACxE;AAED,WAAOvB,GAAOxL;EACjB;AAAA;AAzFa8K,EAAKqB,QAAG;ACG1B,IAAMe,IAAN,cAAoB1F,EAAAA;EAMhB,YAAY2F,KAAAA,QAA+BC;AACvC/F,UAAAA,GANGvH,KAAeuN,kBAAAA,OAGdvN,KAASwN,YAAAA,OAKbxN,KAAKyN,QAAQJ,MAAS,IAAItE,KAE1B/I,KAAKoI,gBAAgB,MAAA;AACjBpI,WAAKuK,KAAKR,UAAU/J,KAAKuG,QAAAA,GACzBvG,KAAKuG,WAAW,IAAI3G;IAAS,GAGjCI,KAAKqI,gBAAgB,MAAA;AACjBrI,WAAKuK,KAAKN,OAAOjK,KAAKwG,QAAAA,GACtBxG,KAAKwG,WAAW,IAAI1F;IAAY,GAGpCd,KAAKsI,aAAa,MAAA;AACdtI,WAAKuK,KAAK9D,MAAMzG,KAAKyG,KAAAA,GACrBzG,KAAKyG,QAAQ,IAAI7G,EAAQ,GAAG,GAAG,CAAA;IAAE;EAExC;EAED,WAAW8N,KAAsB,MAAMC,KAAwB,MAAA;AAC3D,QAAA,CAAKC;AAAU;AAEf,QAAKD,IAAAA;AAEE,UAAe,YAAXA,MAAiC,UAAXA;AAC7B,cAAM,IAAItH,MAAM,0CAAA;IAAA;AAFhBsH,MAAAA,KAAS;AAKb,QAAA,CAAKD,IAAM;AACP,YAAMG,KAAM,oBAAIC;AAChBJ,MAAAA,KAAO,SAASG,GAAIE,YAAAA,CAAAA,IAAiBF,GAAIG,SAAAA,IAAa,CAAA,IAAKH,GAAII,QAAAA,CAAAA,IAAaN,EAAAA;IAC/E;AAED3N,SAAKqI,cAAAA,GACLrI,KAAKsI,WAAAA,GACLtI,KAAKoI,cAAAA;AAEL,UAAMmC,KAAOvK,KAAKuK,KAAKD,UAAAA;AACvB,QAAI4D;AACJ,QAAe,UAAXP,IAAkB;AAClB,YAAMQ,KAAUnD,EAAUoD,WAAW7D,GAAKrK,QAAQF,KAAKuK,KAAKvB,WAAAA;AAC5DkF,MAAAA,KAAO,IAAIG,KAAK,CAACF,EAAAA,GAAU,EAAEjK,MAAM,2BAAA,CAAA;IACtC;AACGgK,MAAAA,KAAO,IAAIG,KAAK,CAAC9D,GAAKrK,MAAAA,GAAS,EAAEgE,MAAM,2BAAA,CAAA;AAG3C,UAAMoK,KAAOV,SAASW,cAAc,GAAA;AACpCD,IAAAA,GAAKE,WAAWd,IAChBY,GAAKG,OAAOC,IAAIC,gBAAgBT,EAAAA,GAChCI,GAAKM,MAAAA;EACR;EAED,IAAA,OAAIrE;AACA,WAAOvK,KAAKyN;EACf;EAED,IAAA,WAAIoB;AACA,WAAO7O,KAAKwN;EACf;EAED,IAAA,SAAaqB,IAAAA;AACL7O,SAAKwN,cAAcqB,OACnB7O,KAAKwN,YAAYqB,IACjB7O,KAAKuN,kBAAAA,MACLvN,KAAK4E,cAAc5E,KAAKkI,YAAAA;EAE/B;AAAA;AC3EL,IAAM4G,IAAN,MAAMA;EAkBF,cAAAhL;AAjBQ9D,SAAG+O,MAAW,MACd/O,KAAGgP,MAAW,MACdhP,KAAKiP,QAAW,KAChBjP,KAAIkP,OAAW,KAEflP,KAAMmP,SAAW,KACjBnP,KAAOoP,UAAW,KAElBpP,KAAAqP,oBAA6B,IAAIvK,KACjC9E,KAAAsP,cAAuB,IAAIxK,KAC3B9E,KAAAuP,YAAqB,IAAIzK,KAQ7B9E,KAAKwP,0BAA0B,MAAA;AAE3BxP,WAAKqP,oBAAoB,IAAIvK,EACzB,IAAI9E,KAAKyP,KAAKzP,KAAK0P,OAAO,GAAG,GAAG,GAChC,GAAA,KAAQ1P,KAAK2P,KAAK3P,KAAK4P,QAAQ,GAAG,GAClC,GAAG,GAAG5P,KAAK6P,OAAO7P,KAAK6P,MAAM7P,KAAK8P,OAAO,GACzC,GAAG,GAAA,CAAK9P,KAAK6P,MAAM7P,KAAK8P,QAAS9P,KAAK6P,MAAM7P,KAAK8P,OAAO,CAAA,GAG5D9P,KAAKuP,YAAYvP,KAAK+P,iBAAiBjO,SAAS9B,KAAKgQ,UAAAA;IAAW,GAGpEhQ,KAAKmI,SAAS,CAAC5B,IAAmBC,OAAAA;AAC9B,YAAM0D,KAAIrB,EAAQsB,uBAAuB3D,EAAAA,EAAUtG,QAC7CC,KAAIoG,GAAS9F,KAAAA;AAGnBT,WAAKsP,cAAc,IAAIxK,EACnBoF,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAI,GAClBA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAI,GAClBA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAI,GAAA,CACjB/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,IAAK/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,IAAK/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,GAAA,CACrC/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,IAAK/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,IAAK/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,GAAA,CACrC/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,IAAK/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,IAAK/J,GAAE,CAAA,IAAK+J,GAAE,CAAA,GACtC,CAAA,GAGJlK,KAAKuP,YAAYvP,KAAK+P,iBAAiBjO,SAAS9B,KAAKgQ,UAAAA;IAAW,GAGpEhQ,KAAKiQ,UAAU,CAACP,IAAeE,OAAAA;AAC3B5P,WAAKmP,SAASO,IACd1P,KAAKoP,UAAUQ,IACf5P,KAAKwP,wBAAAA;IAAyB;EAErC;EAED,IAAA,KAAIC;AACA,WAAOzP,KAAK+O;EACf;EAED,IAAA,GAAOU,IAAAA;AACCzP,SAAK+O,QAAQU,OACbzP,KAAK+O,MAAMU,IACXzP,KAAKwP,wBAAAA;EAEZ;EAED,IAAA,KAAIG;AACA,WAAO3P,KAAKgP;EACf;EAED,IAAA,GAAOW,IAAAA;AACC3P,SAAKgP,QAAQW,OACb3P,KAAKgP,MAAMW,IACX3P,KAAKwP,wBAAAA;EAEZ;EAED,IAAA,OAAIM;AACA,WAAO9P,KAAKiP;EACf;EAED,IAAA,KAASa,IAAAA;AACD9P,SAAKiP,UAAUa,OACf9P,KAAKiP,QAAQa,IACb9P,KAAKwP,wBAAAA;EAEZ;EAED,IAAA,MAAIK;AACA,WAAO7P,KAAKkP;EACf;EAED,IAAA,IAAQW,IAAAA;AACA7P,SAAKkP,SAASW,OACd7P,KAAKkP,OAAOW,IACZ7P,KAAKwP,wBAAAA;EAEZ;EAED,IAAA,QAAIE;AACA,WAAO1P,KAAKmP;EACf;EAED,IAAA,SAAIS;AACA,WAAO5P,KAAKoP;EACf;EAED,IAAA,mBAAIW;AACA,WAAO/P,KAAKqP;EACf;EAED,IAAA,aAAIW;AACA,WAAOhQ,KAAKsP;EACf;EAED,IAAA,WAAIY;AACA,WAAOlQ,KAAKuP;EACf;AAAA;ACzHL,IAAMY,IAAN,MAAMA,GAAAA;EAMF,YAAYtQ,KAAY,GAAGC,KAAY,GAAGC,KAAY,GAAGgB,KAAY,GAAA;AACjEf,SAAKH,IAAIA,IACTG,KAAKF,IAAIA,IACTE,KAAKD,IAAIA,IACTC,KAAKe,IAAIA;EACZ;EAED,OAAOd,IAAAA;AACH,WAAID,KAAKH,MAAMI,GAAEJ,MAGbG,KAAKF,MAAMG,GAAEH,MAGbE,KAAKD,MAAME,GAAEF,KAGbC,KAAKe,MAAMd,GAAEc;EAKpB;EAID,IAAId,IAAAA;AACA,WAAiB,YAAA,OAANA,KACA,IAAIkQ,GAAQnQ,KAAKH,IAAII,IAAGD,KAAKF,IAAIG,IAAGD,KAAKD,IAAIE,IAAGD,KAAKe,IAAId,EAAAA,IAEzD,IAAIkQ,GAAQnQ,KAAKH,IAAII,GAAEJ,GAAGG,KAAKF,IAAIG,GAAEH,GAAGE,KAAKD,IAAIE,GAAEF,GAAGC,KAAKe,IAAId,GAAEc,CAAAA;EAE/E;EAID,SAASd,IAAAA;AACL,WAAiB,YAAA,OAANA,KACA,IAAIkQ,GAAQnQ,KAAKH,IAAII,IAAGD,KAAKF,IAAIG,IAAGD,KAAKD,IAAIE,IAAGD,KAAKe,IAAId,EAAAA,IAEzD,IAAIkQ,GAAQnQ,KAAKH,IAAII,GAAEJ,GAAGG,KAAKF,IAAIG,GAAEH,GAAGE,KAAKD,IAAIE,GAAEF,GAAGC,KAAKe,IAAId,GAAEc,CAAAA;EAE/E;EAKD,SAASd,IAAAA;AACL,WAAiB,YAAA,OAANA,KACA,IAAIkQ,GAAQnQ,KAAKH,IAAII,IAAGD,KAAKF,IAAIG,IAAGD,KAAKD,IAAIE,IAAGD,KAAKe,IAAId,EAAAA,IACzDA,cAAakQ,KACb,IAAIA,GAAQnQ,KAAKH,IAAII,GAAEJ,GAAGG,KAAKF,IAAIG,GAAEH,GAAGE,KAAKD,IAAIE,GAAEF,GAAGC,KAAKe,IAAId,GAAEc,CAAAA,IAEjE,IAAIoP,GACPnQ,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,CAAA,IAAKF,KAAKe,IAAId,GAAEC,OAAO,EAAA,GACvFF,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,CAAA,IAAKF,KAAKe,IAAId,GAAEC,OAAO,EAAA,GACvFF,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,EAAA,IAAMF,KAAKe,IAAId,GAAEC,OAAO,EAAA,GACxFF,KAAKH,IAAII,GAAEC,OAAO,CAAA,IAAKF,KAAKF,IAAIG,GAAEC,OAAO,CAAA,IAAKF,KAAKD,IAAIE,GAAEC,OAAO,EAAA,IAAMF,KAAKe,IAAId,GAAEC,OAAO,EAAA,CAAA;EAGnG;EAED,IAAID,IAAAA;AACA,WAAOD,KAAKH,IAAII,GAAEJ,IAAIG,KAAKF,IAAIG,GAAEH,IAAIE,KAAKD,IAAIE,GAAEF,IAAIC,KAAKe,IAAId,GAAEc;EAClE;EAED,KAAKd,IAAYE,IAAAA;AACb,WAAO,IAAIgQ,GACPnQ,KAAKH,KAAKI,GAAEJ,IAAIG,KAAKH,KAAKM,IAC1BH,KAAKF,KAAKG,GAAEH,IAAIE,KAAKF,KAAKK,IAC1BH,KAAKD,KAAKE,GAAEF,IAAIC,KAAKD,KAAKI,IAC1BH,KAAKe,KAAKd,GAAEc,IAAIf,KAAKe,KAAKZ,EAAAA;EAEjC;EAED,YAAAC;AACI,WAAOC,KAAKC,KAAKN,KAAKH,IAAIG,KAAKH,IAAIG,KAAKF,IAAIE,KAAKF,IAAIE,KAAKD,IAAIC,KAAKD,IAAIC,KAAKe,IAAIf,KAAKe,CAAAA;EACxF;EAED,WAAWd,IAAAA;AACP,WAAOI,KAAKC,MAAMN,KAAKH,IAAII,GAAEJ,MAAM,KAAKG,KAAKF,IAAIG,GAAEH,MAAM,KAAKE,KAAKD,IAAIE,GAAEF,MAAM,KAAKC,KAAKe,IAAId,GAAEc,MAAM,CAAA;EACxG;EAED,YAAAR;AACI,UAAMC,KAASR,KAAKI,UAAAA;AAEpB,WAAO,IAAI+P,GAAQnQ,KAAKH,IAAIW,IAAQR,KAAKF,IAAIU,IAAQR,KAAKD,IAAIS,IAAQR,KAAKe,IAAIP,EAAAA;EAClF;EAED,OAAAC;AACI,WAAO,CAACT,KAAKH,GAAGG,KAAKF,GAAGE,KAAKD,GAAGC,KAAKe,CAAAA;EACxC;EAED,QAAAL;AACI,WAAO,IAAIyP,GAAQnQ,KAAKH,GAAGG,KAAKF,GAAGE,KAAKD,GAAGC,KAAKe,CAAAA;EACnD;EAED,WAAAJ;AACI,WAAO,IAAIX,KAAKS,KAAAA,EAAOG,KAAK,IAAA,CAAA;EAC/B;AAAA;ACtGL,IAAMwP,IAAN,cAAqB1I,EAAAA;EAKjB,YAAY2I,KAAAA,QAAiC/C;AACzC/F,UAAAA,GAEAvH,KAAKyN,QAAQ4C,MAAkB,IAAIvB,KACnC9O,KAAK8H,YAAY,IAAIlI,EAAQ,GAAG,GAAA,EAAI,GAEpCI,KAAKmI,SAAS,MAAA;AACVnI,WAAKuK,KAAKpC,OAAOnI,KAAKuG,UAAUvG,KAAKwG,QAAAA;IAAS,GAGlDxG,KAAKsQ,mBAAmB,CAACzQ,IAAWC,OAAAA;AAChC,YAAMyQ,KAAkB,IAAIJ,EAAQtQ,IAAGC,IAAAA,IAAO,CAAA,GACxC0Q,KAA0BxQ,KAAKyN,MAAMsC,iBAAiB5J,OAAAA,GACtDsK,KAAoBF,GAAgBzO,SAAS0O,EAAAA,GAC7CE,KAAoB1Q,KAAKyN,MAAMuC,WAAW7J,OAAAA,GAC1CwK,KAAmBF,GAAkB3O,SAAS4O,EAAAA;AAOpD,aAN2B,IAAI9Q,EAC3B+Q,GAAiB9Q,IAAI8Q,GAAiB5P,GACtC4P,GAAiB7Q,IAAI6Q,GAAiB5P,GACtC4P,GAAiB5Q,IAAI4Q,GAAiB5P,CAAAA,EAEL6P,SAAS5Q,KAAKuG,QAAAA,EAAUhG,UAAAA;IAC7C;EAEvB;EAED,IAAA,OAAIgK;AACA,WAAOvK,KAAKyN;EACf;AAAA;AC/BL,IAAMoD,IAAN,cAAoBhN,EAAAA;EAShB,cAAAC;AACIyD,UAAAA,GATIvH,KAAQ8Q,WAAe,CAAA,GAW3B9Q,KAAK+Q,YAAazJ,CAAAA,OAAAA;AACdtH,WAAKgR,QAAQ7F,KAAK7D,EAAAA,GAClBtH,KAAK4E,cAAc,IAAIwC,EAAiBE,EAAAA,CAAAA;IAAQ,GAGpDtH,KAAKiR,eAAgB3J,CAAAA,OAAAA;AACjB,YAAM4J,KAAQlR,KAAKgR,QAAQG,QAAQ7J,EAAAA;AACnC,UAAI4J,KAAQ;AACR,cAAM,IAAI7K,MAAM,2BAAA;AAEpBrG,WAAKgR,QAAQI,OAAOF,IAAO,CAAA,GAC3BlR,KAAK4E,cAAc,IAAI4C,EAAmBF,EAAAA,CAAAA;IAAQ,GAGtDtH,KAAKqR,aAAcC,CAAAA,OAAAA;AACf,iBAAWhK,MAAUtH,KAAKgR;AACtB,YAAIM,GAAUhK,EAAAA;AACV,iBAAOA;IAGC,GAGpBtH,KAAKuR,mBAAwCrN,CAAAA,OAAAA;AACzC,iBAAWoD,MAAUtH,KAAKgR;AACtB,YAAI1J,cAAkBpD;AAClB,iBAAOoD;IAGC,GAGpBtH,KAAKwR,QAAQ,MAAA;AACT,YAAMC,KAAkBzR,KAAKgR,QAAQU,MAAAA;AACrC,iBAAWpK,MAAUmK;AACjBzR,aAAKiR,aAAa3J,EAAAA;IACrB,GAGLtH,KAAKwR,MAAAA;EACR;EAED,WAAW9D,KAAsB,MAAMC,KAAwB,MAAA;AAC3D,QAAA,CAAKC;AAAU;AAEf,QAAKD,IAAAA;AAEE,UAAe,YAAXA,MAAiC,UAAXA;AAC7B,cAAM,IAAItH,MAAM,0CAAA;IAAA;AAFhBsH,MAAAA,KAAS;AAKb,QAAA,CAAKD,IAAM;AACP,YAAMG,KAAM,oBAAIC;AAChBJ,MAAAA,KAAO,SAASG,GAAIE,YAAAA,CAAAA,IAAiBF,GAAIG,SAAAA,IAAa,CAAA,IAAKH,GAAII,QAAAA,CAAAA,IAAaN,EAAAA;IAC/E;AAED,UAAMgE,KAAwB,CAAA;AAC9B,QAAI3I,KAAc;AAElB,eAAW1B,MAAUtH,KAAKgR;AAItB,UAHA1J,GAAOe,cAAAA,GACPf,GAAOgB,WAAAA,GACPhB,GAAOc,cAAAA,GACHd,cAAkB8F,GAAO;AACzB,cAAMlN,KAASoH,GAAOiD,KAAKD,UAAAA;AAC3BqH,QAAAA,GAAQxG,KAAKjL,EAAAA,GACb8I,MAAe1B,GAAOiD,KAAKvB;MAC9B;AAGL,UAAMuB,KAAO,IAAIV,WAAWb,KAAcD,EAAUyB,SAAAA;AACpD,QAMI0D,IANArC,KAAS;AACb,eAAW3L,MAAUyR;AACjBpH,MAAAA,GAAKlG,IAAInE,IAAQ2L,EAAAA,GACjBA,MAAU3L,GAAOM;AAIrB,QAAe,UAAXmN,IAAkB;AAClB,YAAMQ,KAAUnD,EAAUoD,WAAW7D,GAAKrK,QAAQ8I,EAAAA;AAClDkF,MAAAA,KAAO,IAAIG,KAAK,CAACF,EAAAA,GAAU,EAAEjK,MAAM,2BAAA,CAAA;IACtC;AACGgK,MAAAA,KAAO,IAAIG,KAAK,CAAC9D,GAAKrK,MAAAA,GAAS,EAAEgE,MAAM,2BAAA,CAAA;AAG3C,UAAMoK,KAAOV,SAASW,cAAc,GAAA;AACpCD,IAAAA,GAAKE,WAAWd,IAChBY,GAAKG,OAAOC,IAAIC,gBAAgBT,EAAAA,GAChCI,GAAKM,MAAAA;EACR;EAED,IAAA,UAAIoC;AACA,WAAOhR,KAAK8Q;EACf;AAAA;AChHEc,eAAeC,EAAqBC,IAAaC,IAAAA;AACpD,QAAMC,KAAAA,MAAYC,MAAMH,IAAK,EACzBI,MAAM,QACNC,aAAa,QACbC,OAAOL,KAAW,gBAAgB,UAAA,CAAA;AAGtC,MAAkB,OAAdC,GAAIK;AACJ,UAAM,IAAIhM,MAAM2L,GAAIK,SAAS,qBAAqBL,GAAIF,GAAAA;AAG1D,SAAOE;AACX;AAoDOJ,eAAeU,EAClBC,IACAC,IAAAA;AAEA,SAAID,GAAIE,QAAQrO,IAAI,gBAAA,IAtDjBwN,eAAkCW,IAAeC,IAAAA;AACpD,UAAME,KAASH,GAAII,KAAMC,UAAAA,GAEnBC,KAAgBC,SAASP,GAAIE,QAAQlO,IAAI,gBAAA,CAAA,GACzCrE,KAAS,IAAI2J,WAAWgJ,EAAAA;AAE9B,QAAIE,KAAY;AAGhB,eAAa;AACT,YAAA,EAAMC,MAAEA,IAAInS,OAAEA,GAAAA,IAAAA,MAAgB6R,GAAOO,KAAAA;AACrC,UAAID;AAAM;AAEV9S,MAAAA,GAAOmE,IAAIxD,IAAOkS,EAAAA,GAClBA,MAAalS,GAAML,QACnBgS,QAAAA,MAAAA,GAAaO,KAAYF,EAAAA;IAC5B;AAED,WAAO3S;EACX,EAoCkCqS,IAAKC,EAAAA,IAlChCZ,eACHW,IACAC,IAAAA;AAEA,UAAME,KAASH,GAAII,KAAMC,UAAAA,GAEnBM,KAAS,CAAA;AACf,QAAIC,KAAiB;AAErB,eAAa;AACT,YAAA,EAAMH,MAAEA,IAAInS,OAAEA,GAAAA,IAAAA,MAAgB6R,GAAOO,KAAAA;AACrC,UAAID;AAAM;AAEVE,MAAAA,GAAO/H,KAAKtK,EAAAA,GACZsS,MAAkBtS,GAAML;IAC3B;AAED,UAAMN,KAAS,IAAI2J,WAAWsJ,EAAAA;AAC9B,QAAI5M,KAAW;AACf,eAAW6M,MAASF;AAChBhT,MAAAA,GAAOmE,IAAI+O,IAAO7M,EAAAA,GAClBA,MAAY6M,GAAM5S,QAElBgS,QAAAA,MAAAA,GAAajM,KAAW4M,EAAAA;AAG5B,WAAOjT;EACX,EASyCqS,IAAKC,EAAAA;AAE9C;ACpEA,IAAMa,IAAN,MAAMA;EACF,aAAA,UACIvB,IACAwB,IACAd,IACAT,KAAAA,OAAoB;AAEpB,UAAMQ,KAAAA,MAAsBV,EAAqBC,IAAKC,EAAAA,GAEhD7R,KAAAA,MAAeoS,EAA0BC,IAAKC,EAAAA,GAE9CjI,KAAOxB,EAAUwK,YAAYrT,EAAAA,GAC7BmN,KAAQ,IAAID,EAAM7C,EAAAA;AAExB,WADA+I,GAAMvC,UAAU1D,EAAAA,GACTA;EACV;EAED,aAAA,kBAA+BmG,IAAYF,IAAcd,IAAAA;AACrD,UAAME,KAAS,IAAIe;AACnB,QAAIpG,KAAQ,IAAID;AAgBhB,WAfAsF,GAAOgB,SAAU3R,CAAAA,OAAAA;AACb,YAAM7B,KAAS,IAAI2J,WAAW9H,GAAE4R,OAAQC,MAAAA,GAClCrJ,KAAOxB,EAAUwK,YAAYrT,EAAAA;AACnCmN,MAAAA,KAAQ,IAAID,EAAM7C,EAAAA,GAClB+I,GAAMvC,UAAU1D,EAAAA;IAAM,GAE1BqF,GAAOmB,aAAc9R,CAAAA,OAAAA;AACjByQ,cAAAA,MAAAA,GAAazQ,GAAE+R,SAAS/R,GAAEgS,KAAAA;IAAM,GAEpCrB,GAAOsB,kBAAkBR,EAAAA,GAAAA,MACnB,IAAIS,QAAeC,CAAAA,OAAAA;AACrBxB,MAAAA,GAAOyB,YAAY,MAAA;AACfD,QAAAA,GAAAA;MAAS;IACZ,CAAA,GAEE7G;EACV;AAAA;ACjCL,IAAM+G,IAAN,MAAMA;EACF,aAAA,UACItC,IACAwB,IACAd,IACA7E,KAAiB,IACjBoE,KAAAA,OAAoB;AAEpB,UAAMQ,KAAAA,MAAsBV,EAAqBC,IAAKC,EAAAA,GAEhD5D,KAAAA,MAAgBmE,EAA0BC,IAAKC,EAAAA;AAErD,QAAmB,QAAfrE,GAAQ,CAAA,KAA6B,QAAfA,GAAQ,CAAA,KAA6B,QAAfA,GAAQ,CAAA,KAA6B,OAAfA,GAAQ,CAAA;AAC1E,YAAM,IAAI9H,MAAM,kBAAA;AAGpB,UAAMnG,KAAS,IAAI2J,WAAW7J,KAAKqU,gBAAgBlG,GAAQjO,QAAQyN,EAAAA,CAAAA,GAC7DpD,KAAOxB,EAAUwK,YAAYrT,EAAAA,GAC7BmN,KAAQ,IAAID,EAAM7C,EAAAA;AAExB,WADA+I,GAAMvC,UAAU1D,EAAAA,GACTA;EACV;EAED,aAAA,kBACImG,IACAF,IACAd,IACA7E,KAAiB,IAAA;AAEjB,UAAM+E,KAAS,IAAIe;AACnB,QAAIpG,KAAQ,IAAID;AAgBhB,WAfAsF,GAAOgB,SAAU3R,CAAAA,OAAAA;AACb,YAAM7B,KAAS,IAAI2J,WAAW7J,KAAKqU,gBAAgBtS,GAAE4R,OAAQC,QAAuBjG,EAAAA,CAAAA,GAC9EpD,KAAOxB,EAAUwK,YAAYrT,EAAAA;AACnCmN,MAAAA,KAAQ,IAAID,EAAM7C,EAAAA,GAClB+I,GAAMvC,UAAU1D,EAAAA;IAAM,GAE1BqF,GAAOmB,aAAc9R,CAAAA,OAAAA;AACjByQ,cAAAA,MAAAA,GAAazQ,GAAE+R,SAAS/R,GAAEgS,KAAAA;IAAM,GAEpCrB,GAAOsB,kBAAkBR,EAAAA,GAAAA,MACnB,IAAIS,QAAeC,CAAAA,OAAAA;AACrBxB,MAAAA,GAAOyB,YAAY,MAAA;AACfD,QAAAA,GAAAA;MAAS;IACZ,CAAA,GAEE7G;EACV;EAEO,OAAA,gBAAuBiH,IAA0B3G,IAAAA;AAOrD,UAAM4G,KAAO,IAAI1K,WAAWyK,EAAAA,GACtBE,KAAa,IAAIC,cAAcC,OAAOH,GAAK7C,MAAM,GAAG,KAAA,CAAA,GACpDiD,KAAa,gBACbC,KAAmBJ,GAAWrD,QAAQwD,EAAAA;AAC5C,QAAIC,KAAmB;AAAG,YAAM,IAAIvO,MAAM,iCAAA;AAE1C,UAAM2C,KAAc8J,SAAS,yBAAyB+B,KAAKL,EAAAA,EAAa,CAAA,CAAA;AAExE,QAAIM,KAAY;AAChB,UAAMC,KAAkC,EACpCC,QAAQ,GACRC,KAAK,GACLC,MAAM,GACNC,OAAO,GACPC,OAAO,GACPC,QAAQ,GACRC,OAAO,EAAA,GAGLpK,KAA4B,CAAA;AAClC,eAAWqK,MAAQf,GACd9C,MAAM,GAAGkD,EAAAA,EACTY,MAAM,IAAA,EACNC,OAAQC,CAAAA,OAAMA,GAAEC,WAAW,WAAA,CAAA,GAAe;AAE3C,YAAA,CAAOC,IAAI1R,IAAMwJ,EAAAA,IAAQ6H,GAAKC,MAAM,GAAA;AAEpC,UADAtK,GAAWC,KAAK,EAAEuC,MAAAA,IAAMxJ,MAAAA,IAAM2H,QAAQiJ,GAAAA,CAAAA,GAAAA,CACjCC,GAAQ7Q,EAAAA;AAAO,cAAM,IAAImC,MAAM,8BAA8BnC,EAAAA,EAAAA;AAClE4Q,MAAAA,MAAaC,GAAQ7Q,EAAAA;IACxB;AAED,UAAM2R,KAAW,IAAIlK,SAAS2I,IAAaM,KAAmBD,EAAAA,GACxDzU,KAAS,IAAI0L,YAAY7C,EAAUyB,YAAYxB,EAAAA,GAE/C8M,KAAYhV,EAAWiV,UAAU,IAAInW,EAAQS,KAAK6C,KAAK,GAAG,GAAG,CAAA,CAAA;AAEnE,aAAS6C,KAAI,GAAGA,KAAIiD,IAAajD,MAAK;AAClC,YAAMQ,KAAW,IAAIkD,aAAavJ,IAAQ6F,KAAIgD,EAAUyB,WAAW,CAAA,GAC7D/D,KAAQ,IAAIgD,aAAavJ,IAAQ6F,KAAIgD,EAAUyB,YAAY,IAAI,CAAA,GAC/DwL,KAAO,IAAIC,kBAAkB/V,IAAQ6F,KAAIgD,EAAUyB,YAAY,IAAI,CAAA,GACnE0L,KAAM,IAAID,kBAAkB/V,IAAQ6F,KAAIgD,EAAUyB,YAAY,IAAI,CAAA;AAExE,UAAI2L,KAAa,KACbC,KAAa,GACbC,KAAa,GACbC,KAAa;AAEjBpL,MAAAA,GAAWqL,QAASnL,CAAAA,OAAAA;AAChB,YAAIvK;AACJ,gBAAQuK,GAASlH,MAAAA;UACb,KAAK;AACDrD,YAAAA,KAAQgV,GAASW,WAAWpL,GAASS,SAAS9F,KAAI+O,IAAAA,IAAW;AAC7D;UACJ,KAAK;AACDjU,YAAAA,KAAQgV,GAASY,SAASrL,GAASS,SAAS9F,KAAI+O,IAAAA,IAAW;AAC3D;UACJ;AACI,kBAAM,IAAIzO,MAAM,8BAA8B+E,GAASlH,IAAAA,EAAAA;QAAAA;AAG/D,gBAAQkH,GAASsC,MAAAA;UACb,KAAK;AACDnH,YAAAA,GAAS,CAAA,IAAK1F;AACd;UACJ,KAAK;AACD0F,YAAAA,GAAS,CAAA,IAAK1F;AACd;UACJ,KAAK;AACD0F,YAAAA,GAAS,CAAA,IAAK1F;AACd;UACJ,KAAK;AACD4F,YAAAA,GAAM,CAAA,IAAKpG,KAAKqW,IAAI7V,EAAAA;AACpB;UACJ,KAAK;AACD4F,YAAAA,GAAM,CAAA,IAAKpG,KAAKqW,IAAI7V,EAAAA;AACpB;UACJ,KAAK;AACD4F,YAAAA,GAAM,CAAA,IAAKpG,KAAKqW,IAAI7V,EAAAA;AACpB;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAKnV;AACV;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAKnV;AACV;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAKnV;AACV;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAuC,OAAjC,MAAMhL,EAAUqB,QAAQxL;AACnC;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAuC,OAAjC,MAAMhL,EAAUqB,QAAQxL;AACnC;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAuC,OAAjC,MAAMhL,EAAUqB,QAAQxL;AACnC;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAuC,OAAjC,MAAMhL,EAAUqB,QAAQxL;AACnC;UACJ,KAAK;AACDmV,YAAAA,GAAK,CAAA,IAAM,KAAK,IAAI3V,KAAKqW,IAAAA,CAAK7V,EAAAA,KAAW;AACzC;UACJ,KAAK;AACDsV,YAAAA,KAAKtV;AACL;UACJ,KAAK;AACDuV,YAAAA,KAAKvV;AACL;UACJ,KAAK;AACDwV,YAAAA,KAAKxV;AACL;UACJ,KAAK;AACDyV,YAAAA,KAAKzV;QAAAA;MAEZ,CAAA;AAGL,UAAIG,KAAI,IAAIF,EAAWsV,IAAIC,IAAIC,IAAIH,EAAAA;AAEnC,cAAQxI,IAAAA;QACJ,KAAK,WAAW;AACZ,gBAAMgJ,KAAOpQ,GAAS,CAAA;AACtBA,UAAAA,GAAS,CAAA,IAAA,CAAMA,GAAS,CAAA,GACxBA,GAAS,CAAA,IAAKoQ,IACd3V,KAAI8U,GAAUhU,SAASd,EAAAA;AACvB;QACH;QACD,KAAK;AACD;QACJ;AACI,gBAAM,IAAIqF,MAAM,uBAAuBsH,EAAAA,EAAAA;MAAAA;AAG/C3M,MAAAA,KAAIA,GAAET,UAAAA,GACN2V,GAAI,CAAA,IAAW,MAANlV,GAAED,IAAU,KACrBmV,GAAI,CAAA,IAAW,MAANlV,GAAEnB,IAAU,KACrBqW,GAAI,CAAA,IAAW,MAANlV,GAAElB,IAAU,KACrBoW,GAAI,CAAA,IAAW,MAANlV,GAAEjB,IAAU;IACxB;AAED,WAAOG;EACV;AAAA;AAAA,SAAA,EAAA0W,IAAAC,IAAAC,IAAA;AAAA,MAAAC,KAAA,WAAAF,KAAA,OAAAA,IAAAG,KAAA,SAAAJ,IAAAC,IAAA;AAAA,QAAAC,KAAA,KAAAF,EAAA;AAAA,QAAAC,IAAA;AAAA,eAAAE,KAAA,IAAA,WAAAD,GAAA,MAAA,GAAAE,KAAA,GAAA/V,KAAA6V,GAAA,QAAAE,KAAA/V,IAAA,EAAA+V;AAAA,QAAAD,GAAAC,EAAA,IAAAF,GAAA,WAAAE,EAAA;AAAA,aAAA,OAAA,aAAA,MAAA,MAAA,IAAA,YAAAD,GAAA,MAAA,CAAA;IAAA;AAAA,WAAAD;EAAA,EAAAF,IAAA,WAAAE,MAAAA,EAAA,GAAA7V,KAAA+V,GAAA,QAAA,MAAA,EAAA,IAAA,GAAA7W,KAAA6W,GAAA,UAAA/V,EAAA,KAAA8V,KAAA,0BAAAA,KAAA,KAAAE,KAAA,IAAA,KAAA,CAAA9W,EAAA,GAAA,EAAA,MAAA,yBAAA,CAAA;AAAA,SAAA,IAAA,gBAAA8W,EAAA;AAAA;AAAA,SAAA,EAAAL,IAAAC,IAAAC,IAAA;AAAA,MAAAC;AAAA,SAAA,SAAAC,IAAA;AAAA,WAAAD,KAAAA,MAAA,EAAAH,IAAAC,IAAAC,EAAA,GAAA,IAAA,OAAAC,IAAAC,EAAA;EAAA;AAAA;AAAA,IAAA,IAAA,EAAA,ogrDAAA,MAAA,KAAA;ACzML,IAAeE,IAAf,MAAeA;EAoBX,YAAYC,IAAyBC,IAAAA;AAf3BpX,SAAMqX,SAAiB,MACvBrX,KAAOsX,UAAkB,MACzBtX,KAAQuX,WAAAA,OACRvX,KAAYwX,eAAAA,OAalBxX,KAAKyX,YAAYN;AACjB,UAAMO,KAAKP,GAASO;AAEpB1X,SAAK2X,WAAWD,GAAGE,cAAAA,GACnB5X,KAAK6X,UAAUT,MAAU,CAAA;AAEzB,UAAMU,KAAeJ,GAAGK,aAAaL,GAAGM,aAAAA;AACxCN,IAAAA,GAAGO,aAAaH,IAAc9X,KAAKkY,iBAAAA,CAAAA,GACnCR,GAAGS,cAAcL,EAAAA,GACZJ,GAAGU,mBAAmBN,IAAcJ,GAAGW,cAAAA,KACxCxN,QAAQyN,MAAMZ,GAAGa,iBAAiBT,EAAAA,CAAAA;AAGtC,UAAMU,KAAiBd,GAAGK,aAAaL,GAAGe,eAAAA;AAC1Cf,IAAAA,GAAGO,aAAaO,IAAgBxY,KAAK0Y,mBAAAA,CAAAA,GACrChB,GAAGS,cAAcK,EAAAA,GACZd,GAAGU,mBAAmBI,IAAgBd,GAAGW,cAAAA,KAC1CxN,QAAQyN,MAAMZ,GAAGa,iBAAiBC,EAAAA,CAAAA,GAGtCd,GAAGiB,aAAa3Y,KAAK4Y,SAASd,EAAAA,GAC9BJ,GAAGiB,aAAa3Y,KAAK4Y,SAASJ,EAAAA,GAC9Bd,GAAGmB,YAAY7Y,KAAK4Y,OAAAA,GACflB,GAAGoB,oBAAoB9Y,KAAK4Y,SAASlB,GAAGqB,WAAAA,KACzClO,QAAQyN,MAAMZ,GAAGsB,kBAAkBhZ,KAAK4Y,OAAAA,CAAAA,GAG5C5Y,KAAKiZ,SAAS,MAAA;AACVvB,MAAAA,GAAGwB,WAAWlZ,KAAK2X,QAAAA,GAEnB3X,KAAKmZ,QAAAA;IAAS,GAGlBnZ,KAAKoZ,aAAa,MAAA;AACdvO,cAAQC,OAAAA,CAAQ9K,KAAKwX,cAAc,mCAAA,GAEnCE,GAAGwB,WAAWlZ,KAAK2X,QAAAA,GAEnB3X,KAAKqZ,YAAAA;AACL,iBAAWC,MAAQtZ,KAAKoX;AACpBkC,QAAAA,GAAKF,WAAWpZ,IAAAA;AAGpBA,WAAKwX,eAAAA,MACLxX,KAAKuX,WAAAA;IAAe,GAGxBvX,KAAKuZ,SAAS,CAACjG,IAAcjD,OAAAA;AACzBqH,MAAAA,GAAGwB,WAAWlZ,KAAK2X,QAAAA,GAEf3X,KAAKqX,WAAW/D,MAAStT,KAAKsX,YAAYjH,OAC1CrQ,KAAKwZ,QAAAA,GACLxZ,KAAKqX,SAAS/D,IACdtT,KAAKsX,UAAUjH,IACfrQ,KAAKoZ,WAAAA;AAGT,iBAAWE,MAAQtZ,KAAKoX;AACpBkC,QAAAA,GAAKC,OAAAA;AAGTvZ,WAAKyZ,QAAAA;IAAS,GAGlBzZ,KAAKwZ,UAAU,MAAA;AACX,UAAKxZ,KAAKwX,cAAV;AAEAE,QAAAA,GAAGwB,WAAWlZ,KAAK2X,QAAAA;AAEnB,mBAAW2B,MAAQtZ,KAAKoX;AACpBkC,UAAAA,GAAKE,QAAAA;AAGTxZ,aAAK0Z,SAAAA,GAEL1Z,KAAKqX,SAAS,MACdrX,KAAKsX,UAAU,MACftX,KAAKwX,eAAAA;MAZ0B;IAYN;EAEhC;EAED,IAAA,WAAIL;AACA,WAAOnX,KAAKyX;EACf;EAED,IAAA,QAAInE;AACA,WAAOtT,KAAKqX;EACf;EAED,IAAA,SAAIhH;AACA,WAAOrQ,KAAKsX;EACf;EAED,IAAA,UAAIsB;AACA,WAAO5Y,KAAK2X;EACf;EAED,IAAA,SAAIP;AACA,WAAOpX,KAAK6X;EACf;EAED,IAAA,UAAI8B;AACA,WAAO3Z,KAAKuX;EACf;AAAA;AAAA,IAAA,IAAA,EAAA,g3tDAAA,MAAA,KAAA;AAAA,IChIDqC,IAGF,SACOC,KAAY,CAAA,GAAA;AAErB,MAAyBC,IAAoBC,IAAzCC,KAAOH;AAAqDG,EAAAA,GAAc,QAAE,IAAI/F,QAAQ,CAACC,IAAQ+F,OAAAA;AAAUH,IAAAA,KAAoB5F,IAAQ6F,KAAmBE;EAAAA,CAAAA;AAAS,MAAoXC,IAAhXC,KAAgBC,OAAOC,OAAO,CAAA,GAAGL,EAAAA,GAAuKM,KAAgB;AAAycA,EAAAA,MAA9NA,KAAgBC,KAAKC,SAAS/L,MAA2KkH,WAAW,OAAA,IAA0B,KAAwB2E,GAAgBG,OAAO,GAAEH,GAAgBI,QAAQ,UAAS,EAAA,EAAIC,YAAY,GAAA,IAAK,CAAA,GAAuIT,KAAWpI,CAAAA,OAAAA;AAAM,QAAI8I,KAAI,IAAIC;AAAuF,WAAxED,GAAIE,KAAK,OAAMhJ,IAAAA,KAAI,GAAO8I,GAAIG,eAAa,eAAcH,GAAII,KAAK,IAAA,GAAa,IAAInR,WAAW+Q,GAAIK,QAAAA;EAAQ,GAAkRjB,GAAc,SAAGnP,QAAQ6B,IAAIwO,KAAKrQ,OAAAA;AAAS,MAA+QsQ,IAAgcC,IAA3sBC,KAAIrB,GAAiB,YAAGnP,QAAQyN,MAAM4C,KAAKrQ,OAAAA;AAAuhB,WAASyQ,GAAkBC,IAAAA;AAAU,QAAIC,GAAUD,EAAAA;AAAkB,aAA/O,SAA4B9X,IAAAA;AAAgE,iBAAzDgY,KAAQC,KAAKjY,EAAAA,GAAOkY,KAAM,IAAI9R,WAAW4R,GAAQjb,MAAAA,GAAgBuF,KAAE,GAAEA,KAAE0V,GAAQjb,QAAAA,EAASuF;AAAG4V,UAAAA,GAAM5V,EAAAA,IAAG0V,GAAQG,WAAW7V,EAAAA;AAAG,eAAO4V;MAAK,EAAgGJ,GAAS7J,MAAMmK,GAAcrb,MAAAA,CAAAA;EAAQ;AAAlpB4Z,SAAOC,OAAOL,IAAOG,EAAAA,GAAiBA,KAAgB,MAAQH,GAAkB,aAAaA,GAAkB,WAAKA,GAAoB,eAAcA,GAAoB,aAAKA,GAAa,QAAQA,GAAa,MAAoBA,GAAmB,eAAEmB,KAAWnB,GAAmB,aAAyB,YAAA,OAAb8B,eAAuBC,GAAM,iCAAA;AAAiW,MAAmCC,IAAMC,IAAOC,IAAOC,IAAQC,IAAOC,IAAQC,IAAQC,IAAlFC,KAAAA;AAA0F,WAASC,KAAAA;AAAoB,QAAIxW,KAAEmV,GAAWlb;AAAO8Z,IAAAA,GAAc,QAAEgC,KAAM,IAAIU,UAAUzW,EAAAA,GAAG+T,GAAe,SAAEkC,KAAO,IAAIS,WAAW1W,EAAAA,GAAG+T,GAAe,SAAEiC,KAAO,IAAIpS,WAAW5D,EAAAA,GAAG+T,GAAgB,UAAEmC,KAAQ,IAAIS,YAAY3W,EAAAA,GAAG+T,GAAe,SAAEoC,KAAO,IAAIS,WAAW5W,EAAAA,GAAG+T,GAAgB,UAAEqC,KAAQ,IAAIS,YAAY7W,EAAAA,GAAG+T,GAAgB,UAAEsC,KAAQ,IAAI7S,aAAaxD,EAAAA,GAAG+T,GAAgB,UAAEuC,KAAQ,IAAIQ,aAAa9W,EAAAA;EAAE;AAAC,MAAI+W,KAAa,CAAA,GAAOC,KAAW,CAAA,GAAOC,KAAc,CAAA,GAAusBC,KAAgB,GAAoCC,KAAsB;AAA0a,WAASrB,GAAMsB,IAAAA;AlBLv+H;AkBK6+HrD,UAAAA,GAAgB,YAAhBA,wBAAAA,IAAoBqD,KAA+BhC,GAAzBgC,KAAK,aAAWA,KAAK,GAAA,GAAcb,KAAAA,MAAwBa,MAAM;AAA2C,QAAItb,KAAE,IAAI+Z,YAAYwB,aAAaD,EAAAA;AAA4B,UAAtBtD,GAAmBhY,EAAAA,GAASA;EAAC;AAAC,MAAyHwb,IAAz5HC,IAAoyH3B,KAAc,yCAA4CL,KAAUD,CAAAA,OAAUA,GAAS5F,WAAWkG,EAAAA;AAA40iB,WAAS4B,GAAiBC,IAAAA;AAAY,WAAOzJ,QAAQC,QAAAA,EAAUyJ,KAAK,MAAlU,SAAuBnK,IAAAA;AAAM,UAAGA,MAAM+J,MAAgBpC;AAAY,eAAO,IAAItR,WAAWsR,EAAAA;AAAY,UAAIyC,KAAOtC,GAAkB9H,EAAAA;AAAM,UAAGoK;AAAQ,eAAOA;AAAO,UAAG1D;AAAY,eAAOA,GAAW1G,EAAAA;AAAM,YAAK;IAAiD,EAAuFkK,EAAAA,CAAAA;EAAY;AAAuP,WAASG,GAAiBD,IAAOF,IAAWI,IAAQC,IAAAA;AAAU,WAApT,SAAgCL,IAAWI,IAAQE,IAAAA;AAAU,aAAOP,GAAiBC,EAAAA,EAAYC,KAAKC,CAAAA,OAAQ9B,YAAYmC,YAAYL,IAAOE,EAAAA,CAAAA,EAAUH,KAAKK,IAASE,CAAAA,OAAAA;AAAS7C,QAAAA,GAAI,0CAA0C6C,EAAAA,EAAAA,GAAUnC,GAAMmC,EAAAA;MAAO,CAAA;IAAE,EAA6FR,IAAWI,IAAQC,EAAAA;EAAS;AAApxBvC,EAAAA,GAAv+hB+B,KAAe,m9hBAAA,MAAv7HC,KAAo8pBD,IAA1BA,KAAj6pBvD,GAAmB,aAAUA,GAAmB,WAAEwD,IAAKlD,EAAAA,IAAwBA,KAAgBkD;AAAutsB,MAAIW,KAAqBC,CAAAA,OAAAA;AAAY,WAAMA,GAAU5d,SAAO;AAAG4d,MAAAA,GAAUC,MAAAA,EAAQrE,EAAAA;EAAO;AAAqBA,EAAAA,GAAsB;AAAQ,MAAwNsE,IAAgNC,IAA3LC,IAAiBC,CAAAA,OAAAA;AAA2B,aAAjBC,KAAI,IAAOC,KAAEF,IAAUxC,GAAO0C,EAAAA;AAAID,MAAAA,MAAKJ,GAAiBrC,GAAO0C,IAAAA,CAAAA;AAAM,WAAOD;EAAAA,GAASE,IAAqB,CAAA,GAAOC,IAAgB,CAAA,GAAgDC,IAAkBC,CAAAA,OAAAA;AAAU,UAAM,IAAIR,GAAaQ,EAAAA;EAAO;AAA8lB,WAASC,EAAaC,IAAQC,IAAmBC,KAAQ,CAAE,GAAA;AAAE,QAAA,EAAK,oBAAmBD;AAAqB,YAAM,IAAIE,UAAU,yDAAA;AAA2D,WAAlwB,SAA4BH,IAAQC,IAAmBC,KAAQ,CAAA,GAAA;AAAI,UAAIzR,KAAKwR,GAAmBxR;AAAkG,UAAzFuR,MAASH,EAAkB,SAASpR,EAAAA,+CAAAA,GAAwDmR,EAAgBQ,eAAeJ,EAAAA,GAAS;AAAC,YAAGE,GAAQG;AAA8B;AAAYR,UAAkB,yBAAyBpR,EAAAA,SAAAA;MAAe;AAA8E,UAA7EmR,EAAgBI,EAAAA,IAASC,IAAuDN,EAAqBS,eAAeJ,EAAAA,GAAS;AAAC,YAAIb,KAAUQ,EAAqBK,EAAAA;AAAAA,eAAgBL,EAAqBK,EAAAA,GAASb,GAAU7H,QAAQgJ,CAAAA,OAAIA,GAAAA,CAAAA;MAAK;IAAC,EAAoNN,IAAQC,IAAmBC,EAAAA;EAAQ;AAAC,MAA8ZK,IAAe,CAAA,GAAOC,IAAc,CAAA,GAA6IC,IAAoB,MAAID,EAAcjf,SAAO,IAAE,IAAEgf,EAAehf,QAA4Imf,IAAeC,CAAAA,QAAaA,MAAQd,EAAkB,sCAAoCc,EAAAA,GAAeH,EAAcG,EAAAA,IAAvHD,IAAyI9e,CAAAA,OAAAA;AAAQ,YAAOA,IAAAA;MAAO,KAAA;AAAe,eAAO;MAAE,KAAK;AAAK,eAAO;MAAE,KAAA;AAAU,eAAO;MAAE,KAAA;AAAW,eAAO;MAAE,SAAQ;AAAC,cAAM+e,KAAOJ,EAAeK,IAAAA,KAAOJ,EAAcjf;AAA6D,eAAtDif,EAAcG,EAAAA,IAAQ/e,IAAM4e,EAAcG,KAAO,CAAA,IAAG,GAASA;MAAM;IAAA;EAAC;AAAI,WAASE,EAAYC,IAAAA;AAAS,WAAO/f,KAAmB,aAAEqc,GAAQ0D,MAAS,CAAA,CAAA;EAAG;AAAC,MAAIC,IAAU,EAACtS,MAAK,mBAAkBuS,cAAeL,CAAAA,OAAAA;AAAS,QAAIM,KAAGP,EAAcC,EAAAA;AAA+B,YAA93BA,CAAAA,OAAAA;AAAYA,MAAAA,KAAO,KAAG,KAAA,EAAMH,EAAcG,KAAO,CAAA,MAAIH,EAAcG,EAAAA,IAAAA,QAAkBJ,EAAerU,KAAKyU,EAAAA;IAAO,GAAswBA,EAAAA,GAAeM;EAAAA,GAAIC,YAAa,CAACC,IAAYvf,OAAQ8e,EAAe9e,EAAAA,GAAOwf,gBAAj4C,GAAs6CC,sBAAuBR,GAAYS,oBAAmB,KAAA,GAA+EC,IAA0B,CAAC9S,IAAKgC,OAAAA;AAAS,YAAOA,IAAAA;MAAO,KAAK;AAAE,eAAO,SAASqQ,IAAAA;AAAS,iBAAO/f,KAAmB,aAAEsc,GAAQyD,MAAS,CAAA,CAAA;QAAG;MAAE,KAAK;AAAE,eAAO,SAASA,IAAAA;AAAS,iBAAO/f,KAAmB,aAAEuc,GAAQwD,MAAS,CAAA,CAAA;QAAG;MAAE;AAAQ,cAAM,IAAIX,UAAU,wBAAwB1P,EAAAA,MAAWhC,EAAAA,EAAAA;IAAAA;EAAO,GAAqT+S,IAA4B,CAAC/S,IAAKgC,IAAMgR,OAAAA;AAAU,YAAOhR,IAAAA;MAAO,KAAK;AAAE,eAAOgR,KAAOX,CAAAA,OAAS/D,GAAM+D,EAAAA,IAASA,CAAAA,OAAS9D,GAAO8D,EAAAA;MAAS,KAAK;AAAE,eAAOW,KAAOX,CAAAA,OAAS7D,GAAO6D,MAAS,CAAA,IAAGA,CAAAA,OAAS5D,GAAQ4D,MAAS,CAAA;MAAG,KAAK;AAAE,eAAOW,KAAOX,CAAAA,OAAS3D,GAAO2D,MAAS,CAAA,IAAGA,CAAAA,OAAS1D,GAAQ0D,MAAS,CAAA;MAAG;AAAQ,cAAM,IAAIX,UAAU,0BAA0B1P,EAAAA,MAAWhC,EAAAA,EAAAA;IAAAA;EAAO,GAAyzEiT,IAAgC,eAAA,OAAblM,cAAyB,IAAIA,YAAY,MAAA,IAAA,QAA0uBmM,IAAa,CAACnC,IAAIoC,OAAiBpC,MAAruB,CAACqC,IAAYC,IAAIF,OAAAA;AAA+D,aAAzCG,KAAOD,KAAIF,IAAmBI,KAAOF,IAAUD,GAAYG,EAAAA,KAAAA,EAAWA,MAAQD;AAAAA,QAAUC;AAAO,QAAGA,KAAOF,KAAI,MAAID,GAAY5gB,UAAQygB;AAAa,aAAOA,EAAYjM,OAAOoM,GAAYI,SAASH,IAAIE,EAAAA,CAAAA;AAAoB,aAAPE,KAAI,IAASJ,KAAIE,MAAO;AAAC,UAAIG,KAAGN,GAAYC,IAAAA;AAAO,UAAQ,MAAHK,IAAL;AAAoD,YAAIC,KAAsB,KAAnBP,GAAYC,IAAAA;AAAU,YAAa,QAAN,MAAHK,KAAJ;AAAmE,cAAIE,KAAsB,KAAnBR,GAAYC,IAAAA;AAA0G,eAA9EK,KAAL,QAAN,MAAHA,OAAqB,KAAHA,OAAQ,KAAGC,MAAI,IAAEC,MAAe,IAAHF,OAAO,KAAGC,MAAI,KAAGC,MAAI,IAAqB,KAAnBR,GAAYC,IAAAA,KAAgB;AAAOI,YAAAA,MAAKI,OAAOC,aAAaJ,EAAAA;eAAQ;AAAC,gBAAIK,KAAGL,KAAG;AAAMD,YAAAA,MAAKI,OAAOC,aAAa,QAAMC,MAAI,IAAG,QAAS,OAAHA,EAAAA;UAAQ;QAAjP;AAAhDN,UAAAA,MAAKI,OAAOC,cAAiB,KAAHJ,OAAQ,IAAEC,EAAAA;MAApF;AAArCF,QAAAA,MAAKI,OAAOC,aAAaJ,EAAAA;IAA8V;AAAC,WAAOD;EAAAA,GAAkElF,IAAOwC,IAAIoC,EAAAA,IAAgB,IAA6tDa,IAAiC,eAAA,OAAbjN,cAAyB,IAAIA,YAAY,UAAA,IAAA,QAA0BkN,IAAc,CAAClD,IAAIoC,OAAAA;AAAmF,aAA7DI,KAAOxC,IAAQsC,KAAIE,MAAQ,GAAMW,KAAOb,KAAIF,KAAe,GAAA,EAAUE,MAAKa,OAASzF,GAAQ4E,EAAAA;AAAAA,QAAOA;AAAkB,SAAdE,KAAOF,MAAK,KAAYtC,KAAI,MAAIiD;AAAa,aAAOA,EAAahN,OAAOuH,GAAOiF,SAASzC,IAAIwC,EAAAA,CAAAA;AAAoB,aAAPE,KAAI,IAAWpb,KAAE,GAAA,EAAIA,MAAG8a,KAAe,IAAA,EAAK9a,IAAE;AAAC,UAAI8b,KAAS3F,GAAOuC,KAAM,IAAF1Y,MAAK,CAAA;AAAG,UAAa,KAAV8b;AAAY;AAAMV,MAAAA,MAAKI,OAAOC,aAAaK,EAAAA;IAAS;AAAC,WAAOV;EAAAA,GAASW,KAAc,CAACX,IAAIY,IAAOC,OAAAA;AAAgD,QAA7BA,YAAkB,aAAcA,KAAgB;AAAE,aAAO;AAAuH,aAA9FC,KAASF,IAAWG,MAA3CF,MAAiB,KAAqE,IAAXb,GAAI3gB,SAASwhB,KAAgB,IAAEb,GAAI3gB,QAAeuF,KAAE,GAAEA,KAAEmc,IAAAA,EAAkBnc,IAAE;AAAC,UAAI8b,KAASV,GAAIvF,WAAW7V,EAAAA;AAAGmW,MAAAA,GAAO6F,MAAQ,CAAA,IAAGF,IAASE,MAAQ;IAAC;AAAqB,WAApB7F,GAAO6F,MAAQ,CAAA,IAAG,GAASA,KAAOE;EAAAA,GAAcE,KAAiBhB,CAAAA,OAAgB,IAAXA,GAAI3gB,QAAa4hB,KAAc,CAAC3D,IAAIoC,OAAAA;AAAqC,aAAf9a,KAAE,GAAMob,KAAI,IAAA,EAAWpb,MAAG8a,KAAe,MAAG;AAAC,UAAIwB,KAAMjG,GAAOqC,KAAM,IAAF1Y,MAAK,CAAA;AAAG,UAAU,KAAPsc;AAAS;AAAU,UAAA,EAAFtc,IAAKsc,MAAO,OAAM;AAAC,YAAIZ,KAAGY,KAAM;AAAMlB,QAAAA,MAAKI,OAAOC,aAAa,QAAMC,MAAI,IAAG,QAAS,OAAHA,EAAAA;MAAQ;AAAMN,QAAAA,MAAKI,OAAOC,aAAaa,EAAAA;IAAO;AAAC,WAAOlB;EAAAA,GAASmB,KAAc,CAACnB,IAAIY,IAAOC,OAAAA;AAAgD,QAA7BA,YAAkB,aAAcA,KAAgB;AAAE,aAAO;AAA4D,aAAtDC,KAASF,IAAWd,KAAOgB,KAASD,KAAgB,GAAUjc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,UAAI8b,KAASV,GAAIvF,WAAW7V,EAAAA;AAA6K,UAAvK8b,MAAU,SAAOA,MAAU,UAA8CA,KAAS,UAAiB,OAATA,OAAgB,MAAmB,OAAxEV,GAAIvF,WAAAA,EAAa7V,EAAAA,IAA4DqW,GAAO2F,MAAQ,CAAA,IAAGF,KAASE,MAAQ,KAAY,IAAEd;AAAO;IAAK;AAAqB,WAApB7E,GAAO2F,MAAQ,CAAA,IAAG,GAASA,KAAOE;EAAAA,GAAcM,KAAiBpB,CAAAA,OAAAA;AAAgB,aAANqB,KAAI,GAAUzc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,UAAI8b,KAASV,GAAIvF,WAAW7V,EAAAA;AAAM8b,MAAAA,MAAU,SAAOA,MAAU,SAAA,EAAQ9b,IAAEyc,MAAK;IAAC;AAAC,WAAOA;EAAAA,GAAwlDC,KAAWC,CAAAA,OAAAA;AAAO,QAA4BC,MAAOD,KAA7BtH,GAAWlb,OAAyB6K,aAAW,SAAO;AAAM,QAAA;AAA+C,aAA3CqQ,GAAWwH,KAAKD,EAAAA,GAAOlG,GAAAA,GAA2B;IAAC,SAAO1a,IAAAA;IAAI;EAAA;AAAjmY,GAAA,MAAA;AAA8B,aAArB8gB,KAAM,IAAIC,MAAM,GAAA,GAAa/c,KAAE,GAAEA,KAAE,KAAA,EAAMA;AAAG8c,MAAAA,GAAM9c,EAAAA,IAAGwb,OAAOC,aAAazb,EAAAA;AAAGuY,IAAAA,KAAiBuE;EAAK,GAA0hZE,GAAwBxE,KAAavE,GAAqB,eAAE,cAA2B3T,MAAAA;IAAM,YAAY0Y,IAAAA;AAASxX,YAAMwX,EAAAA,GAAS/e,KAAK0N,OAAK;IAAc;EAAA,GAAiBsM,GAAsB,gBAAE,cAA4B3T,MAAAA;IAAM,YAAY0Y,IAAAA;AAASxX,YAAMwX,EAAAA,GAAS/e,KAAK0N,OAAK;IAAe;EAAA,GAA3hW+R,EAActU,KAAK,GAAE,GAAA,QAAY,GAAE,MAAK,GAAA,MAAO,GAAA,OAAQ,CAAA,GAAG6O,GAA4B,sBAAE0F;AAAm9V,MAAIsD,KAAY,EAACC,GAAjha,CAACC,IAAcxV,IAAKgV,IAAKS,IAASC,OAAAA;EAAlC,GAA4iard,GAA5sX,CAACkZ,IAAQvR,IAAK2V,IAAUC,OAAAA;AAA0CtE,MAAaC,IAAQ,EAACvR,MAAlDA,KAAK8Q,EAAiB9Q,EAAAA,GAAsCuS,cAAe,SAASsD,IAAAA;AAAI,aAAA,CAAA,CAAQA;IAAE,GAAEpD,YAAa,SAASC,IAAYoD,IAAAA;AAAG,aAAOA,KAAEH,KAAUC;IAAU,GAAEjD,gBAA3O,GAAgRC,sBAAuB,SAASP,IAAAA;AAAS,aAAO/f,KAAmB,aAAEic,GAAO8D,EAAAA,CAAAA;IAAS,GAAEQ,oBAAmB,KAAA,CAAA;EAAM,GAAk4WkD,GAApwUxE,CAAAA,OAASD,EAAaC,IAAQe,CAAAA,GAAgwUje,GAAj7T,CAACkd,IAAQvR,IAAKgV,OAAAA;AAAoC1D,MAAaC,IAAQ,EAACvR,MAAlDA,KAAK8Q,EAAiB9Q,EAAAA,GAAsCuS,cAAepf,CAAAA,OAAOA,IAAMsf,YAAa,CAACC,IAAYvf,OAAQA,IAAMwf,gBAAjgE,GAAsiEC,sBAAuBE,EAA0B9S,IAAKgV,EAAAA,GAAMnC,oBAAmB,KAAA,CAAA;EAAM,GAA2rTta,GAA1yS,CAACid,IAAcxV,IAAKgV,IAAKS,IAASC,OAAAA;AAAY1V,IAAAA,KAAK8Q,EAAiB9Q,EAAAA;AAA4C,QAAIuS,KAAapf,CAAAA,OAAOA;AAAM,QAAc,MAAXsiB,IAAa;AAAC,UAAIO,KAAS,KAAG,IAAEhB;AAAKzC,MAAAA,KAAapf,CAAAA,OAAOA,MAAO6iB,OAAWA;IAAQ;AAAC,QAAIC,KAAejW,GAAKkW,SAAS,UAAA;AAA8Q5E,MAAakE,IAAc,EAACxV,MAAKA,IAAKuS,cAAeA,IAAaE,YAAvQwD,KAA2B,SAASvD,IAAYvf,IAAAA;AAAwC,aAAXb,KAAK0N,MAAa7M,OAAQ;IAAC,IAAkB,SAASuf,IAAYvf,IAAAA;AAAwC,aAAXb,KAAK0N,MAAa7M;IAAK,GAA4Fwf,gBAA1nG,GAA+pGC,sBAAuBG,EAA4B/S,IAAKgV,IAAgB,MAAXS,EAAAA,GAAc5C,oBAAmB,KAAA,CAAA;EAAK,GAAglRva,GAA3iR,CAACiZ,IAAQ4E,IAAcnW,OAAAA;AAAQ,QAAmHoW,KAAnG,CAACpH,WAAU7S,YAAW8S,YAAWC,aAAYC,YAAWC,aAAYrT,cAAasT,YAAAA,EAAiC8G,EAAAA;AAAe,aAASE,GAAiBnE,IAAAA;AAAQ,UAAI8C,KAAKrG,GAAQuD,MAAQ,CAAA,GAAOrV,KAAK8R,GAAQuD,KAAO,KAAG,CAAA;AAAG,aAAO,IAAIkE,GAAG9H,GAAM9b,QAAOqK,IAAKmY,EAAAA;IAAK;AAA6B1D,MAAaC,IAAQ,EAACvR,MAAlDA,KAAK8Q,EAAiB9Q,EAAAA,GAAsCuS,cAAe8D,IAAiB1D,gBAArrH,GAA0tHC,sBAAuByD,GAAAA,GAAkB,EAACzE,8BAAAA,KAA6B,CAAA;EAAK,GAA4kQrI,GAAhrM,CAACgI,IAAQvR,OAAAA;AAAoC,QAAIsW,KAAuB,mBAAvDtW,KAAK8Q,EAAiB9Q,EAAAA;AAA+CsR,MAAaC,IAAQ,EAACvR,MAAKA,IAAK,aAAe7M,IAAAA;AAAO,UAAqDsgB,IAAjD3gB,KAAO6b,GAAQxb,MAAO,CAAA,GAAOojB,KAAQpjB,KAAM;AAAU,UAAGmjB;AAA4C,iBAAvBE,KAAeD,IAAgBle,KAAE,GAAEA,MAAGvF,IAAAA,EAASuF,IAAE;AAAC,cAAIoe,KAAeF,KAAQle;AAAE,cAAGA,MAAGvF,MAAgC,KAAxByb,GAAOkI,EAAAA,GAAmB;AAAC,gBAA8CC,KAAcxD,EAAasD,IAA7DC,KAAeD,EAAAA;AAAAA,uBAAyE/C,KAAiBA,KAAIiD,MAAmBjD,MAAKI,OAAOC,aAAa,CAAA,GAAGL,MAAKiD,KAAcF,KAAeC,KAAe;UAAC;QAAC;WAAM;AAAC,YAAIne,KAAE,IAAI8c,MAAMtiB,EAAAA;AAAQ,aAAQuF,KAAE,GAAEA,KAAEvF,IAAAA,EAASuF;AAAGC,UAAAA,GAAED,EAAAA,IAAGwb,OAAOC,aAAavF,GAAOgI,KAAQle,EAAAA,CAAAA;AAAIob,QAAAA,KAAInb,GAAEpF,KAAK,EAAA;MAAG;AAAc,aAAbyjB,GAAMxjB,EAAAA,GAAcsgB;IAAG,GAAE,WAAaf,IAAYvf,IAAAA;AAAoE,UAAIL;AAA9DK,MAAAA,cAAiB+K,gBAAa/K,KAAM,IAAIgJ,WAAWhJ,EAAAA;AAAkB,UAAIyjB,KAAkC,YAAA,OAAPzjB;AAAqByjB,MAAAA,MAAqBzjB,cAAiBgJ,cAAYhJ,cAAiBoV,qBAAmBpV,cAAiB6b,aAAYoC,EAAkB,uCAAA,GAAkFte,KAAtCwjB,MAAiBM,MAA5mEnD,CAAAA,OAAAA;AAAgB,iBAANqB,KAAI,GAAUzc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,cAAI4Y,KAAEwC,GAAIvF,WAAW7V,EAAAA;AAAM4Y,UAAAA,MAAG,MAAK6D,OAAc7D,MAAG,OAAM6D,MAAK,IAAU7D,MAAG,SAAOA,MAAG,SAAO6D,MAAK,GAAA,EAAIzc,MAAOyc,MAAK;QAAE;AAAC,eAAOA;MAAAA,GAA8+D3hB,EAAAA,IAAmBA,GAAML;AAAO,UAAI+jB,KAAKC,GAAQ,IAAEhkB,KAAO,CAAA,GAAOie,KAAI8F,KAAK;AAA0B,UAAxBlI,GAAQkI,MAAM,CAAA,IAAG/jB,IAAUwjB,MAAiBM;AAAlkG,SAAA,CAACnD,IAAIsD,IAAKC,IAAO1C,OAAAA;AAAmB,cAAA,EAAKA,KAAgB;AAAG,mBAAO;AAA0D,mBAAhChB,KAAO0D,KAAO1C,KAAgB,GAAUjc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,gBAAI4e,KAAExD,GAAIvF,WAAW7V,EAAAA;AAAoF,gBAA9E4e,MAAG,SAAOA,MAAG,UAAkCA,KAAE,UAAU,OAAFA,OAAS,MAAO,OAA9CxD,GAAIvF,WAAAA,EAAa7V,EAAAA,IAAqC4e,MAAG,KAAI;AAAC,kBAAGD,MAAQ1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAUC;YAAC,WAASA,MAAG,MAAK;AAAC,kBAAGD,KAAO,KAAG1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAU,MAAIC,MAAG,GAAEF,GAAKC,IAAAA,IAAU,MAAM,KAAFC;YAAI,WAASA,MAAG,OAAM;AAAC,kBAAGD,KAAO,KAAG1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAGF,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAE,IAAGF,GAAKC,IAAAA,IAAU,MAAM,KAAFC;YAAI,OAAK;AAAC,kBAAGD,KAAO,KAAG1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAGF,GAAKC,IAAAA,IAAU,MAAIC,MAAG,KAAG,IAAGF,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAE,IAAGF,GAAKC,IAAAA,IAAU,MAAM,KAAFC;YAAI;UAAC;AAACF,UAAAA,GAAKC,EAAAA,IAAQ;QAAgBE,GAAo7E/jB,IAAr2Eob,IAA22EwC,IAAIje,KAAO,CAAA;eAAW8jB;AAAqB,iBAAQve,KAAE,GAAEA,KAAEvF,IAAAA,EAASuF,IAAE;AAAC,cAAI8e,KAAShkB,GAAM+a,WAAW7V,EAAAA;AAAM8e,UAAAA,KAAS,QAAKR,GAAM5F,EAAAA,GAAKK,EAAkB,wDAAA,IAA0D7C,GAAOwC,KAAI1Y,EAAAA,IAAG8e;QAAQ;;AAAO,aAAQ9e,KAAE,GAAEA,KAAEvF,IAAAA,EAASuF;AAAGkW,UAAAA,GAAOwC,KAAI1Y,EAAAA,IAAGlF,GAAMkF,EAAAA;AAAyD,aAAnC,SAAdqa,MAAoBA,GAAYjV,KAAKkZ,IAAME,EAAAA,GAAaA;IAAI,GAAElE,gBAAxwO,GAA6yOC,sBAAuBR,GAAY,mBAAmBrB,IAAAA;AAAK4F,SAAM5F,EAAAA;IAAI,EAAA,CAAA;EAAE,GAA6hJE,GAAhvF,CAACM,IAAQ6F,IAASpX,OAAAA;AAAoC,QAAIqX,IAAaC,IAAaC,IAAWC;AAArExX,IAAAA,KAAK8Q,EAAiB9Q,EAAAA,GAA4E,MAAXoX,MAAcC,KAAapD,GAAcqD,KAAalD,IAAcoD,KAAe/C,IAAiB8C,KAAWlF,CAAAA,OAAS5D,GAAQ4D,MAAS,CAAA,KAAsB,MAAX+E,OAAcC,KAAa3C,IAAc4C,KAAa1C,IAAc4C,KAAe3C,IAAiB0C,KAAWlF,CAAAA,OAAS1D,GAAQ0D,MAAS,CAAA,IAAGf,EAAaC,IAAQ,EAACvR,MAAKA,IAAKuS,cAAepf,CAAAA,OAAAA;AAAwE,eAA/BsgB,IAA7B3gB,KAAO6b,GAAQxb,MAAO,CAAA,GAAeqjB,KAAerjB,KAAM,GAAUkF,KAAE,GAAEA,MAAGvF,IAAAA,EAASuF,IAAE;AAAC,YAAIoe,KAAetjB,KAAM,IAAEkF,KAAE+e;AAAS,YAAG/e,MAAGvF,MAAoC,KAA5BykB,GAAWd,EAAAA,GAAmB;AAAC,cAAmDC,KAAcW,GAAab,IAA7DC,KAAeD,EAAAA;AAAAA,qBAA8E/C,KAAiBA,KAAIiD,MAAmBjD,MAAKI,OAAOC,aAAa,CAAA,GAAGL,MAAKiD,KAAcF,KAAeC,KAAeW;QAAQ;MAAC;AAAc,aAAbT,GAAMxjB,EAAAA,GAAcsgB;IAAAA,GAAKhB,YAAa,CAACC,IAAYvf,OAAAA;AAA4B,kBAAA,OAAPA,MAAkBie,EAAkB,6CAA6CpR,EAAAA,EAAAA;AAAQ,UAAIlN,KAAO0kB,GAAerkB,EAAAA,GAAW4d,KAAI+F,GAAQ,IAAEhkB,KAAOskB,EAAAA;AAAuI,aAA7HzI,GAAQoC,MAAK,CAAA,IAAGje,KAAOskB,IAASE,GAAankB,IAAM4d,KAAI,GAAEje,KAAOskB,EAAAA,GAA2B,SAAd1E,MAAoBA,GAAYjV,KAAKkZ,IAAM5F,EAAAA,GAAYA;IAAAA,GAAK4B,gBAAl3U,GAAu5UC,sBAAuBR,GAAY,mBAAmBrB,IAAAA;AAAK4F,SAAM5F,EAAAA;IAAI,EAAA,CAAA;EAAE,GAAm9C0G,GAAr7C,CAAClG,IAAQvR,OAAAA;AAAoCsR,MAAaC,IAAQ,EAACmG,QAAAA,MAAY1X,MAA9DA,KAAK8Q,EAAiB9Q,EAAAA,GAAkD2S,gBAAiB,GAAEJ,cAAe,MAAA;IAAa,GAACE,YAAa,CAACC,IAAYoD,OAAAA;IAAa,EAAA,CAAA;EAAE,GAA4xC6B,GAApkCC,CAAAA,OAAAA;AAAgB,QAAIC,KAAQtJ,GAAOzb,QAA8BglB,KAApQ;AAA6R,SAAhDF,QAAiB,KAAgDE;AAAa,aAAA;AAAwE,aAA9C3lB,IAAE4lB,IAAoDC,KAAQ,GAAEA,MAAS,GAAEA,MAAS,GAAE;AAAC,UAAIC,KAAkBJ,MAAS,IAAE,MAAGG;AAASC,MAAAA,KAAkBtlB,KAAKulB,IAAID,IAAkBL,KAAc,SAAA;AAAW,UAAIO,KAAQxlB,KAAKulB,IAAIJ,KAA/N3lB,KAAmPQ,KAAKylB,IAAIR,IAAcK,EAAAA,OAAxQF,KAA2R,SAApQ5lB,KAAE4lB,MAAUA,EAAAA;AAAoS,UAApBhD,GAAWoD,EAAAA;AAAyB,eAAA;IAAY;AAAC,WAAA;EAAO,EAAA,GAAomBE,KAA/mc,WAAA;AlBL9jsB;AkBKolsB,QAAIC,KAAK,EAAChgB,GAAIgd,GAAAA;AAAa,aAASiD,GAAgBC,IAASC,IAAAA;AAAnxlB,UAAmB5G;AAAy5lB,aAAjJwG,KAAYG,GAASE,SAAQhL,KAAW2K,GAAe,GAAEtJ,GAAAA,GAAj0lB8C,KAA+1lBwG,GAAe,GAA12lB9I,GAAWoJ,QAAQ9G,EAAAA,GAA+O,SAA6B+G,IAAAA;AlBLprH,YAAAC;AkBK8vH,YAAtEpJ,OAAkBnD,MAAAA,GAA+B,2BAA/BA,gBAAAA,IAAAA,KAAAA,IAAmCmD,KAAqC,KAAjBA,MAAqHC,IAAsB;AAAC,cAAIW,KAASX;AAAsBA,UAAAA,KAAsB,MAAKW,GAAAA;QAAU;MAAE,EAA2ykByI,GAA+CT;IAAW;AAAsH,QAAj2lB5I,OAAkBnD,KAAAA,GAA+B,2BAA/BA,wBAAAA,IAAmCmD,KAA+ylBnD,GAAwB;AAAG,UAAA;AAAI,eAAOA,GAAwB,gBAAEgM,IAAKC,EAAAA;MAAgB,SAAOlkB,IAAAA;AAAGsZ,QAAAA,GAAI,sDAAsDtZ,EAAAA,EAAAA,GAAKgY,GAAmBhY,EAAAA;MAAE;AAAwG,WAAtG8b,GAAiB1C,GAAWoC,IAAeyI,IAAnT,SAAoCpS,IAAAA;AAAQqS,MAAAA,GAAgBrS,GAAiB,QAAA;IAAE,CAAA,EAAqQ6S,MAAM1M,EAAAA,GAA0B,CAAA;EAAE,EAAi+a2M;AAA0F1M,EAAAA,GAAc,QAAE,CAAC2M,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,QAAarN,GAAc,QAAE+L,GAAe,GAAGY,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,EAAAA;AAAK,MAAmQC,IAA/P9C,KAAQxK,GAAgB,UAAE2M,CAAAA,QAAKnC,KAAQxK,GAAgB,UAAE+L,GAAe,GAAGY,EAAAA,GAAQtC,KAAMrK,GAAc,QAAE2M,CAAAA,QAAKtC,KAAMrK,GAAc,QAAE+L,GAAe,GAAGY,EAAAA;AAAiO,WAASY,KAAAA;AAAyE,aAASC,KAAAA;AAAWF,aAAiBA,KAAAA,MAAetN,GAAkB,YAAA,MAAUwC,OAA12jC2B,GAAqBlB,EAAAA,GAAg3jCnD,GAAoBE,EAAAA,GAAWA,GAA6B,wBAAEA,GAA6B,qBAAA,GAA/7jC,WAAA;AAAmB,YAAGA,GAAgB;AAAiF,eAAjD,cAAA,OAAnBA,GAAgB,YAAcA,GAAgB,UAAE,CAACA,GAAgB,OAAA,IAASA,GAAgB,QAAExZ;AAA2M+e,YAAAA,KAAtLvF,GAAgB,QAAEqE,MAAAA,GAAwKnB,GAAcmJ,QAAQ9G,EAAAA;AAAhD,YAAsBA;AAA1JpB,QAAAA,GAAqBjB,EAAAA;MAAc,EAAgujCuK;IAAS;AAAnRtK,IAAAA,KAAgB,MAAp/jC,WAAA;AAAkB,UAAGnD,GAAe;AAA8E,aAA/C,cAAA,OAAlBA,GAAe,WAAcA,GAAe,SAAE,CAACA,GAAe,MAAA,IAASA,GAAe,OAAExZ;AAA2Z+e,UAAAA,KAAvYvF,GAAe,OAAEqE,MAAAA,GAA0XrB,GAAaqJ,QAAQ9G,EAAAA;AAA9C,UAAqBA;AAA5WpB,MAAAA,GAAqBnB,EAAAA;IAAa,EAAoyjC0K,GAAYvK,KAAgB,MAAiOnD,GAAkB,aAAGA,GAAkB,UAAE,YAAA,GAAc2N,WAAW,WAAA;AAAWA,iBAAW,WAAA;AAAW3N,QAAAA,GAAkB,UAAE,EAAA;MAAG,GAAE,CAAA,GAAGwN,GAAAA;IAAO,GAAE,CAAA,KAAQA,GAAAA;EAAQ;AAAC,MAAhjBpK,KAAsB,SAASwK,KAAAA;AAAgBN,UAAUC,GAAAA,GAAUD,OAAUlK,KAAsBwK;EAAS,GAAuc5N,GAAgB;AAAiF,SAAjD,cAAA,OAAnBA,GAAgB,YAAcA,GAAgB,UAAE,CAACA,GAAgB,OAAA,IAASA,GAAgB,QAAExZ,SAAO;AAAGwZ,MAAAA,GAAgB,QAAE6F,IAAAA,EAAlB7F;AAGr1qC,SAHg3qCuN,GAAAA,GAGz2qC1N,GAAUgO;AAEnB;ACPA,IAAMC,IAAN,MAAMA;EA6BF,YAAYxU,IAAAA;AA5BLtT,SAAW+nB,cAAAA,OACX/nB,KAAiBgoB,oBAAAA,OAiBhBhoB,KAAAioB,YAAwB,oBAAI3jB,OAC5BtE,KAAAkoB,SAAqB,oBAAI5jB;AAU7B,QAAI0E,KAAc,GACdmf,KAAa;AACjBnoB,SAAKooB,gBAAgB,oBAAIpkB,OACzBhE,KAAKqoB,WAAW,oBAAIrkB;AACpB,UAAMskB,KAAS,oBAAItkB;AACnB,eAAWsD,MAAUgM,GAAMtC;AACnB1J,MAAAA,cAAkB8F,MAClBpN,KAAKooB,cAAc/jB,IAAIiD,IAAQ6gB,EAAAA,GAC/BnoB,KAAKqoB,SAAShkB,IAAIiD,IAAQ0B,EAAAA,GAC1Bsf,GAAOjkB,IAAI2E,IAAa1B,EAAAA,GACxB0B,MAAe1B,GAAOiD,KAAKvB,aAC3Bmf;AAIRnoB,SAAKuJ,eAAeP,IACpBhJ,KAAKmP,SAAS,MACdnP,KAAKoP,UAAU/O,KAAKkoB,KAAM,IAAIvoB,KAAKgJ,cAAehJ,KAAK0P,KAAAA,GACvD1P,KAAKyN,QAAQ,IAAIqP,YAAY9c,KAAK0P,QAAQ1P,KAAK4P,SAAS,CAAA,GAExD5P,KAAKwoB,mBAAmB,GACxBxoB,KAAKyoB,oBAAoBH,GAAO5F,MAChC1iB,KAAK0oB,cAAc,IAAIjf,aAAazJ,KAAKwoB,mBAAmBxoB,KAAKyoB,oBAAoB,CAAA,GAErFzoB,KAAK2oB,yBAAyB,MAC9B3oB,KAAK4oB,0BAA0BvoB,KAAKkoB,KAAKvoB,KAAKgJ,cAAchJ,KAAK2oB,sBAAAA,GACjE3oB,KAAK6oB,oBAAoB,IAAI/L,YAAY9c,KAAK2oB,yBAAyB3oB,KAAK4oB,uBAAAA,GAE5E5oB,KAAKwJ,aAAa,IAAIC,aAAgC,IAAnBzJ,KAAKgJ,WAAAA,GACxChJ,KAAK0J,aAAa,IAAID,aAAgC,IAAnBzJ,KAAKgJ,WAAAA,GACxChJ,KAAK2J,UAAU,IAAIF,aAAgC,IAAnBzJ,KAAKgJ,WAAAA,GAErChJ,KAAK8oB,UAAU,IAAIC;AAEnB,UAAMC,KAAmB3b,CAAAA,OAAAA;AACrB,YAAM8a,KAAanoB,KAAKooB,cAAc7jB,IAAI8I,EAAAA;AAC1CrN,WAAK0oB,YAAYrkB,IAAIgJ,GAAMzE,UAAU1I,QAAqB,KAAbioB,EAAAA,GAC7CnoB,KAAK0oB,YAAyB,KAAbP,KAAkB,EAAA,IAAM9a,GAAMwB,WAAW,IAAI,GAC9DxB,GAAM1F,kBAAAA,OACN0F,GAAMzF,kBAAAA,OACNyF,GAAMxF,eAAAA,OACNwF,GAAME,kBAAAA,OACNvN,KAAKgoB,oBAAAA;IAAwB;AAoCjC,QAAIiB;AAjCJjpB,SAAK8oB,QAAQI,YAAannB,CAAAA,OAAAA;AACtB,UAAIA,GAAEwI,KAAK0Q,UAAU;AACjB,cAAMA,KAAWlZ,GAAEwI,KAAK0Q,UAClB5N,KAAQib,GAAO/jB,IAAI0W,GAASpP,MAAAA;AAClCmd,QAAAA,GAAgB3b,EAAAA;AAEhB,cAAM8a,KAAanoB,KAAKooB,cAAc7jB,IAAI8I,EAAAA;AAC1C,iBAAStH,KAAI,GAAGA,KAAIsH,GAAM9C,KAAKvB,aAAajD;AACxC/F,eAAK6oB,kBAAkB5N,GAASpP,SAAS9F,EAAAA,IAAKoiB;AAGlDnoB,aAAKyN,MAAMpJ,IAAI4W,GAAS1Q,MAAwB,IAAlB0Q,GAASpP,MAAAA,GACvCwB,GAAM9C,KAAKI,SACPsQ,GAAShS,WACTgS,GAAS/R,WACT+R,GAAS9R,QACT8R,GAAS7R,QACT6R,GAASrQ,SAAAA,GAGb5K,KAAKwJ,WAAWnF,IAAI4W,GAASkO,gBAAkC,IAAlBlO,GAASpP,MAAAA,GACtD7L,KAAK0J,WAAWrF,IAAI4W,GAASmO,gBAAkC,IAAlBnO,GAASpP,MAAAA,GACtD7L,KAAK2J,QAAQtF,IAAI4W,GAASoO,aAA+B,IAAlBpO,GAASpP,MAAAA,GAEhD7L,KAAKioB,UAAUvjB,OAAO2I,EAAAA,GAEtBA,GAAME,kBAAAA,OAENvN,KAAK+nB,cAAAA;MACR;IAAA,GAMLnW,iBAAAA;AACIqX,MAAAA,KAAAA,MAAmBrP,EAAAA;IACtB,EAED0P;AAQA,UAAMC,KAAkBlc,CAAAA,OAAAA;AACpB,UAAA,CAAK4b;AAID,eAAA,KAXRrX,iBAAAA;AACI,iBAAA,CAAQqX;AAAAA,kBACE,IAAIhV,QAASC,CAAAA,OAAYyT,WAAWzT,IAAS,CAAA,CAAA;QAE1D,EAIOsV,EAAc7L,KAAK,MAAA;AACf4L,UAAAA,GAAelc,EAAAA;QAAM,CAAA;AAK7B2b,MAAAA,GAAgB3b,EAAAA;AAEhB,YAAMoc,KAAeR,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA,GAC/D0gB,KAAeT,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA,GAC/D2gB,KAAYV,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA,GAC5D4gB,KAAYX,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,WAAAA,GAC9C6gB,KAAeZ,GAAWzE,QAAQnX,GAAM9C,KAAKvB,WAAAA,GAC7C8gB,KAAUb,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA,GAC1D+gB,KAAoBd,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA,GACpEghB,KAAoBf,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA,GACpEihB,KAAiBhB,GAAWzE,QAAQ,IAAInX,GAAM9C,KAAKvB,cAAc,CAAA;AAEvEigB,MAAAA,GAAW3M,QAAQjY,IAAIgJ,GAAM9C,KAAKtB,WAAWwgB,KAAe,CAAA,GAC5DR,GAAW3M,QAAQjY,IAAIgJ,GAAM9C,KAAKrB,WAAWwgB,KAAe,CAAA,GAC5DT,GAAW3M,QAAQjY,IAAIgJ,GAAM9C,KAAKpB,QAAQwgB,KAAY,CAAA,GACtDV,GAAWhN,OAAO5X,IAAIgJ,GAAM9C,KAAKnB,QAAQwgB,EAAAA,GACzCX,GAAWhN,OAAO5X,IAAIgJ,GAAM9C,KAAKK,WAAWif,EAAAA,GAE5CZ,GAAWiB,MACP7c,GAAMwB,UACNxB,GAAM9C,KAAKvB,aACXygB,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,EAAAA;AAGJ,YAAME,KAAU,IAAIrN,YAAYmM,GAAW5M,QAAQnc,QAAQ4pB,IAAkC,IAAzBzc,GAAM9C,KAAKvB,WAAAA,GACzEmgB,KAAiB,IAAI1f,aACvBwf,GAAW3M,QAAQpc,QACnB6pB,IACyB,IAAzB1c,GAAM9C,KAAKvB,WAAAA,GAETogB,KAAiB,IAAI3f,aACvBwf,GAAW3M,QAAQpc,QACnB8pB,IACyB,IAAzB3c,GAAM9C,KAAKvB,WAAAA,GAETqgB,KAAc,IAAI5f,aAAawf,GAAW3M,QAAQpc,QAAQ+pB,IAAyC,IAAzB5c,GAAM9C,KAAKvB,WAAAA,GAErFmf,KAAanoB,KAAKooB,cAAc7jB,IAAI8I,EAAAA,GACpCxB,KAAS7L,KAAKqoB,SAAS9jB,IAAI8I,EAAAA;AACjC,eAAStH,KAAI,GAAGA,KAAIsH,GAAM9C,KAAKvB,aAAajD;AACxC/F,aAAK6oB,kBAAkBhd,KAAS9F,EAAAA,IAAKoiB;AAEzCnoB,WAAKyN,MAAMpJ,IAAI8lB,IAAkB,IAATte,EAAAA,GACxB7L,KAAKwJ,WAAWnF,IAAI8kB,IAAyB,IAATtd,EAAAA,GACpC7L,KAAK0J,WAAWrF,IAAI+kB,IAAyB,IAATvd,EAAAA,GACpC7L,KAAK2J,QAAQtF,IAAIglB,IAAsB,IAATxd,EAAAA,GAE9Bod,GAAW5E,MAAMoF,EAAAA,GACjBR,GAAW5E,MAAMqF,EAAAA,GACjBT,GAAW5E,MAAMsF,EAAAA,GACjBV,GAAW5E,MAAMuF,EAAAA,GACjBX,GAAW5E,MAAMwF,EAAAA,GACjBZ,GAAW5E,MAAMyF,EAAAA,GACjBb,GAAW5E,MAAM0F,EAAAA,GACjBd,GAAW5E,MAAM2F,EAAAA,GACjBf,GAAW5E,MAAM4F,EAAAA,GAEjBjqB,KAAK+nB,cAAAA;IAAkB,GAGrBqC,KAAS/c,CAAAA,OAAAA;AAKX,WAJIA,GAAM1F,mBAAmB0F,GAAMzF,mBAAmByF,GAAMxF,gBAAgBwF,GAAME,oBAC9Eyb,GAAgB3b,EAAAA,GAAAA,CAGfA,GAAM9C,KAAKlB,WAAWgE,GAAM9C,KAAKjB;AAAU;AAEhD,YAAM+gB,KAAkB,EACpB9jB,UAAU,IAAIkD,aAAa4D,GAAM9G,SAAS9F,KAAAA,CAAAA,GAC1C+F,UAAU,IAAIiD,aAAa4D,GAAM7G,SAAS/F,KAAAA,CAAAA,GAC1CgG,OAAO,IAAIgD,aAAa4D,GAAM5G,MAAMhG,KAAAA,CAAAA,GACpCoO,UAAUxB,GAAMwB,UAChB7F,aAAaqE,GAAM9C,KAAKvB,aACxBC,WAAWoE,GAAM9C,KAAKtB,WACtBC,WAAWmE,GAAM9C,KAAKrB,WACtBC,QAAQkE,GAAM9C,KAAKpB,QACnBC,QAAQiE,GAAM9C,KAAKnB,QACnBwB,WAAWyC,GAAM9C,KAAKK,WACtBiB,QAAQ7L,KAAKqoB,SAAS9jB,IAAI8I,EAAAA,EAAAA;AAG9BrN,WAAK8oB,QAAQwB,YACT,EACIjd,OAAOgd,GAAAA,GAEX,CACIA,GAAgB9jB,SAASrG,QACzBmqB,GAAgB7jB,SAAStG,QACzBmqB,GAAgB5jB,MAAMvG,QACtBmqB,GAAgBphB,UAAU/I,QAC1BmqB,GAAgBnhB,UAAUhJ,QAC1BmqB,GAAgBlhB,OAAOjJ,QACvBmqB,GAAgBjhB,OAAOlJ,QACvBmqB,GAAgBzf,UAAU1K,MAAAA,CAAAA,GAIlCF,KAAKioB,UAAUzjB,IAAI6I,EAAAA,GAEnBA,GAAM9C,KAAKjB,WAAAA;IAAe;AAG9BtJ,SAAKuqB,WAAYrZ,CAAAA,OAAAA;AACb,UAAI7D,KAAQ;AACZ,iBAAK,CAAOmd,IAAK3pB,EAAAA,KAAUb,KAAKqoB,UAAU;AACtC,YAAA,EAAInX,MAASrQ;AAGT;AAFAwM,QAAAA,KAAQmd;MAIf;AACD,aAAOnd;IAAK,GAGhBrN,KAAKyqB,gBAAgB,CAACpd,IAAc6D,OAEzBA,KADQlR,KAAKqoB,SAAS9jB,IAAI8I,EAAAA,GAIrCrN,KAAK0qB,YAAard,CAAAA,OAAAA;AACdrN,WAAKkoB,OAAO1jB,IAAI6I,EAAAA;IAAM,GAG1BrN,KAAK2qB,UAAU,MAAA;AACX,iBAAWtd,MAASrN,KAAKkoB;AACrBkC,QAAAA,GAAM/c,EAAAA;AAGVrN,WAAKkoB,OAAO0C,MAAAA;IAAO,GAGvB5qB,KAAKwZ,UAAU,MAAA;AACXxZ,WAAK8oB,QAAQ+B,UAAAA;IAAW;AAG5B,eAAWxd,MAASrN,KAAKooB,cAAc0C,KAAAA;AACnCvB,MAAAA,GAAelc,EAAAA;EAEtB;EAED,IAAA,UAAI0H;AACA,WAAO/U,KAAKqoB;EACf;EAED,IAAA,OAAI9d;AACA,WAAOvK,KAAKyN;EACf;EAED,IAAA,QAAIiC;AACA,WAAO1P,KAAKmP;EACf;EAED,IAAA,SAAIS;AACA,WAAO5P,KAAKoP;EACf;EAED,IAAA,aAAI2b;AACA,WAAO/qB,KAAK0oB;EACf;EAED,IAAA,kBAAIsC;AACA,WAAOhrB,KAAKwoB;EACf;EAED,IAAA,mBAAIyC;AACA,WAAOjrB,KAAKyoB;EACf;EAED,IAAA,mBAAIyC;AACA,WAAOlrB,KAAK6oB;EACf;EAED,IAAA,wBAAIsC;AACA,WAAOnrB,KAAK2oB;EACf;EAED,IAAA,yBAAIyC;AACA,WAAOprB,KAAK4oB;EACf;EAED,IAAA,YAAI3f;AACA,WAAOjJ,KAAKwJ;EACf;EAED,IAAA,YAAIN;AACA,WAAOlJ,KAAK0J;EACf;EAED,IAAA,SAAIP;AACA,WAAOnJ,KAAK2J;EACf;EAED,IAAA,cAAIX;AACA,WAAOhJ,KAAKuJ;EACf;EAED,IAAA,eAAI8hB;AACA,WAAOrrB,KAAKkoB,OAAOxF,OAAO;EAC7B;EAED,IAAA,WAAI4I;AACA,WAAOtrB,KAAKioB,UAAUvF,OAAO;EAChC;AAAA;ACzVL,IAAM6I,IAAN,MAAMA;EAMF,YAAYC,KAAY,GAAGnG,KAAY,GAAGpf,KAAY,GAAGD,KAAY,KAAA;AACjEhG,SAAKwrB,IAAIA,IACTxrB,KAAKqlB,IAAIA,IACTrlB,KAAKiG,IAAIA,IACTjG,KAAKgG,IAAIA;EACZ;EAED,OAAAvF;AACI,WAAO,CAACT,KAAKwrB,GAAGxrB,KAAKqlB,GAAGrlB,KAAKiG,GAAGjG,KAAKgG,CAAAA;EACxC;EAED,WAAAylB;AACI,WAAO,CAACzrB,KAAKwrB,IAAI,KAAKxrB,KAAKqlB,IAAI,KAAKrlB,KAAKiG,IAAI,KAAKjG,KAAKgG,IAAI,GAAA;EAC9D;EAED,cAAA0lB;AACI,WACI,MACA1rB,KAAKS,KAAAA,EACAkrB,IAAK9rB,CAAAA,OAAMA,GAAEc,SAAS,EAAA,EAAIirB,SAAS,GAAG,GAAA,CAAA,EACtChrB,KAAK,EAAA;EAEjB;EAED,WAAAD;AACI,WAAO,IAAIX,KAAKS,KAAAA,EAAOG,KAAK,IAAA,CAAA;EAC/B;AAAA;AC6GL,IAAMirB,IAAN,cAA4B3U,EAAAA;EAgBxB,YAAYC,IAAyBC,IAAAA;AACjC7P,UAAM4P,IAAUC,EAAAA,GAhBZpX,KAAiB8rB,oBAAW,IAC5B9rB,KAAA+rB,gBAAyB,IAAIR,EAAQ,KAAK,KAAK,GAAG,GAAA,GAClDvrB,KAAWgsB,cAAsB,MACjChsB,KAAAisB,cAA2B,IAAInP,eAC/B9c,KAAOksB,UAAsB,MAC7BlsB,KAAamsB,gBAAwB;AAazC,UAAMC,KAASjV,GAASiV,QAClB1U,KAAKP,GAASO;AAEpB,QAAI2U,IAEAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IAEAC,IACAC,IAEAC,IACAC,IAEAC,IACAC,IAEAC,IACAC;AAEJptB,SAAKmZ,UAAU,MAAA;AACNnZ,WAAKsX,YAEVtX,KAAKsX,QAAQ/M,KAAK0F,QAAQmc,GAAO1c,OAAO0c,GAAOxc,MAAAA,GAC/C5P,KAAKsX,QAAQnP,OAAAA,GAEbmkB,KAAe5U,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,YAAA,GACnDlB,GAAG4V,iBAAiBhB,IAAAA,OAAqBtsB,KAAKsX,QAAQ/M,KAAKwF,iBAAiB7P,MAAAA,GAE5EqsB,KAAa7U,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,UAAA,GACjDlB,GAAG6V,WAAWhB,IAAY,IAAI9iB,aAAa,CAAC2iB,GAAO1c,OAAO0c,GAAOxc,MAAAA,CAAAA,CAAAA;IAAS;AAG9E,UAAM4d,KAAe,MAAA;AACjBnB,MAAAA,KAAS,IAAIoB,KACbpB,GAAOnD,YAAannB,CAAAA,OAAAA;AAChB,YAAIA,GAAEwI,KAAKmjB,YAAY;AACnB,gBAAA,EAAMA,YAAEA,IAAUxa,QAAEA,GAAAA,IAAWnR,GAAEwI;AACjCvK,eAAKisB,cAAcyB,IACnB1tB,KAAKksB,UAAUhZ,IACfwE,GAAGiW,WAAWjW,GAAGkW,cAAcR,EAAAA,GAC/B1V,GAAGmW,WAAWnW,GAAGkW,cAAcF,IAAYhW,GAAGoW,WAAAA;QACjD;MAAA;IACJ;AAGL9tB,SAAKqZ,cAAc,MAAA;AACf,UAAKrZ,KAAKqX,UAAWrX,KAAKsX,SAA1B;AAKAtX,aAAKmZ,QAAAA,GAELnZ,KAAKqX,OAAOpT,iBAAiB,eAAe8pB,EAAAA,GAC5C/tB,KAAKqX,OAAOpT,iBAAiB,iBAAiB+pB,EAAAA;AAC9C,mBAAW1mB,MAAUtH,KAAKqX,OAAOrG;AACzB1J,UAAAA,cAAkB8F,KAClB9F,GAAOrD,iBAAiB,iBAAiBgqB,EAAAA;AAIjDjuB,aAAKgsB,cAAc,IAAIlE,EAAW9nB,KAAKqX,MAAAA,GAEvCmV,KAAU9U,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,OAAA,GAC9ClB,GAAG6V,WAAWf,IAAS,IAAI/iB,aAAa,CAACzJ,KAAKsX,QAAQ/M,KAAKkF,IAAIzP,KAAKsX,QAAQ/M,KAAKoF,EAAAA,CAAAA,CAAAA,GAEjF8c,KAAS/U,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,MAAA,GAC7ClB,GAAG4V,iBAAiBb,IAAAA,OAAezsB,KAAKsX,QAAQ/M,KAAKyF,WAAW9P,MAAAA,GAEhE2sB,KAAqBnV,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,kBAAA,GACzDlB,GAAGwW,UAAUrB,IAAoB7sB,KAAKmuB,gBAAAA,GAEtCrB,KAAiBpV,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,cAAA,GACrDlB,GAAG0W,WAAWtB,IAAgB,IAAIrjB,aAAazJ,KAAKquB,aAAa5C,SAAAA,CAAAA,CAAAA,GAEjEzrB,KAAKmsB,gBAAgBzU,GAAG4W,cAAAA,GACxB5B,KAAYhV,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,WAAA,GAChDlB,GAAG6W,UAAU7B,IAAW,CAAA,GAExBO,KAAoBvV,GAAG4W,cAAAA,GACvB3B,KAAejV,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,cAAA,GACnDlB,GAAG6W,UAAU5B,IAAc,CAAA,GAE3BO,KAA0BxV,GAAG4W,cAAAA,GAC7B1B,KAAqBlV,GAAG2V,mBAAmBrtB,KAAK4Y,SAAS,oBAAA,GACzDlB,GAAG6W,UAAU3B,IAAoB,CAAA,GAEjCO,KAAezV,GAAG8W,aAAAA,GAClB9W,GAAGiW,WAAWjW,GAAGkW,cAAcT,EAAAA,GAC/BzV,GAAGmW,WAAWnW,GAAGkW,cAAc,IAAInkB,aAAa,CAAA,IAAE,IAAO,GAAA,IAAO,GAAG,GAAA,IAAO,CAAA,CAAA,GAAKiO,GAAGoW,WAAAA,GAElFf,KAAoBrV,GAAG+W,kBAAkBzuB,KAAK4Y,SAAS,UAAA,GACvDlB,GAAGgX,wBAAwB3B,EAAAA,GAC3BrV,GAAGiX,oBAAoB5B,IAAmB,GAAGrV,GAAGkX,OAAAA,OAAc,GAAG,CAAA,GAEjExB,KAAc1V,GAAG8W,aAAAA,GACjBxB,KAAiBtV,GAAG+W,kBAAkBzuB,KAAK4Y,SAAS,OAAA,GACpDlB,GAAGgX,wBAAwB1B,EAAAA,GAC3BtV,GAAGiW,WAAWjW,GAAGkW,cAAcR,EAAAA,GAE/BI,GAAAA;MAnDC;AAFG3iB,gBAAQyN,MAAM,wCAAA;IAqDJ;AAGlB,UAAMyV,KAAqBlpB,CAAAA,OAAAA;AACvB,YAAM9C,KAAI8C;AAEN9C,MAAAA,GAAEuF,kBAAkB8F,KACpBrL,GAAEuF,OAAOrD,iBAAiB,iBAAiBgqB,EAAAA,GAG/CjuB,KAAKwZ,QAAAA;IAAS,GAGZwU,KAAuBnpB,CAAAA,OAAAA;AACzB,YAAM9C,KAAI8C;AAEN9C,MAAAA,GAAEuF,kBAAkB8F,KACpBrL,GAAEuF,OAAO7C,oBAAoB,iBAAiBwpB,EAAAA,GAGlDjuB,KAAKwZ,QAAAA;IAAS,GAGZyU,KAAuBppB,CAAAA,OAAAA;AACzB,YAAM9C,KAAI8C;AAEN9C,MAAAA,GAAEuF,kBAAkB8F,KAASpN,KAAKgsB,eAClChsB,KAAKgsB,YAAYtB,UAAU3oB,GAAEuF,MAAAA;IAChC;AAGLtH,SAAKyZ,UAAU,MAAA;AACX,UAAKzZ,KAAKqX,UAAWrX,KAAKsX,WAAYtX,KAAK6uB,YAA3C;AASA,YAJI7uB,KAAK6uB,WAAWxD,gBAChBrrB,KAAK6uB,WAAWlE,QAAAA,GAGhB3qB,KAAK6uB,WAAW9G,eAAe/nB,KAAK6uB,WAAW7G,mBAAmB;AAC9DhoB,eAAK6uB,WAAW9G,gBAChBrQ,GAAGoX,cAAcpX,GAAGqX,QAAAA,GACpBrX,GAAGsX,YAAYtX,GAAGuX,YAAYjvB,KAAKkvB,YAAAA,GACnCxX,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG0X,gBAAgB1X,GAAG2X,aAAAA,GACtD3X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG4X,gBAAgB5X,GAAG2X,aAAAA,GACtD3X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG6X,oBAAoB7X,GAAG8X,OAAAA,GAC1D9X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG+X,oBAAoB/X,GAAG8X,OAAAA,GAC1D9X,GAAGgY,WACChY,GAAGuX,YACH,GACAvX,GAAGiY,UACH3vB,KAAK6uB,WAAWnf,OAChB1P,KAAK6uB,WAAWjf,QAChB,GACA8H,GAAGkY,cACHlY,GAAGmY,cACH7vB,KAAK6uB,WAAWtkB,IAAAA,IAIpBvK,KAAK6uB,WAAW7G,sBAChBtQ,GAAGoX,cAAcpX,GAAGoY,QAAAA,GACpBpY,GAAGsX,YAAYtX,GAAGuX,YAAYhC,EAAAA,GAC9BvV,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG0X,gBAAgB1X,GAAG2X,aAAAA,GACtD3X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG4X,gBAAgB5X,GAAG2X,aAAAA,GACtD3X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG6X,oBAAoB7X,GAAG8X,OAAAA,GAC1D9X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG+X,oBAAoB/X,GAAG8X,OAAAA,GAC1D9X,GAAGgY,WACChY,GAAGuX,YACH,GACAvX,GAAGqY,SACH/vB,KAAK6uB,WAAW7D,iBAChBhrB,KAAK6uB,WAAW5D,kBAChB,GACAvT,GAAGsY,MACHtY,GAAGkX,OACH5uB,KAAK6uB,WAAW9D,UAAAA,GAGpBrT,GAAGoX,cAAcpX,GAAGuY,QAAAA,GACpBvY,GAAGsX,YAAYtX,GAAGuX,YAAY/B,EAAAA,GAC9BxV,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG0X,gBAAgB1X,GAAG2X,aAAAA,GACtD3X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG4X,gBAAgB5X,GAAG2X,aAAAA,GACtD3X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG6X,oBAAoB7X,GAAG8X,OAAAA,GAC1D9X,GAAGyX,cAAczX,GAAGuX,YAAYvX,GAAG+X,oBAAoB/X,GAAG8X,OAAAA,GAC1D9X,GAAGgY,WACChY,GAAGuX,YACH,GACAvX,GAAGwY,OACHlwB,KAAK6uB,WAAW1D,uBAChBnrB,KAAK6uB,WAAWzD,wBAChB,GACA1T,GAAGyY,aACHzY,GAAGmY,cACH7vB,KAAK6uB,WAAW3D,gBAAAA;AAIxB,gBAAMkF,KAAoB,IAAI3mB,aAAazJ,KAAK6uB,WAAW5lB,UAAUyI,MAAAA,EAAQxR,MAAAA,GACvEmwB,KAAqB,IAAI5mB,aAAazJ,KAAK6uB,WAAW9D,WAAWrZ,MAAAA,EAAQxR,MAAAA,GACzEowB,KAA2B,IAAIxT,YAAY9c,KAAK6uB,WAAW3D,iBAAiBxZ,MAAAA,EAAQxR,MAAAA;AAC1FmsB,UAAAA,GAAO/B,YACH,EACIiG,UAAU,EACNtnB,WAAWmnB,IACXrF,YAAYsF,IACZnF,kBAAkBoF,IAClBtnB,aAAahJ,KAAK6uB,WAAW7lB,YAAAA,EAAAA,GAGrC,CAAConB,GAAkBlwB,QAAQmwB,GAAmBnwB,QAAQowB,GAAyBpwB,MAAAA,CAAAA,GAGnFF,KAAK6uB,WAAW9G,cAAAA,OAChB/nB,KAAK6uB,WAAW7G,oBAAAA;QACnB;AAEDhoB,aAAKsX,QAAQnP,OAAAA,GACbkkB,GAAO/B,YAAY,EAAEpa,UAAUlQ,KAAKsX,QAAQ/M,KAAK2F,SAAShQ,OAAAA,CAAAA,GAE1DwX,GAAG8Y,SAAS,GAAG,GAAGpE,GAAO1c,OAAO0c,GAAOxc,MAAAA,GACvC8H,GAAG+Y,WAAW,GAAG,GAAG,GAAG,CAAA,GACvB/Y,GAAGkT,MAAMlT,GAAGgZ,gBAAAA,GAEZhZ,GAAGiZ,QAAQjZ,GAAGkZ,UAAAA,GACdlZ,GAAGmZ,OAAOnZ,GAAGoZ,KAAAA,GACbpZ,GAAGqZ,kBAAkBrZ,GAAGsZ,qBAAqBtZ,GAAGuZ,KAAKvZ,GAAGsZ,qBAAqBtZ,GAAGuZ,GAAAA,GAChFvZ,GAAGwZ,sBAAsBxZ,GAAGyZ,UAAUzZ,GAAGyZ,QAAAA,GAEzCzZ,GAAG4V,iBAAiBhB,IAAAA,OAAqBtsB,KAAKsX,QAAQ/M,KAAKwF,iBAAiB7P,MAAAA,GAC5EwX,GAAG4V,iBAAiBb,IAAAA,OAAezsB,KAAKsX,QAAQ/M,KAAKyF,WAAW9P,MAAAA,GAEhEwX,GAAGiW,WAAWjW,GAAGkW,cAAcT,EAAAA,GAC/BzV,GAAGiX,oBAAoB5B,IAAmB,GAAGrV,GAAGkX,OAAAA,OAAc,GAAG,CAAA,GAEjElX,GAAGiW,WAAWjW,GAAGkW,cAAcR,EAAAA,GAC/B1V,GAAGmW,WAAWnW,GAAGkW,cAAc5tB,KAAK0tB,YAAYhW,GAAGoW,WAAAA,GACnDpW,GAAG0Z,qBAAqBpE,IAAgB,GAAGtV,GAAG2Z,KAAK,GAAG,CAAA,GACtD3Z,GAAG4Z,oBAAoBtE,IAAgB,CAAA,GAEvCtV,GAAG6Z,oBAAoB7Z,GAAG8Z,cAAc,GAAG,GAAGxxB,KAAK6uB,WAAW7lB,WAAAA;MA3G7D;AAFG6B,gBAAQyN,MAAM,wCAAA;IA6GwD,GAG9EtY,KAAK0Z,WAAW,MAAA;AACZ,UAAK1Z,KAAKqX,UAAWrX,KAAKsX,WAAYtX,KAAK6uB,YAA3C;AAKA7uB,aAAKqX,OAAO5S,oBAAoB,eAAespB,EAAAA,GAC/C/tB,KAAKqX,OAAO5S,oBAAoB,iBAAiBupB,EAAAA;AACjD,mBAAW1mB,MAAUtH,KAAKqX,OAAOrG;AACzB1J,UAAAA,cAAkB8F,KAClB9F,GAAO7C,oBAAoB,iBAAiBwpB,EAAAA;AAIpD5B,QAAAA,GAAOxB,UAAAA,GACP7qB,KAAK6uB,WAAWrV,QAAAA,GAEhB9B,GAAG+Z,cAAczxB,KAAKkvB,YAAAA,GACtBxX,GAAG+Z,cAAcxE,EAAAA,GACjBvV,GAAG+Z,cAAcvE,EAAAA,GAEjBxV,GAAGga,aAAatE,EAAAA,GAChB1V,GAAGga,aAAavE,EAAAA;MAlBf;AAFGtiB,gBAAQyN,MAAM,yCAAA;IAoBW,GAGjCtY,KAAK2xB,uBAAwB9wB,CAAAA,OAAAA;AACzBb,WAAK8rB,oBAAoBjrB,IACrBb,KAAKwX,gBACLE,GAAGwW,UAAUrB,IAAoBhsB,EAAAA;IACpC,GAGLb,KAAK4xB,mBAAoB/wB,CAAAA,OAAAA;AACrBb,WAAK+rB,gBAAgBlrB,IACjBb,KAAKwX,gBACLE,GAAG0W,WAAWtB,IAAgB,IAAIrjB,aAAa5I,GAAM4qB,SAAAA,CAAAA,CAAAA;IACxD;EAER;EAED,IAAA,aAAIoD;AACA,WAAO7uB,KAAKgsB;EACf;EAED,IAAA,aAAI0B;AACA,WAAO1tB,KAAKisB;EACf;EAED,IAAA,SAAI/Y;AACA,WAAOlT,KAAKksB;EACf;EAED,IAAA,eAAIgD;AACA,WAAOlvB,KAAKmsB;EACf;EAED,IAAA,mBAAIgC;AACA,WAAOnuB,KAAK8rB;EACf;EAED,IAAA,iBAAqBjrB,IAAAA;AACjBb,SAAK2xB,qBAAqB9wB,EAAAA;EAC7B;EAED,IAAA,eAAIwtB;AACA,WAAOruB,KAAK+rB;EACf;EAED,IAAA,aAAiBlrB,IAAAA;AACbb,SAAK4xB,iBAAiB/wB,EAAAA;EACzB;EAES,mBAAAqX;AACN,WA1d8B;EA2djC;EAES,qBAAAQ;AACN,WA/XgC;EAgYnC;AAAA;ACreL,IAAMmZ,IAAN,MAAMA;EAIF,YAAYC,KAAgB,GAAA;AACxB,QAGIC,IACAra,IACAsa,IACAC,IANApxB,KAAQ,GACRqxB,KAAAA;AAOJlyB,SAAKoZ,aAAcR,CAAAA,OAAAA;AACf,UAAA,EAAMA,cAAmBiT;AACrB,cAAM,IAAIxlB,MAAM,qCAAA;AAGpBxF,MAAAA,KAAQ+X,GAAQe,UAAU,IAAM,GAChCuY,KAAAA,MACAH,KAAgBnZ,IAChBlB,KAAKkB,GAAQzB,SAASO,IAEtBsa,KAAiBta,GAAG2V,mBAAmB0E,GAAcnZ,SAAS,cAAA,GAC9DlB,GAAG6W,UAAUyD,IAAgB,CAAA,GAE7BC,KAAcva,GAAG2V,mBAAmB0E,GAAcnZ,SAAS,WAAA,GAC3DlB,GAAGwW,UAAU+D,IAAapxB,EAAAA;IAAM,GAGpCb,KAAKuZ,SAAS,MAAA;AAAA,UAAAtC;AACLib,MAAAA,MAAAA,EAAoC,UAA1B3L,KAAAwL,GAAclD,eAAAA,WAAYtI,KAAAA,SAAAA,GAAA+E,cACzC5T,GAAGwB,WAAW6Y,GAAcnZ,OAAAA,GAC5B/X,KAAQR,KAAKulB,IAAI/kB,KAAgB,OAARixB,IAAc,CAAA,GACnCjxB,MAAS,MACTqxB,KAAAA,OACAxa,GAAG6W,UAAUyD,IAAgB,CAAA,IAEjCta,GAAGwW,UAAU+D,IAAapxB,EAAAA;IAAM;EAEvC;EAED,UAAA2Y;EAAY;AAAA;AAAA,ICtCH2Y,IDsCG,MCtCHA;EAaT,YAAYC,KAA2C,MAAMC,KAA4C,MAAA;AAVjGryB,SAAAsyB,mBAA4B,IAAI/G;AAWpC,UAAMa,KAA4BgG,MAAkBxkB,SAASW,cAAc,QAAA;AACtE6jB,IAAAA,OACDhG,GAAOmG,MAAMC,UAAU,SACvBpG,GAAOmG,MAAME,YAAY,cACzBrG,GAAOmG,MAAM7iB,QAAQ,QACrB0c,GAAOmG,MAAM3iB,SAAS,QACtBwc,GAAOmG,MAAMG,SAAS,KACtBtG,GAAOmG,MAAMI,UAAU,KACvB/kB,SAAS+E,KAAKigB,YAAYxG,EAAAA,IAE9BA,GAAOmG,MAAMM,aAAa7yB,KAAKsyB,iBAAiB5G,YAAAA,GAChD1rB,KAAK8yB,UAAU1G,IAEfpsB,KAAK+yB,MAAM3G,GAAO4G,WAAW,UAAU,EAAEC,WAAAA,MAAW,CAAA;AAEpD,UAAMC,KAAeb,MAAwB,CAAA;AACxCA,IAAAA,MACDa,GAAa/nB,KAAK,IAAI0mB,GAAAA,GAG1B7xB,KAAKmzB,iBAAiB,IAAItH,EAAc7rB,MAAMkzB,EAAAA;AAC9C,UAAME,KAAW,CAACpzB,KAAKmzB,cAAAA;AAEvBnzB,SAAKiZ,SAAS,MAAA;AACV,YAAMvJ,KAAQ0c,GAAOiH,aACfzjB,KAASwc,GAAOkH;AAClBlH,MAAAA,GAAO1c,UAAUA,MAAS0c,GAAOxc,WAAWA,MAC5C5P,KAAKiQ,QAAQP,IAAOE,EAAAA;IACvB,GAGL5P,KAAKiQ,UAAU,CAACP,IAAeE,OAAAA;AAC3Bwc,MAAAA,GAAO1c,QAAQA,IACf0c,GAAOxc,SAASA,IAChB5P,KAAK+yB,IAAIvC,SAAS,GAAG,GAAGpE,GAAO1c,OAAO0c,GAAOxc,MAAAA;AAC7C,iBAAWgJ,MAAWwa;AAClBxa,QAAAA,GAAQK,OAAAA;IACX,GAGLjZ,KAAKuZ,SAAS,CAACjG,IAAcjD,OAAAA;AACzB,iBAAWuI,MAAWwa;AAClBxa,QAAAA,GAAQW,OAAOjG,IAAOjD,EAAAA;IACzB,GAGLrQ,KAAKwZ,UAAU,MAAA;AACX,iBAAWZ,MAAWwa;AAClBxa,QAAAA,GAAQY,QAAAA;IACX,GAGLxZ,KAAKuzB,aAAc3a,CAAAA,OAAAA;AACfwa,MAAAA,GAASjoB,KAAKyN,EAAAA;IAAQ,GAG1B5Y,KAAKwzB,gBAAiB5a,CAAAA,OAAAA;AAClB,YAAM1H,KAAQkiB,GAASjiB,QAAQyH,EAAAA;AAC/B,UAAI1H,KAAQ;AACR,cAAM,IAAI7K,MAAM,mBAAA;AAEpB+sB,MAAAA,GAAShiB,OAAOF,IAAO,CAAA;IAAE,GAG7BlR,KAAKiZ,OAAAA;EACR;EAED,IAAA,SAAImT;AACA,WAAOpsB,KAAK8yB;EACf;EAED,IAAA,KAAIpb;AACA,WAAO1X,KAAK+yB;EACf;EAED,IAAA,gBAAIhB;AACA,WAAO/xB,KAAKmzB;EACf;EAED,IAAA,kBAAIM;AACA,WAAOzzB,KAAKsyB;EACf;EAED,IAAA,gBAAoBzxB,IAAAA;AAChBb,SAAKsyB,mBAAmBzxB,IACxBb,KAAK8yB,QAAQP,MAAMM,aAAahyB,GAAM6qB,YAAAA;EACzC;AAAA;ACvGL,IAAMgI,IAAN,MAAMA;EAaF,YACIrjB,IACA+b,IACA5f,KAAgB,KAChBmnB,KAAe,KACfC,KAAiB,GACjBC,KAAAA,MACAC,KAAuB,IAAIl0B,KAAAA;AAnB/BI,SAAQ+zB,WAAAA,KACR/zB,KAAQg0B,WAAW,IACnBh0B,KAAOi0B,UAAW,KAClBj0B,KAAOk0B,UAAW,IAClBl0B,KAAUm0B,aAAW,GACrBn0B,KAAQo0B,WAAW,GACnBp0B,KAASq0B,YAAW,GACpBr0B,KAASs0B,YAAW,MACpBt0B,KAAAu0B,kBAAgD,MAAA;IAAA;AAa5C,QAAI5gB,KAASmgB,GAAYpzB,MAAAA,GAErB8zB,KAAgB7gB,GAAOjT,MAAAA,GACvB+zB,KAAejoB,IACfkoB,KAAcf,IACdgB,KAAgBf,IAEhBgB,KAAAA,OACAC,KAAAA,OACAC,KAAW,GACXC,KAAQ,GACRC,KAAQ;AAEZ,UAAMlK,KAAmC,CAAA;AAEzC,QAAImK,KAAAA;AAgBJ5kB,IAAAA,GAAOpM,iBAAiB,iBAdD,MAAA;AACnB,UAAIgxB;AAAkB;AAEtB,YAAMC,KAAgB7kB,GAAO7J,SAAS7D,QAAAA;AACtC8xB,MAAAA,KAAAA,CAAgBS,GAAcp1B,GAC9B40B,KAAAA,CAAeQ,GAAcr1B;AAE7B,YAAMA,KAAIwQ,GAAO9J,SAAS1G,IAAI80B,KAAgBt0B,KAAKiC,IAAImyB,EAAAA,IAAgBp0B,KAAK+B,IAAIsyB,EAAAA,GAC1E50B,KAAIuQ,GAAO9J,SAASzG,IAAI60B,KAAgBt0B,KAAKiC,IAAIoyB,EAAAA,GACjD30B,KAAIsQ,GAAO9J,SAASxG,IAAI40B,KAAgBt0B,KAAK+B,IAAIqyB,EAAAA,IAAgBp0B,KAAK+B,IAAIsyB,EAAAA;AAEhFF,MAAAA,KAAgB,IAAI50B,EAAQC,IAAGC,IAAGC,EAAAA;IAAE,CAAA,GAKxCC,KAAKu0B,kBAAmBY,CAAAA,OAAAA;AACpB,YAAMC,KAAKD,GAAUt1B,IAAIwQ,GAAO9J,SAAS1G,GACnCw1B,KAAKF,GAAUr1B,IAAIuQ,GAAO9J,SAASzG,GACnCw1B,KAAKH,GAAUp1B,IAAIsQ,GAAO9J,SAASxG;AACzC40B,MAAAA,KAAgBt0B,KAAKC,KAAK80B,KAAKA,KAAKC,KAAKA,KAAKC,KAAKA,EAAAA,GACnDZ,KAAcr0B,KAAKyC,MAAMuyB,IAAIh1B,KAAKC,KAAK80B,KAAKA,KAAKE,KAAKA,EAAAA,CAAAA,GACtDb,KAAAA,CAAgBp0B,KAAKyC,MAAMsyB,IAAIE,EAAAA,GAC/Bd,KAAgB,IAAI50B,EAAQu1B,GAAUt1B,GAAGs1B,GAAUr1B,GAAGq1B,GAAUp1B,CAAAA;IAAE;AAGtE,UAAMw1B,KAAkB,MACb,MAAO,OAAOZ,KAAgB30B,KAAKi0B,YAAaj0B,KAAKk0B,UAAUl0B,KAAKi0B,UAGzEuB,KAAazzB,CAAAA,OAAAA;AACf+oB,MAAAA,GAAK/oB,GAAE0zB,IAAAA,IAAAA,MAEQ,cAAX1zB,GAAE0zB,SAAoB3K,GAAW,OAAA,OACtB,gBAAX/oB,GAAE0zB,SAAsB3K,GAAW,OAAA,OACxB,gBAAX/oB,GAAE0zB,SAAsB3K,GAAW,OAAA,OACxB,iBAAX/oB,GAAE0zB,SAAuB3K,GAAW,OAAA;IAAQ,GAG9C4K,KAAW3zB,CAAAA,OAAAA;AACb+oB,MAAAA,GAAK/oB,GAAE0zB,IAAAA,IAAAA,OACQ,cAAX1zB,GAAE0zB,SAAoB3K,GAAW,OAAA,QACtB,gBAAX/oB,GAAE0zB,SAAsB3K,GAAW,OAAA,QACxB,gBAAX/oB,GAAE0zB,SAAsB3K,GAAW,OAAA,QACxB,iBAAX/oB,GAAE0zB,SAAuB3K,GAAW,OAAA;IAAS,GAG/C6K,KAAe5zB,CAAAA,OAAAA;AACjB6zB,MAAAA,GAAe7zB,EAAAA,GAEf6yB,KAAAA,MACAC,KAAuB,MAAb9yB,GAAE8zB,QACZd,KAAQhzB,GAAE+zB,SACVd,KAAQjzB,GAAEg0B,SACVC,OAAO/xB,iBAAiB,WAAWgyB,EAAAA;IAAU,GAG3CA,KAAal0B,CAAAA,OAAAA;AACf6zB,MAAAA,GAAe7zB,EAAAA,GAEf6yB,KAAAA,OACAC,KAAAA,OACAmB,OAAOvxB,oBAAoB,WAAWwxB,EAAAA;IAAU,GAG9CC,KAAen0B,CAAAA,OAAAA;AAGjB,UAFA6zB,GAAe7zB,EAAAA,GAAAA,CAEV6yB,MAAAA,CAAavkB;AAAQ;AAE1B,YAAM+kB,KAAKrzB,GAAE+zB,UAAUf,IACjBM,KAAKtzB,GAAEg0B,UAAUf;AAEvB,UAAIH,IAAS;AACT,cAAMsB,KAAWZ,GAAAA,GACXa,KAAAA,CAAQhB,KAAKp1B,KAAKo0B,WAAW,OAAO+B,IACpCE,KAAAA,CAAQhB,KAAKr1B,KAAKo0B,WAAW,OAAO+B,IACpCjsB,KAAIrB,EAAQsB,uBAAuBkG,GAAO7J,QAAAA,EAAUtG,QACpDo2B,KAAQ,IAAI12B,EAAQsK,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,CAAA,GAClCqsB,KAAK,IAAI32B,EAAQsK,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,CAAA;AACrCsqB,QAAAA,KAAgBA,GAAchwB,IAAI8xB,GAAMx0B,SAASs0B,EAAAA,CAAAA,GACjD5B,KAAgBA,GAAchwB,IAAI+xB,GAAGz0B,SAASu0B,EAAAA,CAAAA;MACjD;AACG5B,QAAAA,MAAgBW,KAAKp1B,KAAKm0B,aAAa,MACvCO,MAAeW,KAAKr1B,KAAKm0B,aAAa,MACtCO,KAAcr0B,KAAKulB,IACfvlB,KAAKylB,IAAI4O,IAAc10B,KAAK+zB,WAAW1zB,KAAK6C,KAAM,GAAA,GACjDlD,KAAKg0B,WAAW3zB,KAAK6C,KAAM,GAAA;AAIpC6xB,MAAAA,KAAQhzB,GAAE+zB,SACVd,KAAQjzB,GAAEg0B;IAAO,GAGfS,KAAWz0B,CAAAA,OAAAA;AACb6zB,MAAAA,GAAe7zB,EAAAA;AAEf,YAAMo0B,KAAWZ,GAAAA;AACjBZ,MAAAA,MAAiB5yB,GAAE00B,SAASz2B,KAAKq0B,YAAY,QAAQ8B,IACrDxB,KAAgBt0B,KAAKulB,IAAIvlB,KAAKylB,IAAI6O,IAAe30B,KAAKi0B,OAAAA,GAAUj0B,KAAKk0B,OAAAA;IAAQ,GAG3EwC,KAAgB30B,CAAAA,OAAAA;AAGlB,UAFA6zB,GAAe7zB,EAAAA,GAEU,MAArBA,GAAE40B,QAAQn2B;AACVo0B,QAAAA,KAAAA,MACAC,KAAAA,OACAE,KAAQhzB,GAAE40B,QAAQ,CAAA,EAAGb,SACrBd,KAAQjzB,GAAE40B,QAAQ,CAAA,EAAGZ,SACrBjB,KAAW;eACiB,MAArB/yB,GAAE40B,QAAQn2B,QAAc;AAC/Bo0B,QAAAA,KAAAA,MACAC,KAAAA,MACAE,MAAShzB,GAAE40B,QAAQ,CAAA,EAAGb,UAAU/zB,GAAE40B,QAAQ,CAAA,EAAGb,WAAW,GACxDd,MAASjzB,GAAE40B,QAAQ,CAAA,EAAGZ,UAAUh0B,GAAE40B,QAAQ,CAAA,EAAGZ,WAAW;AACxD,cAAMa,KAAQ70B,GAAE40B,QAAQ,CAAA,EAAGb,UAAU/zB,GAAE40B,QAAQ,CAAA,EAAGb,SAC5Ce,KAAQ90B,GAAE40B,QAAQ,CAAA,EAAGZ,UAAUh0B,GAAE40B,QAAQ,CAAA,EAAGZ;AAClDjB,QAAAA,KAAWz0B,KAAKC,KAAKs2B,KAAQA,KAAQC,KAAQA,EAAAA;MAChD;IAAA,GAGCC,KAAc/0B,CAAAA,OAAAA;AAChB6zB,MAAAA,GAAe7zB,EAAAA,GAEf6yB,KAAAA,OACAC,KAAAA;IAAe,GAGbkC,KAAeh1B,CAAAA,OAAAA;AAGjB,UAFA6zB,GAAe7zB,EAAAA,GAEV6yB,MAAavkB;AAElB,YAAIwkB,IAAS;AACT,gBAAMsB,KAAWZ,GAAAA,GAEXqB,KAAQ70B,GAAE40B,QAAQ,CAAA,EAAGb,UAAU/zB,GAAE40B,QAAQ,CAAA,EAAGb,SAC5Ce,KAAQ90B,GAAE40B,QAAQ,CAAA,EAAGZ,UAAUh0B,GAAE40B,QAAQ,CAAA,EAAGZ,SAC5CiB,KAAO32B,KAAKC,KAAKs2B,KAAQA,KAAQC,KAAQA,EAAAA;AAE/ClC,UAAAA,OADcG,KAAWkC,MACAh3B,KAAKq0B,YAAY,MAAM8B,IAChDxB,KAAgBt0B,KAAKulB,IAAIvlB,KAAKylB,IAAI6O,IAAe30B,KAAKi0B,OAAAA,GAAUj0B,KAAKk0B,OAAAA,GACrEY,KAAWkC;AAEX,gBAAMC,MAAUl1B,GAAE40B,QAAQ,CAAA,EAAGb,UAAU/zB,GAAE40B,QAAQ,CAAA,EAAGb,WAAW,GACzDoB,MAAUn1B,GAAE40B,QAAQ,CAAA,EAAGZ,UAAUh0B,GAAE40B,QAAQ,CAAA,EAAGZ,WAAW,GACzDX,KAAK6B,KAASlC,IACdM,KAAK6B,KAASlC,IACd9qB,KAAIrB,EAAQsB,uBAAuBkG,GAAO7J,QAAAA,EAAUtG,QACpDo2B,KAAQ,IAAI12B,EAAQsK,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,CAAA,GAClCqsB,KAAK,IAAI32B,EAAQsK,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,CAAA;AACrCsqB,UAAAA,KAAgBA,GAAchwB,IAAI8xB,GAAMx0B,SAAAA,CAAUszB,KAAKp1B,KAAKo0B,WAAW,QAAQ+B,EAAAA,CAAAA,GAC/E3B,KAAgBA,GAAchwB,IAAI+xB,GAAGz0B,SAAAA,CAAUuzB,KAAKr1B,KAAKo0B,WAAW,QAAQ+B,EAAAA,CAAAA,GAC5EpB,KAAQkC,IACRjC,KAAQkC;QACX,OAAM;AACH,gBAAM9B,KAAKrzB,GAAE40B,QAAQ,CAAA,EAAGb,UAAUf,IAC5BM,KAAKtzB,GAAE40B,QAAQ,CAAA,EAAGZ,UAAUf;AAElCP,UAAAA,MAAgBW,KAAKp1B,KAAKm0B,aAAa,MACvCO,MAAeW,KAAKr1B,KAAKm0B,aAAa,MACtCO,KAAcr0B,KAAKulB,IACfvlB,KAAKylB,IAAI4O,IAAc10B,KAAK+zB,WAAW1zB,KAAK6C,KAAM,GAAA,GACjDlD,KAAKg0B,WAAW3zB,KAAK6C,KAAM,GAAA,GAGhC6xB,KAAQhzB,GAAE40B,QAAQ,CAAA,EAAGb,SACrBd,KAAQjzB,GAAE40B,QAAQ,CAAA,EAAGZ;QACxB;IAAA,GAGCoB,KAAO,CAACnxB,IAAWC,IAAW9F,QACxB,IAAIA,MAAK6F,KAAI7F,KAAI8F;AAG7BjG,SAAKmI,SAAS,MAAA;AACV8sB,MAAAA,KAAAA,MAEAzoB,KAAQ2qB,GAAK3qB,IAAOioB,IAAcz0B,KAAKs0B,SAAAA,GACvCX,KAAOwD,GAAKxD,IAAMe,IAAa10B,KAAKs0B,SAAAA,GACpCV,KAASuD,GAAKvD,IAAQe,IAAe30B,KAAKs0B,SAAAA,GAC1C3gB,KAASA,GAAOwjB,KAAK3C,IAAex0B,KAAKs0B,SAAAA;AAEzC,YAAMz0B,KAAI8T,GAAO9T,IAAI+zB,KAASvzB,KAAKiC,IAAIkK,EAAAA,IAASnM,KAAK+B,IAAIuxB,EAAAA,GACnD7zB,KAAI6T,GAAO7T,IAAI8zB,KAASvzB,KAAKiC,IAAIqxB,EAAAA,GACjC5zB,KAAI4T,GAAO5T,IAAI6zB,KAASvzB,KAAK+B,IAAIoK,EAAAA,IAASnM,KAAK+B,IAAIuxB,EAAAA;AACzDtjB,MAAAA,GAAO9J,WAAW,IAAI3G,EAAQC,IAAGC,IAAGC,EAAAA;AAEpC,YAAMq3B,KAAYzjB,GAAO/C,SAASP,GAAO9J,QAAAA,EAAUhG,UAAAA,GAC7C82B,KAAKh3B,KAAK8C,KAAAA,CAAMi0B,GAAUt3B,CAAAA,GAC1Bw3B,KAAKj3B,KAAKyC,MAAMs0B,GAAUv3B,GAAGu3B,GAAUr3B,CAAAA;AAC7CsQ,MAAAA,GAAO7J,WAAW1F,EAAWiV,UAAU,IAAInW,EAAQy3B,IAAIC,IAAI,CAAA,CAAA;AAE3D,YAAMC,KAAY,OACZC,KAAc,MAEdttB,KAAIrB,EAAQsB,uBAAuBkG,GAAO7J,QAAAA,EAAUtG,QACpDwI,KAAU,IAAI9I,EAAAA,CAASsK,GAAE,CAAA,GAAA,CAAKA,GAAE,CAAA,GAAA,CAAKA,GAAE,CAAA,CAAA,GACvCosB,KAAQ,IAAI12B,EAAQsK,GAAE,CAAA,GAAIA,GAAE,CAAA,GAAIA,GAAE,CAAA,CAAA;AAEpC4gB,MAAAA,GAAW,SAAG0J,KAAgBA,GAAchwB,IAAIkE,GAAQ5G,SAASy1B,EAAAA,CAAAA,IACjEzM,GAAW,SAAG0J,KAAgBA,GAAc5jB,SAASlI,GAAQ5G,SAASy1B,EAAAA,CAAAA,IACtEzM,GAAW,SAAG0J,KAAgBA,GAAc5jB,SAAS0lB,GAAMx0B,SAASy1B,EAAAA,CAAAA,IACpEzM,GAAW,SAAG0J,KAAgBA,GAAchwB,IAAI8xB,GAAMx0B,SAASy1B,EAAAA,CAAAA,IAG/DzM,GAAW,SAAG2J,MAAgB+C,KAC9B1M,GAAW,SAAG2J,MAAgB+C,KAG9B1M,GAAW,SAAG4J,MAAe8C,KAC7B1M,GAAW,SAAG4J,MAAe8C,KAEjCvC,KAAAA;IAAwB;AAG5B,UAAMW,KAAkB7zB,CAAAA,OAAAA;AACpBA,MAAAA,GAAE6zB,eAAAA,GACF7zB,GAAE01B,gBAAAA;IAAiB;AAGvBz3B,SAAKwZ,UAAU,MAAA;AACX4S,MAAAA,GAAO3nB,oBAAoB,aAAamxB,EAAAA,GACxCxJ,GAAO3nB,oBAAoB,YAAYmxB,EAAAA,GACvCxJ,GAAO3nB,oBAAoB,aAAamxB,EAAAA,GACxCxJ,GAAO3nB,oBAAoB,eAAemxB,EAAAA,GAE1CxJ,GAAO3nB,oBAAoB,aAAakxB,EAAAA,GACxCvJ,GAAO3nB,oBAAoB,aAAayxB,EAAAA,GACxC9J,GAAO3nB,oBAAoB,SAAS+xB,EAAAA,GAEpCpK,GAAO3nB,oBAAoB,cAAciyB,EAAAA,GACzCtK,GAAO3nB,oBAAoB,YAAYqyB,EAAAA,GACvC1K,GAAO3nB,oBAAoB,aAAasyB,EAAAA,GAEpClD,OACAmC,OAAOvxB,oBAAoB,WAAW+wB,EAAAA,GACtCQ,OAAOvxB,oBAAoB,SAASixB,EAAAA;IACvC,GAGD7B,OACAmC,OAAO/xB,iBAAiB,WAAWuxB,EAAAA,GACnCQ,OAAO/xB,iBAAiB,SAASyxB,EAAAA,IAGrCtJ,GAAOnoB,iBAAiB,aAAa2xB,EAAAA,GACrCxJ,GAAOnoB,iBAAiB,YAAY2xB,EAAAA,GACpCxJ,GAAOnoB,iBAAiB,aAAa2xB,EAAAA,GACrCxJ,GAAOnoB,iBAAiB,eAAe2xB,EAAAA,GAEvCxJ,GAAOnoB,iBAAiB,aAAa0xB,EAAAA,GACrCvJ,GAAOnoB,iBAAiB,aAAaiyB,EAAAA,GACrC9J,GAAOnoB,iBAAiB,SAASuyB,EAAAA,GAEjCpK,GAAOnoB,iBAAiB,cAAcyyB,EAAAA,GACtCtK,GAAOnoB,iBAAiB,YAAY6yB,EAAAA,GACpC1K,GAAOnoB,iBAAiB,aAAa8yB,EAAAA,GAErC/2B,KAAKmI,OAAAA;EACR;AAAA;AChTL,IAAMuvB,IAAN,MAAMA;EAIF,YAAYC,IAAiBC,IAAAA;AACzB53B,SAAK23B,SAASA,IACd33B,KAAK43B,QAAQA;EAChB;EAED,UAAUC,IAAiBT,IAAAA;AACvB,UAAMU,KAAc93B,KAAK23B,OAAOI,IAAIX,EAAAA;AAEpC,QAAI/2B,KAAK2C,IAAI80B,EAAAA,IAAe;AACxB,aAAO;AAGX,UAAM33B,KAAIH,KAAK23B,OAAOI,IAAI/3B,KAAK43B,MAAMhnB,SAASinB,EAAAA,CAAAA,IAAWC;AAEzD,WAAI33B,KAAI,IACG,OAGJ03B,GAAOrzB,IAAI4yB,GAAUt1B,SAAS3B,EAAAA,CAAAA;EACxC;AAAA;ACvBL,IAAM63B,IAAN,MAAMA;EAEF,WAAWpf,IAAAA;EAA0B;EACrC,SAAAW;EAAW;EACX,UAAAC;EAAY;AAAA;ACLhB,IAAII,IAGF,SACOC,KAAY,CAAA,GAAA;AAErB,MAAyBC,IAAoBC,IAAzCC,KAAOH;AAAqDG,EAAAA,GAAc,QAAE,IAAI/F,QAAQ,CAACC,IAAQ+F,OAAAA;AAAUH,IAAAA,KAAoB5F,IAAQ6F,KAAmBE;EAAM,CAAA;AAAG,MAAIE,KAAgBC,OAAOC,OAAO,CAAE,GAACL,EAAAA,GAAuKM,KAAgB;AAAuS,iBAAA,OAAV1M,YAAuBA,SAASqqB,kBAAe3d,KAAgB1M,SAASqqB,cAAcC,MAAsF5d,KAArCA,GAAgB3E,WAAW,OAAA,IAA0B,KAAwB2E,GAAgBG,OAAO,GAAEH,GAAgBI,QAAQ,UAAS,EAAA,EAAIC,YAAY,GAAA,IAAK,CAAA,GAA+iBX,GAAc,SAAGnP,QAAQ6B,IAAIwO,KAAKrQ,OAAAA;AAAS,MAA+QsQ,IAAgcC,IAA3sBC,KAAIrB,GAAiB,YAAGnP,QAAQyN,MAAM4C,KAAKrQ,OAAAA;AAAuhB,WAASyQ,GAAkBC,IAAAA;AAAU,QAAIC,GAAUD,EAAAA;AAAkB,aAA/O,SAA4B9X,IAAAA;AAAgE,iBAAzDgY,KAAQC,KAAKjY,EAAAA,GAAOkY,KAAM,IAAI9R,WAAW4R,GAAQjb,MAAAA,GAAgBuF,KAAE,GAAEA,KAAE0V,GAAQjb,QAAAA,EAASuF;AAAG4V,UAAAA,GAAM5V,EAAAA,IAAG0V,GAAQG,WAAW7V,EAAAA;AAAG,eAAO4V;MAAK,EAAgGJ,GAAS7J,MAAMmK,GAAcrb,MAAAA,CAAAA;EAAQ;AAAlpB4Z,SAAOC,OAAOL,IAAOG,EAAAA,GAAiBA,KAAgB,MAAQH,GAAkB,aAAaA,GAAkB,WAAKA,GAAoB,eAAcA,GAAoB,aAAKA,GAAa,QAAQA,GAAa,MAAoBA,GAAmB,eAAEmB,KAAWnB,GAAmB,aAAyB,YAAA,OAAb8B,eAAuBC,GAAM,iCAAA;AAAiW,MAAmCC,IAAMC,IAAOC,IAAOC,IAAQC,IAAOC,IAAQC,IAAQC,IAAlFC,KAAAA;AAA0F,WAASC,KAAAA;AAAoB,QAAIxW,KAAEmV,GAAWlb;AAAO8Z,IAAAA,GAAc,QAAEgC,KAAM,IAAIU,UAAUzW,EAAAA,GAAG+T,GAAe,SAAEkC,KAAO,IAAIS,WAAW1W,EAAAA,GAAG+T,GAAe,SAAEiC,KAAO,IAAIpS,WAAW5D,EAAAA,GAAG+T,GAAgB,UAAEmC,KAAQ,IAAIS,YAAY3W,EAAAA,GAAG+T,GAAe,SAAEoC,KAAO,IAAIS,WAAW5W,EAAAA,GAAG+T,GAAgB,UAAEqC,KAAQ,IAAIS,YAAY7W,EAAAA,GAAG+T,GAAgB,UAAEsC,KAAQ,IAAI7S,aAAaxD,EAAAA,GAAG+T,GAAgB,UAAEuC,KAAQ,IAAIQ,aAAa9W,EAAAA;EAAE;AAAC,MAAI+W,KAAa,CAAA,GAAOC,KAAW,CAAA,GAAOC,KAAc,CAAA,GAAusBC,KAAgB,GAAoCC,KAAsB;AAA0a,WAASrB,GAAMsB,IAAAA;A3BLv+H;A2BK6+HrD,UAAAA,GAAgB,YAAhBA,wBAAAA,IAAoBqD,KAA+BhC,GAAzBgC,KAAK,aAAWA,KAAK,GAAA,GAAcb,KAAAA,MAAwBa,MAAM;AAA2C,QAAItb,KAAE,IAAI+Z,YAAYwB,aAAaD,EAAAA;AAA4B,UAAtBtD,GAAmBhY,EAAAA,GAASA;EAAC;AAAC,MAAyHwb,IAAz5HC,IAAoyH3B,KAAc,yCAA4CL,KAAUD,CAAAA,OAAUA,GAAS5F,WAAWkG,EAAAA;AAAg0jB,WAAS4B,GAAiBC,IAAAA;AAAY,WAAOzJ,QAAQC,QAAAA,EAAUyJ,KAAK,MAAlU,SAAuBnK,IAAAA;AAAM,UAAGA,MAAM+J,MAAgBpC;AAAY,eAAO,IAAItR,WAAWsR,EAAAA;AAAY,UAAIyC,KAAOtC,GAAkB9H,EAAAA;AAAM,UAAGoK;AAAQ,eAAOA;AAA8C,YAAK;IAAiD,EAAuFF,EAAAA,CAAAA;EAAY;AAAuP,WAASG,GAAiBD,IAAOF,IAAWI,IAAQC,IAAAA;AAAU,WAApT,SAAgCL,IAAWI,IAAQE,IAAAA;AAAU,aAAOP,GAAiBC,EAAAA,EAAYC,KAAKC,CAAAA,OAAQ9B,YAAYmC,YAAYL,IAAOE,EAAAA,CAAAA,EAAUH,KAAKK,IAASE,CAAAA,OAAAA;AAAS7C,QAAAA,GAAI,0CAA0C6C,EAAAA,EAAAA,GAAUnC,GAAMmC,EAAAA;MAAAA,CAAAA;IAAS,EAA6FR,IAAWI,IAAQC,EAAAA;EAAS;AAApxBvC,EAAAA,GAA39iB+B,KAAe,u8iBAAA,MAAv7HC,KAAw7qBD,IAA1BA,KAAr5qBvD,GAAmB,aAAUA,GAAmB,WAAEwD,IAAKlD,EAAAA,IAAwBA,KAAgBkD;AAA2stB,MAAIW,KAAqBC,CAAAA,OAAAA;AAAY,WAAMA,GAAU5d,SAAO;AAAG4d,MAAAA,GAAUC,MAAAA,EAAQrE,EAAAA;EAAO;AAAqBA,EAAAA,GAAsB;AAAQ,MAAwNsE,IAAgNC,IAA3LC,KAAiBC,CAAAA,OAAAA;AAA2B,aAAjBC,KAAI,IAAOC,KAAEF,IAAUxC,GAAO0C,EAAAA;AAAID,MAAAA,MAAKJ,GAAiBrC,GAAO0C,IAAAA,CAAAA;AAAM,WAAOD;EAAAA,GAASE,IAAqB,CAAE,GAAKC,IAAgB,CAAE,GAA8CC,IAAkBC,CAAAA,OAAAA;AAAU,UAAM,IAAIR,GAAaQ,EAAAA;EAAO;AAA8lB,WAASC,EAAaC,IAAQC,IAAmBC,KAAQ,CAAA,GAAA;AAAI,QAAA,EAAK,oBAAmBD;AAAqB,YAAM,IAAIE,UAAU,yDAAA;AAA2D,WAAlwB,SAA4BH,IAAQC,IAAmBC,KAAQ,CAAE,GAAA;AAAE,UAAIzR,KAAKwR,GAAmBxR;AAAkG,UAAzFuR,MAASH,EAAkB,SAASpR,EAAAA,+CAAAA,GAAwDmR,EAAgBQ,eAAeJ,EAAAA,GAAS;AAAC,YAAGE,GAAQG;AAA8B;AAAYR,UAAkB,yBAAyBpR,EAAAA,SAAAA;MAAe;AAA8E,UAA7EmR,EAAgBI,EAAAA,IAASC,IAAuDN,EAAqBS,eAAeJ,EAAAA,GAAS;AAAC,YAAIb,KAAUQ,EAAqBK,EAAAA;AAAAA,eAAgBL,EAAqBK,EAAAA,GAASb,GAAU7H,QAAQgJ,CAAAA,OAAIA,GAAAA,CAAAA;MAAK;IAAC,EAAoNN,IAAQC,IAAmBC,EAAAA;EAAQ;AAAC,MAA8ZK,IAAe,CAAA,GAAOC,IAAc,CAAA,GAA6IC,IAAoB,MAAID,EAAcjf,SAAO,IAAE,IAAEgf,EAAehf,QAA4Imf,IAAeC,CAAAA,QAAaA,MAAQd,EAAkB,sCAAoCc,EAAAA,GAAeH,EAAcG,EAAAA,IAAvHD,IAAyI9e,CAAAA,OAAAA;AAAQ,YAAOA,IAAAA;MAAO,KAAA;AAAe,eAAO;MAAE,KAAK;AAAK,eAAO;MAAE,KAAA;AAAU,eAAO;MAAE,KAAA;AAAW,eAAO;MAAE,SAAQ;AAAC,cAAM+e,KAAOJ,EAAeK,IAAAA,KAAOJ,EAAcjf;AAA6D,eAAtDif,EAAcG,EAAAA,IAAQ/e,IAAM4e,EAAcG,KAAO,CAAA,IAAG,GAASA;MAAM;IAAA;EAAC;AAAI,WAASE,EAAYC,IAAAA;AAAS,WAAO/f,KAAmB,aAAEqc,GAAQ0D,MAAS,CAAA,CAAA;EAAG;AAAC,MAAIC,IAAU,EAACtS,MAAK,mBAAkBuS,cAAeL,CAAAA,OAAAA;AAAS,QAAIM,KAAGP,EAAcC,EAAAA;AAA+B,YAA93BA,CAAAA,OAAAA;AAAYA,MAAAA,KAAO,KAAG,KAAA,EAAMH,EAAcG,KAAO,CAAA,MAAIH,EAAcG,EAAAA,IAAAA,QAAkBJ,EAAerU,KAAKyU,EAAAA;IAAO,GAAswBA,EAAAA,GAAeM;EAAAA,GAAIC,YAAa,CAACC,IAAYvf,OAAQ8e,EAAe9e,EAAAA,GAAOwf,gBAAj4C,GAAs6CC,sBAAuBR,GAAYS,oBAAmB,KAAA,GAA+EC,IAA0B,CAAC9S,IAAKgC,OAAAA;AAAS,YAAOA,IAAAA;MAAO,KAAK;AAAE,eAAO,SAASqQ,IAAAA;AAAS,iBAAO/f,KAAmB,aAAEsc,GAAQyD,MAAS,CAAA,CAAA;QAAG;MAAE,KAAK;AAAE,eAAO,SAASA,IAAAA;AAAS,iBAAO/f,KAAmB,aAAEuc,GAAQwD,MAAS,CAAA,CAAA;QAAG;MAAE;AAAQ,cAAM,IAAIX,UAAU,wBAAwB1P,EAAAA,MAAWhC,EAAAA,EAAAA;IAAAA;EAAO,GAAqT+S,IAA4B,CAAC/S,IAAKgC,IAAMgR,OAAAA;AAAU,YAAOhR,IAAAA;MAAO,KAAK;AAAE,eAAOgR,KAAOX,CAAAA,OAAS/D,GAAM+D,EAAAA,IAASA,CAAAA,OAAS9D,GAAO8D,EAAAA;MAAS,KAAK;AAAE,eAAOW,KAAOX,CAAAA,OAAS7D,GAAO6D,MAAS,CAAA,IAAGA,CAAAA,OAAS5D,GAAQ4D,MAAS,CAAA;MAAG,KAAK;AAAE,eAAOW,KAAOX,CAAAA,OAAS3D,GAAO2D,MAAS,CAAA,IAAGA,CAAAA,OAAS1D,GAAQ0D,MAAS,CAAA;MAAG;AAAQ,cAAM,IAAIX,UAAU,0BAA0B1P,EAAAA,MAAWhC,EAAAA,EAAAA;IAAAA;EAAO,GAAyzEiT,IAAgC,eAAA,OAAblM,cAAyB,IAAIA,YAAY,MAAA,IAAA,QAA0uBmM,IAAa,CAACnC,IAAIoC,OAAiBpC,MAAruB,CAACqC,IAAYC,IAAIF,OAAAA;AAA+D,aAAzCG,KAAOD,KAAIF,IAAmBI,KAAOF,IAAUD,GAAYG,EAAAA,KAAAA,EAAWA,MAAQD;AAAAA,QAAUC;AAAO,QAAGA,KAAOF,KAAI,MAAID,GAAY5gB,UAAQygB;AAAa,aAAOA,EAAYjM,OAAOoM,GAAYI,SAASH,IAAIE,EAAAA,CAAAA;AAAoB,aAAPE,KAAI,IAASJ,KAAIE,MAAO;AAAC,UAAIG,KAAGN,GAAYC,IAAAA;AAAO,UAAQ,MAAHK,IAAL;AAAoD,YAAIC,KAAsB,KAAnBP,GAAYC,IAAAA;AAAU,YAAa,QAAN,MAAHK,KAAJ;AAAmE,cAAIE,KAAsB,KAAnBR,GAAYC,IAAAA;AAA0G,eAA9EK,KAAL,QAAN,MAAHA,OAAqB,KAAHA,OAAQ,KAAGC,MAAI,IAAEC,MAAe,IAAHF,OAAO,KAAGC,MAAI,KAAGC,MAAI,IAAqB,KAAnBR,GAAYC,IAAAA,KAAgB;AAAOI,YAAAA,MAAKI,OAAOC,aAAaJ,EAAAA;eAAQ;AAAC,gBAAIK,KAAGL,KAAG;AAAMD,YAAAA,MAAKI,OAAOC,aAAa,QAAMC,MAAI,IAAG,QAAS,OAAHA,EAAAA;UAAQ;QAAjP;AAAhDN,UAAAA,MAAKI,OAAOC,cAAiB,KAAHJ,OAAQ,IAAEC,EAAAA;MAApF;AAArCF,QAAAA,MAAKI,OAAOC,aAAaJ,EAAAA;IAA8V;AAAC,WAAOD;EAAAA,GAAkElF,IAAOwC,IAAIoC,EAAAA,IAAgB,IAA6tDa,IAAiC,eAAA,OAAbjN,cAAyB,IAAIA,YAAY,UAAA,IAAA,QAA0BkN,IAAc,CAAClD,IAAIoC,OAAAA;AAAmF,aAA7DI,KAAOxC,IAAQsC,KAAIE,MAAQ,GAAMW,KAAOb,KAAIF,KAAe,GAAA,EAAUE,MAAKa,OAASzF,GAAQ4E,EAAAA;AAAAA,QAAOA;AAAkB,SAAdE,KAAOF,MAAK,KAAYtC,KAAI,MAAIiD;AAAa,aAAOA,EAAahN,OAAOuH,GAAOiF,SAASzC,IAAIwC,EAAAA,CAAAA;AAAoB,aAAPE,KAAI,IAAWpb,KAAE,GAAA,EAAIA,MAAG8a,KAAe,IAAA,EAAK9a,IAAE;AAAC,UAAI8b,KAAS3F,GAAOuC,KAAM,IAAF1Y,MAAK,CAAA;AAAG,UAAa,KAAV8b;AAAY;AAAMV,MAAAA,MAAKI,OAAOC,aAAaK,EAAAA;IAAS;AAAC,WAAOV;EAAAA,GAASW,IAAc,CAACX,IAAIY,IAAOC,OAAAA;AAAgD,QAA7BA,YAAkB,aAAcA,KAAgB;AAAE,aAAO;AAAuH,aAA9FC,KAASF,IAAWG,MAA3CF,MAAiB,KAAqE,IAAXb,GAAI3gB,SAASwhB,KAAgB,IAAEb,GAAI3gB,QAAeuF,KAAE,GAAEA,KAAEmc,IAAAA,EAAkBnc,IAAE;AAAC,UAAI8b,KAASV,GAAIvF,WAAW7V,EAAAA;AAAGmW,MAAAA,GAAO6F,MAAQ,CAAA,IAAGF,IAASE,MAAQ;IAAC;AAAqB,WAApB7F,GAAO6F,MAAQ,CAAA,IAAG,GAASA,KAAOE;EAAAA,GAAcE,KAAiBhB,CAAAA,OAAgB,IAAXA,GAAI3gB,QAAa4hB,KAAc,CAAC3D,IAAIoC,OAAAA;AAAqC,aAAf9a,KAAE,GAAMob,KAAI,IAAA,EAAWpb,MAAG8a,KAAe,MAAG;AAAC,UAAIwB,KAAMjG,GAAOqC,KAAM,IAAF1Y,MAAK,CAAA;AAAG,UAAU,KAAPsc;AAAS;AAAU,UAAA,EAAFtc,IAAKsc,MAAO,OAAM;AAAC,YAAIZ,KAAGY,KAAM;AAAMlB,QAAAA,MAAKI,OAAOC,aAAa,QAAMC,MAAI,IAAG,QAAS,OAAHA,EAAAA;MAAQ;AAAMN,QAAAA,MAAKI,OAAOC,aAAaa,EAAAA;IAAO;AAAC,WAAOlB;EAAAA,GAASmB,KAAc,CAACnB,IAAIY,IAAOC,OAAAA;AAAgD,QAA7BA,YAAkB,aAAcA,KAAgB;AAAE,aAAO;AAA4D,aAAtDC,KAASF,IAAWd,KAAOgB,KAASD,KAAgB,GAAUjc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,UAAI8b,KAASV,GAAIvF,WAAW7V,EAAAA;AAA6K,UAAvK8b,MAAU,SAAOA,MAAU,UAA8CA,KAAS,UAAiB,OAATA,OAAgB,MAAmB,OAAxEV,GAAIvF,WAAAA,EAAa7V,EAAAA,IAA4DqW,GAAO2F,MAAQ,CAAA,IAAGF,KAASE,MAAQ,KAAY,IAAEd;AAAO;IAAK;AAAqB,WAApB7E,GAAO2F,MAAQ,CAAA,IAAG,GAASA,KAAOE;EAAAA,GAAcM,KAAiBpB,CAAAA,OAAAA;AAAgB,aAANqB,KAAI,GAAUzc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,UAAI8b,KAASV,GAAIvF,WAAW7V,EAAAA;AAAM8b,MAAAA,MAAU,SAAOA,MAAU,SAAA,EAAQ9b,IAAEyc,MAAK;IAAC;AAAC,WAAOA;EAAAA,GAAwlDC,KAAWC,CAAAA,OAAAA;AAAO,QAA4BC,MAAOD,KAA7BtH,GAAWlb,OAAyB6K,aAAW,SAAO;AAAM,QAAA;AAA+C,aAA3CqQ,GAAWwH,KAAKD,EAAAA,GAAOlG,GAAAA,GAA2B;IAAC,SAAO1a,IAAAA;IAAAA;EAAAA;AAA7lY,GAAA,MAAA;AAA8B,aAArB8gB,KAAM,IAAIC,MAAM,GAAA,GAAa/c,KAAE,GAAEA,KAAE,KAAA,EAAMA;AAAG8c,MAAAA,GAAM9c,EAAAA,IAAGwb,OAAOC,aAAazb,EAAAA;AAAGuY,IAAAA,KAAiBuE;EAAA,GAA+hZE,GAAwBxE,KAAavE,GAAqB,eAAE,cAA2B3T,MAAAA;IAAM,YAAY0Y,IAAAA;AAASxX,YAAMwX,EAAAA,GAAS/e,KAAK0N,OAAK;IAAc;EAAA,GAAiBsM,GAAsB,gBAAE,cAA4B3T,MAAAA;IAAM,YAAY0Y,IAAAA;AAASxX,YAAMwX,EAAAA,GAAS/e,KAAK0N,OAAK;IAAe;EAAA,GAA3hW+R,EAActU,KAAK,GAAE,GAAA,QAAY,GAAE,MAAK,GAAA,MAAO,GAAA,OAAQ,CAAA,GAAG6O,GAA4B,sBAAE0F;AAAm9V,MAAIsD,KAAY,EAACC,GAAjha,CAACC,IAAcxV,IAAKgV,IAAKS,IAASC,OAAAA;EAAlC,GAA4iard,GAA5sX,CAACkZ,IAAQvR,IAAK2V,IAAUC,OAAAA;AAA0CtE,MAAaC,IAAQ,EAACvR,MAAlDA,KAAK8Q,GAAiB9Q,EAAAA,GAAsCuS,cAAe,SAASsD,IAAAA;AAAI,aAAA,CAAA,CAAQA;IAAE,GAAEpD,YAAa,SAASC,IAAYoD,IAAAA;AAAG,aAAOA,KAAEH,KAAUC;IAAU,GAAEjD,gBAA3O,GAAgRC,sBAAuB,SAASP,IAAAA;AAAS,aAAO/f,KAAmB,aAAEic,GAAO8D,EAAAA,CAAAA;IAAS,GAAEQ,oBAAmB,KAAA,CAAA;EAAK,GAAm4WkD,GAApwUxE,CAAAA,OAASD,EAAaC,IAAQe,CAAAA,GAAgwUje,GAAj7T,CAACkd,IAAQvR,IAAKgV,OAAAA;AAAoC1D,MAAaC,IAAQ,EAACvR,MAAlDA,KAAK8Q,GAAiB9Q,EAAAA,GAAsCuS,cAAepf,CAAAA,OAAOA,IAAMsf,YAAa,CAACC,IAAYvf,OAAQA,IAAMwf,gBAAjgE,GAAsiEC,sBAAuBE,EAA0B9S,IAAKgV,EAAAA,GAAMnC,oBAAmB,KAAA,CAAA;EAAM,GAA2rTta,GAA1yS,CAACid,IAAcxV,IAAKgV,IAAKS,IAASC,OAAAA;AAAY1V,IAAAA,KAAK8Q,GAAiB9Q,EAAAA;AAA4C,QAAIuS,KAAapf,CAAAA,OAAOA;AAAM,QAAc,MAAXsiB,IAAa;AAAC,UAAIO,KAAS,KAAG,IAAEhB;AAAKzC,MAAAA,KAAapf,CAAAA,OAAOA,MAAO6iB,OAAWA;IAAQ;AAAC,QAAIC,KAAejW,GAAKkW,SAAS,UAAA;AAA8Q5E,MAAakE,IAAc,EAACxV,MAAKA,IAAKuS,cAAeA,IAAaE,YAAvQwD,KAA2B,SAASvD,IAAYvf,IAAAA;AAAwC,aAAXb,KAAK0N,MAAa7M,OAAQ;IAAC,IAAkB,SAASuf,IAAYvf,IAAAA;AAAwC,aAAXb,KAAK0N,MAAa7M;IAAK,GAA4Fwf,gBAA1nG,GAA+pGC,sBAAuBG,EAA4B/S,IAAKgV,IAAgB,MAAXS,EAAAA,GAAc5C,oBAAmB,KAAA,CAAA;EAAK,GAAglRva,GAA3iR,CAACiZ,IAAQ4E,IAAcnW,OAAAA;AAAQ,QAAmHoW,KAAnG,CAACpH,WAAU7S,YAAW8S,YAAWC,aAAYC,YAAWC,aAAYrT,cAAasT,YAAAA,EAAiC8G,EAAAA;AAAe,aAASE,GAAiBnE,IAAAA;AAAQ,UAAI8C,KAAKrG,GAAQuD,MAAQ,CAAA,GAAOrV,KAAK8R,GAAQuD,KAAO,KAAG,CAAA;AAAG,aAAO,IAAIkE,GAAG9H,GAAM9b,QAAOqK,IAAKmY,EAAAA;IAAK;AAA6B1D,MAAaC,IAAQ,EAACvR,MAAlDA,KAAK8Q,GAAiB9Q,EAAAA,GAAsCuS,cAAe8D,IAAiB1D,gBAArrH,GAA0tHC,sBAAuByD,GAAAA,GAAkB,EAACzE,8BAAAA,KAA6B,CAAA;EAAA,GAAilQrI,GAAhrM,CAACgI,IAAQvR,OAAAA;AAAoC,QAAIsW,KAAuB,mBAAvDtW,KAAK8Q,GAAiB9Q,EAAAA;AAA+CsR,MAAaC,IAAQ,EAACvR,MAAKA,IAAK,aAAe7M,IAAAA;AAAO,UAAqDsgB,IAAjD3gB,KAAO6b,GAAQxb,MAAO,CAAA,GAAOojB,KAAQpjB,KAAM;AAAU,UAAGmjB;AAA4C,iBAAvBE,KAAeD,IAAgBle,KAAE,GAAEA,MAAGvF,IAAAA,EAASuF,IAAE;AAAC,cAAIoe,KAAeF,KAAQle;AAAE,cAAGA,MAAGvF,MAAgC,KAAxByb,GAAOkI,EAAAA,GAAmB;AAAC,gBAA8CC,KAAcxD,EAAasD,IAA7DC,KAAeD,EAAAA;AAAAA,uBAAyE/C,KAAiBA,KAAIiD,MAAmBjD,MAAKI,OAAOC,aAAa,CAAA,GAAGL,MAAKiD,KAAcF,KAAeC,KAAe;UAAC;QAAC;WAAM;AAAC,YAAIne,KAAE,IAAI8c,MAAMtiB,EAAAA;AAAQ,aAAQuF,KAAE,GAAEA,KAAEvF,IAAAA,EAASuF;AAAGC,UAAAA,GAAED,EAAAA,IAAGwb,OAAOC,aAAavF,GAAOgI,KAAQle,EAAAA,CAAAA;AAAIob,QAAAA,KAAInb,GAAEpF,KAAK,EAAA;MAAG;AAAc,aAAbyjB,GAAMxjB,EAAAA,GAAcsgB;IAAG,GAAE,WAAaf,IAAYvf,IAAAA;AAAoE,UAAIL;AAA9DK,MAAAA,cAAiB+K,gBAAa/K,KAAM,IAAIgJ,WAAWhJ,EAAAA;AAAkB,UAAIyjB,KAAkC,YAAA,OAAPzjB;AAAqByjB,MAAAA,MAAqBzjB,cAAiBgJ,cAAYhJ,cAAiBoV,qBAAmBpV,cAAiB6b,aAAYoC,EAAkB,uCAAA,GAAkFte,KAAtCwjB,MAAiBM,MAA5mEnD,CAAAA,OAAAA;AAAgB,iBAANqB,KAAI,GAAUzc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,cAAI4Y,KAAEwC,GAAIvF,WAAW7V,EAAAA;AAAM4Y,UAAAA,MAAG,MAAK6D,OAAc7D,MAAG,OAAM6D,MAAK,IAAU7D,MAAG,SAAOA,MAAG,SAAO6D,MAAK,GAAA,EAAIzc,MAAOyc,MAAK;QAAE;AAAC,eAAOA;MAAAA,GAA8+D3hB,EAAAA,IAAmBA,GAAML;AAAO,UAAI+jB,KAAKC,GAAQ,IAAEhkB,KAAO,CAAA,GAAOie,KAAI8F,KAAK;AAA0B,UAAxBlI,GAAQkI,MAAM,CAAA,IAAG/jB,IAAUwjB,MAAiBM;AAAlkG,SAAA,CAACnD,IAAIsD,IAAKC,IAAO1C,OAAAA;AAAmB,cAAA,EAAKA,KAAgB;AAAG,mBAAO;AAA0D,mBAAhChB,KAAO0D,KAAO1C,KAAgB,GAAUjc,KAAE,GAAEA,KAAEob,GAAI3gB,QAAAA,EAASuF,IAAE;AAAC,gBAAI4e,KAAExD,GAAIvF,WAAW7V,EAAAA;AAAoF,gBAA9E4e,MAAG,SAAOA,MAAG,UAAkCA,KAAE,UAAU,OAAFA,OAAS,MAAO,OAA9CxD,GAAIvF,WAAAA,EAAa7V,EAAAA,IAAqC4e,MAAG,KAAI;AAAC,kBAAGD,MAAQ1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAUC;YAAC,WAASA,MAAG,MAAK;AAAC,kBAAGD,KAAO,KAAG1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAU,MAAIC,MAAG,GAAEF,GAAKC,IAAAA,IAAU,MAAM,KAAFC;YAAI,WAASA,MAAG,OAAM;AAAC,kBAAGD,KAAO,KAAG1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAGF,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAE,IAAGF,GAAKC,IAAAA,IAAU,MAAM,KAAFC;YAAI,OAAK;AAAC,kBAAGD,KAAO,KAAG1D;AAAO;AAAMyD,cAAAA,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAGF,GAAKC,IAAAA,IAAU,MAAIC,MAAG,KAAG,IAAGF,GAAKC,IAAAA,IAAU,MAAIC,MAAG,IAAE,IAAGF,GAAKC,IAAAA,IAAU,MAAM,KAAFC;YAAI;UAAC;AAACF,UAAAA,GAAKC,EAAAA,IAAQ;QAAgBE,GAAo7E/jB,IAAr2Eob,IAA22EwC,IAAIje,KAAO,CAAA;eAAW8jB;AAAqB,iBAAQve,KAAE,GAAEA,KAAEvF,IAAAA,EAASuF,IAAE;AAAC,cAAI8e,KAAShkB,GAAM+a,WAAW7V,EAAAA;AAAM8e,UAAAA,KAAS,QAAKR,GAAM5F,EAAAA,GAAKK,EAAkB,wDAAA,IAA0D7C,GAAOwC,KAAI1Y,EAAAA,IAAG8e;QAAQ;;AAAO,aAAQ9e,KAAE,GAAEA,KAAEvF,IAAAA,EAASuF;AAAGkW,UAAAA,GAAOwC,KAAI1Y,EAAAA,IAAGlF,GAAMkF,EAAAA;AAAyD,aAAnC,SAAdqa,MAAoBA,GAAYjV,KAAKkZ,IAAME,EAAAA,GAAaA;IAAI,GAAElE,gBAAxwO,GAA6yOC,sBAAuBR,GAAY,mBAAmBrB,IAAAA;AAAK4F,SAAM5F,EAAAA;IAAI,EAAA,CAAA;EAAG,GAA4hJE,GAAhvF,CAACM,IAAQ6F,IAASpX,OAAAA;AAAoC,QAAIqX,IAAaC,IAAaC,IAAWC;AAArExX,IAAAA,KAAK8Q,GAAiB9Q,EAAAA,GAA4E,MAAXoX,MAAcC,KAAapD,GAAcqD,KAAalD,GAAcoD,KAAe/C,IAAiB8C,KAAWlF,CAAAA,OAAS5D,GAAQ4D,MAAS,CAAA,KAAsB,MAAX+E,OAAcC,KAAa3C,IAAc4C,KAAa1C,IAAc4C,KAAe3C,IAAiB0C,KAAWlF,CAAAA,OAAS1D,GAAQ0D,MAAS,CAAA,IAAGf,EAAaC,IAAQ,EAACvR,MAAKA,IAAKuS,cAAepf,CAAAA,OAAAA;AAAwE,eAA/BsgB,IAA7B3gB,KAAO6b,GAAQxb,MAAO,CAAA,GAAeqjB,KAAerjB,KAAM,GAAUkF,KAAE,GAAEA,MAAGvF,IAAAA,EAASuF,IAAE;AAAC,YAAIoe,KAAetjB,KAAM,IAAEkF,KAAE+e;AAAS,YAAG/e,MAAGvF,MAAoC,KAA5BykB,GAAWd,EAAAA,GAAmB;AAAC,cAAmDC,KAAcW,GAAab,IAA7DC,KAAeD,EAAAA;AAAAA,qBAA8E/C,KAAiBA,KAAIiD,MAAmBjD,MAAKI,OAAOC,aAAa,CAAA,GAAGL,MAAKiD,KAAcF,KAAeC,KAAeW;QAAQ;MAAC;AAAc,aAAbT,GAAMxjB,EAAAA,GAAcsgB;IAAAA,GAAKhB,YAAa,CAACC,IAAYvf,OAAAA;AAA4B,kBAAA,OAAPA,MAAkBie,EAAkB,6CAA6CpR,EAAAA,EAAAA;AAAQ,UAAIlN,KAAO0kB,GAAerkB,EAAAA,GAAW4d,KAAI+F,GAAQ,IAAEhkB,KAAOskB,EAAAA;AAAuI,aAA7HzI,GAAQoC,MAAK,CAAA,IAAGje,KAAOskB,IAASE,GAAankB,IAAM4d,KAAI,GAAEje,KAAOskB,EAAAA,GAA2B,SAAd1E,MAAoBA,GAAYjV,KAAKkZ,IAAM5F,EAAAA,GAAYA;IAAAA,GAAK4B,gBAAl3U,GAAu5UC,sBAAuBR,GAAY,mBAAmBrB,IAAAA;AAAK4F,SAAM5F,EAAAA;IAAI,EAAA,CAAA;EAAE,GAAm9C0G,GAAr7C,CAAClG,IAAQvR,OAAAA;AAAoCsR,MAAaC,IAAQ,EAACmG,QAAAA,MAAY1X,MAA9DA,KAAK8Q,GAAiB9Q,EAAAA,GAAkD2S,gBAAiB,GAAEJ,cAAe,MAAA;IAAa,GAACE,YAAa,CAACC,IAAYoD,OAAAA;IAAa,EAAA,CAAA;EAAE,GAA4xC6B,GAApkCC,CAAAA,OAAAA;AAAgB,QAAIC,KAAQtJ,GAAOzb,QAA8BglB,KAApQ;AAA6R,SAAhDF,QAAiB,KAAgDE;AAAa,aAAA;AAAwE,aAA9C3lB,IAAE4lB,IAAoDC,KAAQ,GAAEA,MAAS,GAAEA,MAAS,GAAE;AAAC,UAAIC,KAAkBJ,MAAS,IAAE,MAAGG;AAASC,MAAAA,KAAkBtlB,KAAKulB,IAAID,IAAkBL,KAAc,SAAA;AAAW,UAAIO,KAAQxlB,KAAKulB,IAAIJ,KAA/N3lB,KAAmPQ,KAAKylB,IAAIR,IAAcK,EAAAA,OAAxQF,KAA2R,SAApQ5lB,KAAE4lB,MAAUA,EAAAA;AAAoS,UAApBhD,GAAWoD,EAAAA;AAAyB,eAAA;IAAY;AAAC,WAAA;EAAO,EAAA,GAAomBE,KAA/mc,WAAA;A3BLljtB;A2BKwktB,QAAIC,KAAK,EAAChgB,GAAIgd,GAAAA;AAAa,aAASiD,GAAgBC,IAASC,IAAAA;AAAvwmB,UAAmB5G;AAA64mB,aAAjJwG,KAAYG,GAASE,SAAQhL,KAAW2K,GAAe,GAAEtJ,GAAAA,GAArzmB8C,KAAm1mBwG,GAAe,GAA91mB9I,GAAWoJ,QAAQ9G,EAAAA,GAA+O,SAA6B+G,IAAAA;A3BLprH,YAAAC;A2BK8vH,YAAtEpJ,OAAkBnD,MAAAA,GAA+B,2BAA/BA,gBAAAA,IAAAA,KAAAA,IAAmCmD,KAAqC,KAAjBA,MAAqHC,IAAsB;AAAC,cAAIW,KAASX;AAAsBA,UAAAA,KAAsB,MAAKW,GAAAA;QAAU;MAAE,EAA+xlByI,GAA+CT;IAAW;AAAsH,QAAr1mB5I,OAAkBnD,KAAAA,GAA+B,2BAA/BA,wBAAAA,IAAmCmD,KAAmymBnD,GAAwB;AAAG,UAAA;AAAI,eAAOA,GAAwB,gBAAEgM,IAAKC,EAAAA;MAAgB,SAAOlkB,IAAAA;AAAGsZ,QAAAA,GAAI,sDAAsDtZ,EAAAA,EAAAA,GAAKgY,GAAmBhY,EAAAA;MAAE;AAAwG,WAAtG8b,GAAiB1C,GAAWoC,IAAeyI,IAAnT,SAAoCpS,IAAAA;AAAQqS,MAAAA,GAAgBrS,GAAiB,QAAA;IAAE,CAAA,EAAqQ6S,MAAM1M,EAAAA,GAA0B,CAAA;EAAE,EAAi+a2M;AAA8F1M,EAAAA,GAAkB,YAAE,CAAC2M,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAI8Q,IAAIC,QAAiBpe,GAAkB,YAAE+L,GAAe,GAAGY,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAGC,IAAI8Q,IAAIC,EAAAA;AAAK,MAAmQ9Q,IAA/P9C,KAAQxK,GAAgB,UAAE2M,CAAAA,QAAKnC,KAAQxK,GAAgB,UAAE+L,GAAe,GAAGY,EAAAA,GAAQtC,KAAMrK,GAAc,QAAE2M,CAAAA,QAAKtC,KAAMrK,GAAc,QAAE+L,GAAe,GAAGY,EAAAA;AAAiO,WAASY,KAAAA;AAAyE,aAASC,KAAAA;AAAWF,aAAiBA,KAAAA,MAAetN,GAAkB,YAAA,MAAUwC,OAA93kC2B,GAAqBlB,EAAAA,GAAo4kCnD,GAAoBE,EAAAA,GAAWA,GAA6B,wBAAEA,GAA6B,qBAAA,GAAn9kC,WAAA;AAAmB,YAAGA,GAAgB;AAAiF,eAAjD,cAAA,OAAnBA,GAAgB,YAAcA,GAAgB,UAAE,CAACA,GAAgB,OAAA,IAASA,GAAgB,QAAExZ;AAA2M+e,YAAAA,KAAtLvF,GAAgB,QAAEqE,MAAAA,GAAwKnB,GAAcmJ,QAAQ9G,EAAAA;AAAhD,YAAsBA;AAA1JpB,QAAAA,GAAqBjB,EAAAA;MAAc,EAAovkCuK;IAAS;AAAnRtK,IAAAA,KAAgB,MAAxglC,WAAA;AAAkB,UAAGnD,GAAe;AAA8E,aAA/C,cAAA,OAAlBA,GAAe,WAAcA,GAAe,SAAE,CAACA,GAAe,MAAA,IAASA,GAAe,OAAExZ;AAA2Z+e,UAAAA,KAAvYvF,GAAe,OAAEqE,MAAAA,GAA0XrB,GAAaqJ,QAAQ9G,EAAAA;AAA9C,UAAqBA;AAA5WpB,MAAAA,GAAqBnB,EAAAA;IAAa,EAAwzkC0K,GAAYvK,KAAgB,MAAiOnD,GAAkB,aAAGA,GAAkB,UAAE,YAAA,GAAc2N,WAAW,WAAA;AAAWA,iBAAW,WAAA;AAAW3N,QAAAA,GAAkB,UAAE,EAAA;MAAG,GAAE,CAAA,GAAGwN,GAAAA;IAAO,GAAE,CAAA,KAAQA,GAAAA;EAAQ;AAAC,MAAhjBpK,KAAsB,SAASwK,KAAAA;AAAgBN,UAAUC,GAAAA,GAAUD,OAAUlK,KAAsBwK;EAAS,GAAuc5N,GAAgB;AAAiF,SAAjD,cAAA,OAAnBA,GAAgB,YAAcA,GAAgB,UAAE,CAACA,GAAgB,OAAA,IAASA,GAAgB,QAAExZ,SAAO;AAAGwZ,MAAAA,GAAgB,QAAE6F,IAAAA,EAAlB7F;AAGz2rC,SAHo4rCuN,GAAAA,GAG73rC1N,GAAUgO;AAEnB;ACPA,IAAMwQ,IAAN,MAAMA;EAGF,YAAYtG,IAAAA;AAER,QAAI9I;AAEarX,KAAAA,YAAAA;AACbqX,MAAAA,KAAAA,MAAmBrP,EAAAA;IAAU,GAGjC0P;AAEA,QAGIgP,IACAC,IACAC,IACA/O,IACAC,IACAC,IACA8O,IACAC,IACAC,IACAC,IACAC,IAbAC,KAA+B,GAC/BC,KAAkC;AAwDtC/4B,SAAKg5B,YAAY,CAACn5B,IAAWC,OAAAA;AACzB,UAAA,CAAKmpB;AACD,cAAM,IAAI5iB,MAAM,wBAAA;AAGpB,UAAA,CAAK0rB,GAAc1hB;AACf,cAAM,IAAIhK,MAAM,gBAAA;AAGpB,UAAA,CAAK0rB,GAAclD,cAAAA,CAAekD,GAAcrE,cAAAA,CAAeqE,GAAc7e;AACzE,eAAO;AAGX,YAAM2b,KAAakD,GAAclD,YAC3BnB,KAAaqE,GAAcrE,YAC3Bxa,KAAS6e,GAAc7e,QAEvB+lB,KAA6B54B,KAAK64B,IAAI,GAAG74B,KAAKkoB,KAAKloB,KAAK84B,KAAKtK,GAAW7lB,WAAAA,CAAAA,CAAAA;AA3DzD,UAACA;AAAAA,OAAAA,KA4DLiwB,MA3DCH,OACVA,KAAuB,MACvB7P,GAAW5E,MAAMiU,EAAAA,GACjBrP,GAAW5E,MAAMmU,EAAAA,GACjBvP,GAAW5E,MAAMoF,EAAAA,GACjBR,GAAW5E,MAAMqF,EAAAA,GACjBT,GAAW5E,MAAMsF,EAAAA,GACjBV,GAAW5E,MAAMoU,EAAAA,GACjBxP,GAAW5E,MAAMqU,EAAAA,GACjBzP,GAAW5E,MAAMsU,EAAAA,GACjB1P,GAAW5E,MAAMuU,EAAAA,GACjB3P,GAAW5E,MAAMwU,EAAAA,IAGrBC,KAAuB9vB,IAEvBsvB,KAAUrP,GAAWzE,QAAQ,EAAA,GAC7BgU,KAAsBvP,GAAWzE,QAA+B,IAAvBsU,EAAAA,GACzCrP,KAAeR,GAAWzE,QAAQ,IAAIsU,KAAuB,CAAA,GAC7DpP,KAAeT,GAAWzE,QAAQ,IAAIsU,KAAuB,CAAA,GAC7DnP,KAAYV,GAAWzE,QAAQ,IAAIsU,KAAuB,CAAA,GAC1DL,KAAgBxP,GAAWzE,QAA+B,IAAvBsU,EAAAA,GACnCJ,KAAYzP,GAAWzE,QAAQsU,EAAAA,GAC/BH,KAAY1P,GAAWzE,QAAQ,EAAA,GAC/BoU,KAAe3P,GAAWzE,QAAQ,EAAA,GAClCqU,KAAY5P,GAAWzE,QAAQ,CAAA;AAoCnC,YAAM4U,KAAgC/4B,KAAK64B,IAAI,GAAG74B,KAAKkoB,KAAKloB,KAAK84B,KAAKtK,GAAW9D,WAAWvqB,SAAS,EAAA,CAAA,CAAA;AAhC9E,UAAC64B;AAAAA,OAAAA,KAiCLD,MAhCEL,OACbA,KAA0B,KAC1B9P,GAAW5E,MAAMkU,EAAAA,GAGrBQ,KAA0BM,IAE1Bd,KAAgBtP,GAAWzE,QAAQ,KAAKuU,KAA0B,CAAA;AA2BtE,YAAMO,MAAez5B,KAAI,KAAK,GACxB05B,MAAez5B,KAAI,KAAK,GACxBsT,KAAQ/S,KAAKm5B,MAAoB,KAAdF,EAAAA,IAAmD,KAA/Bj5B,KAAKm5B,MAAoB,KAAdD,EAAAA,GAElDlpB,KAAS0hB,GAAc1hB,QACvBopB,KAAMppB,GAAOC,iBAAiBzQ,IAAGC,EAAAA;AAEvCmpB,MAAAA,GAAW3M,QAAQjY,IAAIgM,GAAO9F,KAAKyF,WAAW9P,QAAQo4B,KAAU,CAAA,GAChErP,GAAW5M,QAAQhY,IAAIwqB,GAAW3D,kBAAkBsN,KAAsB,CAAA,GAC1EvP,GAAW3M,QAAQjY,IAAIwqB,GAAW5lB,WAAWwgB,KAAe,CAAA,GAC5DR,GAAW3M,QAAQjY,IAAIwqB,GAAW3lB,WAAWwgB,KAAe,CAAA,GAC5DT,GAAW3M,QAAQjY,IAAIwqB,GAAW1lB,QAAQwgB,KAAY,CAAA,GACtDV,GAAW5M,QAAQhY,IAAIqpB,IAAY+K,KAAgB,CAAA,GACnDxP,GAAWhN,OAAO5X,IAAI6O,IAAQwlB,EAAAA,GAC9BzP,GAAW3M,QAAQjY,IAAIgM,GAAO9J,SAAS9F,KAAAA,GAAQk4B,KAAY,CAAA,GAC3D1P,GAAW3M,QAAQjY,IAAIo1B,GAAIh5B,KAAAA,GAAQm4B,KAAe,CAAA,GAClD3P,GAAW3M,QAAQjY,IAAIwqB,GAAW9D,YAAYwN,KAAgB,CAAA,GAE9DtP,GAAWyQ,UACPpB,IACAC,IACAC,IACA/O,IACAC,IACAC,IACA8O,IACAC,IACA7J,GAAW7lB,aACXoK,IACAulB,IACAC,IACAC,EAAAA;AAGJ,YAAMjlB,KAASqV,GAAW5M,QAAQwc,KAAY,CAAA;AAC9C,UAAe,eAAXjlB,IAAuB;AAEvB,eADcib,GAAWtE,SAAS3W,EAAAA;MAErC;AAED,aAAO;IAAI;EAElB;AAAA;",
  "names": ["Vector3", "x", "y", "z", "this", "v", "buffer", "t", "magnitude", "Math", "sqrt", "normalize", "length", "flat", "clone", "toString", "join", "value", "Quaternion", "w", "q", "l", "w1", "x1", "y1", "z1", "w2", "x2", "y2", "z2", "inverse", "vecQuat", "conjugate", "rotatedQuat", "multiply", "e", "halfX", "halfY", "halfZ", "cy", "cos", "sy", "sin", "cp", "sp", "cz", "sz", "toEuler", "sinr_cosp", "cosr_cosp", "atan2", "sinp", "abs", "sign", "PI", "asin", "siny_cosp", "cosy_cosp", "matrix", "m", "trace", "s", "axis", "angle", "halfAngle", "EventDispatcher", "constructor", "listeners", "Map", "addEventListener", "type", "listener", "has", "set", "Set", "get", "add", "removeEventListener", "delete", "hasEventListener", "dispatchEvent", "event", "Matrix4", "n11", "n12", "n13", "n14", "n21", "n22", "n23", "n24", "n31", "n32", "n33", "n34", "n41", "n42", "n43", "n44", "i", "a", "b", "determinant", "invert", "det", "Error", "invDet", "position", "rotation", "scale", "xx", "xy", "xz", "yy", "yz", "zz", "wx", "wy", "wz", "sx", "ObjectAddedEvent", "Event", "object", "super", "ObjectRemovedEvent", "ObjectChangedEvent", "Object3D", "positionChanged", "rotationChanged", "scaleChanged", "_position", "_rotation", "_scale", "_transform", "_changeEvent", "update", "applyPosition", "applyRotation", "applyScale", "_updateMatrix", "Compose", "equals", "forward", "apply", "transform", "Matrix3", "cx", "SplatData", "vertexCount", "positions", "rotations", "scales", "colors", "changed", "detached", "_vertexCount", "_positions", "Float32Array", "_rotations", "_scales", "_colors", "Uint8Array", "_selection", "translate", "translation", "rotate", "R", "RotationFromQuaternion", "currentRotation", "newRot", "serialize", "data", "RowLength", "f_buffer", "u_buffer", "reattach", "selection", "console", "assert", "byteLength", "Converter", "header", "properties", "push", "property", "headerBuffer", "TextEncoder", "encode", "plyRowLength", "plyLength", "output", "DataView", "ArrayBuffer", "offset", "scale_offset", "opacity_offset", "rot_offset", "pos0", "pos1", "pos2", "f_dc_0", "SH_C0", "f_dc_1", "f_dc_2", "alpha", "opacity", "log", "scale0", "scale1", "scale2", "rot0", "rot1", "rot2", "rot3", "setFloat32", "f_dc_offset", "Splat", "splat", "undefined", "selectedChanged", "_selected", "_data", "name", "format", "document", "now", "Date", "getFullYear", "getMonth", "getDate", "blob", "plyData", "SplatToPLY", "Blob", "link", "createElement", "download", "href", "URL", "createObjectURL", "click", "selected", "CameraData", "_fx", "_fy", "_near", "_far", "_width", "_height", "_projectionMatrix", "_viewMatrix", "_viewProj", "_updateProjectionMatrix", "fx", "width", "fy", "height", "far", "near", "projectionMatrix", "viewMatrix", "setSize", "viewProj", "Vector4", "Camera", "camera", "screenPointToRay", "clipSpaceCoords", "inverseProjectionMatrix", "cameraSpaceCoords", "inverseViewMatrix", "worldSpaceCoords", "subtract", "Scene", "_objects", "addObject", "objects", "removeObject", "index", "indexOf", "splice", "findObject", "predicate", "findObjectOfType", "reset", "objectsToRemove", "slice", "buffers", "async", "initiateFetchRequest", "url", "useCache", "req", "fetch", "mode", "credentials", "cache", "status", "loadRequestDataIntoBuffer", "res", "onProgress", "headers", "reader", "body", "getReader", "contentLength", "parseInt", "bytesRead", "done", "read", "chunks", "receivedLength", "chunk", "Loader", "scene", "Deserialize", "file", "FileReader", "onload", "target", "result", "onprogress", "loaded", "total", "readAsArrayBuffer", "Promise", "resolve", "onloadend", "PLYLoader", "_ParsePLYBuffer", "inputBuffer", "ubuf", "headerText", "TextDecoder", "decode", "header_end", "header_end_index", "exec", "rowOffset", "offsets", "double", "int", "uint", "float", "short", "ushort", "uchar", "prop", "split", "filter", "k", "startsWith", "_p", "dataView", "q_polycam", "FromEuler", "rgba", "Uint8ClampedArray", "rot", "r0", "r1", "r2", "r3", "forEach", "getFloat32", "getInt32", "exp", "temp", "A", "Q", "F", "U", "B", "d", "ShaderProgram", "renderer", "passes", "_scene", "_camera", "_started", "_initialized", "_renderer", "gl", "_program", "createProgram", "_passes", "vertexShader", "createShader", "VERTEX_SHADER", "shaderSource", "_getVertexSource", "compileShader", "getShaderParameter", "COMPILE_STATUS", "error", "getShaderInfoLog", "fragmentShader", "FRAGMENT_SHADER", "_getFragmentSource", "attachShader", "program", "linkProgram", "getProgramParameter", "LINK_STATUS", "getProgramInfoLog", "resize", "useProgram", "_resize", "initialize", "_initialize", "pass", "render", "dispose", "_render", "_dispose", "started", "loadWasm", "moduleArg", "readyPromiseResolve", "readyPromiseReject", "Module", "reject", "readBinary", "moduleOverrides", "Object", "assign", "scriptDirectory", "self", "location", "substr", "replace", "lastIndexOf", "xhr", "XMLHttpRequest", "open", "responseType", "send", "response", "bind", "wasmBinary", "wasmMemory", "err", "tryParseAsDataURI", "filename", "isDataURI", "decoded", "atob", "bytes", "charCodeAt", "dataURIPrefix", "WebAssembly", "abort", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "ABORT", "updateMemoryViews", "Int8Array", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float64Array", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runDependencies", "dependenciesFulfilled", "what", "RuntimeError", "wasmBinaryFile", "path", "getBinaryPromise", "binaryFile", "then", "binary", "instantiateAsync", "imports", "callback", "receiver", "instantiate", "reason", "callRuntimeCallbacks", "callbacks", "shift", "embind_charCodes", "BindingError", "readLatin1String", "ptr", "ret", "c", "awaitingDependencies", "registeredTypes", "throwBindingError", "message", "registerType", "rawType", "registeredInstance", "options", "TypeError", "hasOwnProperty", "ignoreDuplicateRegistrations", "cb", "emval_freelist", "emval_handles", "count_emval_handles", "Emval", "handle", "pop", "readPointer", "pointer", "EmValType", "fromWireType", "rv", "toWireType", "destructors", "argPackAdvance", "readValueFromPointer", "destructorFunction", "floatReadValueFromPointer", "integerReadValueFromPointer", "signed", "UTF8Decoder", "UTF8ToString", "maxBytesToRead", "heapOrArray", "idx", "endIdx", "endPtr", "subarray", "str", "u0", "u1", "u2", "String", "fromCharCode", "ch", "UTF16Decoder", "UTF16ToString", "maxIdx", "codeUnit", "stringToUTF16", "outPtr", "maxBytesToWrite", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "lengthBytesUTF32", "len", "growMemory", "size", "pages", "grow", "codes", "Array", "embind_init_charCodes", "wasmImports", "f", "primitiveType", "minRange", "maxRange", "trueValue", "falseValue", "wt", "o", "h", "bitshift", "isUnsignedType", "includes", "dataTypeIndex", "TA", "decodeMemoryView", "stdStringIsUTF8", "payload", "decodeStartPtr", "currentBytePtr", "stringSegment", "_free", "valueIsOfTypeString", "base", "_malloc", "heap", "outIdx", "u", "startIdx", "charCode", "charSize", "decodeString", "encodeString", "readCharAt", "lengthBytesUTF", "j", "isVoid", "g", "requestedSize", "oldSize", "maxHeapSize", "multiple", "cutDown", "overGrownHeapSize", "min", "newSize", "max", "wasmExports", "info", "receiveInstance", "instance", "module", "exports", "unshift", "id", "_a", "removeRunDependency", "catch", "createWasm", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10", "calledRun", "run", "doRun", "postRun", "preRun", "setTimeout", "runCaller", "ready", "RenderData", "dataChanged", "transformsChanged", "_updating", "_dirty", "splatIndex", "_splatIndices", "_offsets", "lookup", "ceil", "_transformsWidth", "_transformsHeight", "_transforms", "_transformIndicesWidth", "_transformIndicesHeight", "_transformIndices", "_worker", "DataWorker", "updateTransform", "wasmModule", "onmessage", "worldPositions", "worldRotations", "worldScales", "initWasm", "buildImmediate", "waitForWasm", "positionsPtr", "rotationsPtr", "scalesPtr", "colorsPtr", "selectionPtr", "dataPtr", "worldPositionsPtr", "worldRotationsPtr", "worldScalesPtr", "_pack", "outData", "build", "serializedSplat", "postMessage", "getSplat", "key", "getLocalIndex", "markDirty", "rebuild", "clear", "terminate", "keys", "transforms", "transformsWidth", "transformsHeight", "transformIndices", "transformIndicesWidth", "transformIndicesHeight", "needsRebuild", "updating", "Color32", "r", "flatNorm", "toHexString", "map", "padStart", "RenderProgram", "_outlineThickness", "_outlineColor", "_renderData", "_depthIndex", "_chunks", "_splatTexture", "canvas", "worker", "u_projection", "u_viewport", "u_focal", "u_view", "u_texture", "u_transforms", "u_transformIndices", "u_outlineThickness", "u_outlineColor", "positionAttribute", "indexAttribute", "transformsTexture", "transformIndicesTexture", "vertexBuffer", "indexBuffer", "getUniformLocation", "uniformMatrix4fv", "uniform2fv", "createWorker", "SortWorker", "depthIndex", "bindBuffer", "ARRAY_BUFFER", "bufferData", "STATIC_DRAW", "handleObjectAdded", "handleObjectRemoved", "handleObjectChanged", "uniform1f", "outlineThickness", "uniform4fv", "outlineColor", "createTexture", "uniform1i", "createBuffer", "getAttribLocation", "enableVertexAttribArray", "vertexAttribPointer", "FLOAT", "renderData", "activeTexture", "TEXTURE0", "bindTexture", "TEXTURE_2D", "splatTexture", "texParameteri", "TEXTURE_WRAP_S", "CLAMP_TO_EDGE", "TEXTURE_WRAP_T", "TEXTURE_MIN_FILTER", "NEAREST", "TEXTURE_MAG_FILTER", "texImage2D", "RGBA32UI", "RGBA_INTEGER", "UNSIGNED_INT", "TEXTURE1", "RGBA32F", "RGBA", "TEXTURE2", "R32UI", "RED_INTEGER", "detachedPositions", "detachedTransforms", "detachedTransformIndices", "sortData", "viewport", "clearColor", "COLOR_BUFFER_BIT", "disable", "DEPTH_TEST", "enable", "BLEND", "blendFuncSeparate", "ONE_MINUS_DST_ALPHA", "ONE", "blendEquationSeparate", "FUNC_ADD", "vertexAttribIPointer", "INT", "vertexAttribDivisor", "drawArraysInstanced", "TRIANGLE_FAN", "deleteTexture", "deleteBuffer", "_setOutlineThickness", "_setOutlineColor", "FadeInPass", "speed", "renderProgram", "u_useDepthFade", "u_depthFade", "active", "WebGLRenderer", "optionalCanvas", "optionalRenderPasses", "_backgroundColor", "style", "display", "boxSizing", "margin", "padding", "appendChild", "background", "_canvas", "_gl", "getContext", "antialias", "renderPasses", "_renderProgram", "programs", "clientWidth", "clientHeight", "addProgram", "removeProgram", "backgroundColor", "OrbitControls", "beta", "radius", "enableKeyboardControls", "inputTarget", "minAngle", "maxAngle", "minZoom", "maxZoom", "orbitSpeed", "panSpeed", "zoomSpeed", "dampening", "setCameraTarget", "desiredTarget", "desiredAlpha", "desiredBeta", "desiredRadius", "dragging", "panning", "lastDist", "lastX", "lastY", "isUpdatingCamera", "eulerRotation", "newTarget", "dx", "dy", "dz", "computeZoomNorm", "onKeyDown", "code", "onKeyUp", "onMouseDown", "preventDefault", "button", "clientX", "clientY", "window", "onMouseUp", "onMouseMove", "zoomNorm", "panX", "panY", "right", "up", "onWheel", "deltaY", "onTouchStart", "touches", "distX", "distY", "onTouchEnd", "onTouchMove", "dist", "touchX", "touchY", "lerp", "direction", "rx", "ry", "moveSpeed", "rotateSpeed", "stopPropagation", "Plane", "normal", "point", "origin", "denominator", "dot", "ShaderPass", "currentScript", "src", "a11", "a12", "IntersectionTester", "viewPtr", "transformsPtr", "transformIndicesPtr", "depthIndexPtr", "chunksPtr", "originPtr", "directionPtr", "resultPtr", "allocatedVertexCount", "allocatedTransformCount", "testPoint", "targetAllocatedVertexCount", "pow", "log2", "targetAllocatedTransformCount", "transformCount", "normalizedX", "normalizedY", "floor", "ray", "_evaluate"]
}
